<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>weijiajin</title>
  <icon>https://cdn.jsdelivr.net/gh/wejudging/wejudging.github.io/source/images/logo.png</icon>
  <subtitle>「Stay Hungry.Stay Foolish.」 | 求知若饥，虚心若愚</subtitle>
  <link href="https://weijiajin.com/atom.xml" rel="self"/>
  
  <link href="https://weijiajin.com/"/>
  <updated>2022-03-06T13:52:01.603Z</updated>
  <id>https://weijiajin.com/</id>
  
  <author>
    <name>weijiajin</name>
    <email>wejudging@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++程序设计简答题</title>
    <link href="https://weijiajin.com/09e968b5929a/"/>
    <id>https://weijiajin.com/09e968b5929a/</id>
    <published>2022-03-06T13:01:25.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1、简述你对C-中的数据类型和抽象数据类型（ADTs）的理解"><a href="#1、简述你对C-中的数据类型和抽象数据类型（ADTs）的理解" class="headerlink" title="1、简述你对C++中的数据类型和抽象数据类型（ADTs）的理解"></a>1、简述你对C++中的数据类型和抽象数据类型（ADTs）的理解</h4><p>答：数据类型是⼀组性质相同的具有⼀定范围的值集以及定义于这个值集上的⼀组操作。数据类型既有内部数据类型，如int，char，float，bool等，⼜有⾃定义外部数据类型，如枚举类型，结构类型，联合类型，数组类型、类类型。ADT即抽象数据类型，是基于已有类型⽽组合⽣成的复合数据类型，类正是抽象数据类型的描述形式。</p><h4 id="2、阐述C-在什么情况下必须进⾏运算符重载"><a href="#2、阐述C-在什么情况下必须进⾏运算符重载" class="headerlink" title="2、阐述C++在什么情况下必须进⾏运算符重载"></a>2、阐述C++在什么情况下必须进⾏运算符重载</h4><p>答：只有当⼆元运算符最左边的操作数是该类的⼀个对象，或者当⼀元运算符的操作数是该类的⼀个对象时，才有必要进⾏运算符重载。</p><h4 id="3、为什么说继承是C-⾯向对象的⼀个主要特征之⼀"><a href="#3、为什么说继承是C-⾯向对象的⼀个主要特征之⼀" class="headerlink" title="3、为什么说继承是C++⾯向对象的⼀个主要特征之⼀"></a>3、为什么说继承是C++⾯向对象的⼀个主要特征之⼀</h4><p>答：继承是软件重⽤的⼀种形式，程序员创建的新类通过继承这⼀⽅式 ，从现有的类中吸收其数据和⾏为，再根据新类的特征，即对象的特征，赋予其新的数据和⾏为，并通过新的功能进⼀步提⾼，在⾯向对象的程序设计中，采⽤继承⽅式来组织设计系统的类，可以提⾼程序的抽象程度，更接近⼈的思维⽅式，使程序结构更清晰并降低编码和维护的⼯作量。</p>]]></content>
    
    
    <summary type="html">C++既可以进行C语言的过程化程序设计，又可以进行以抽象数据类型为特点的基于对象的程序设计，还可以进行以继承和多态为特点的面向对象的程序设计。</summary>
    
    
    
    <category term="C++" scheme="https://weijiajin.com/blog/categories/C/"/>
    
    
    <category term="C++" scheme="https://weijiajin.com/blog/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>油桃豆江</title>
    <link href="https://weijiajin.com/3603fcb54fb1/"/>
    <id>https://weijiajin.com/3603fcb54fb1/</id>
    <published>2021-10-24T16:10:07.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>每天给你一句晚安<br>直至相逢<br>那时亲口说予你听</p><p>说来缘分<br>脸红心跳<br>你是我心中的星星与灯塔</p><p>你喜欢画画<br>我喜欢你画的画<br>一幅二次元的画</p><p>每次晚安<br>我幸福的入睡<br>生活好像并没有那么无趣</p><p>天气突然转凉了<br>有小雨，觉不怎么冷<br>缘有喜欢的人了</p><p>我以为我已经被世界遗忘<br>可你还记得我的存在<br>你留心于我，我倾心于你</p><p>清晨远方的你和我一样睡眼朦胧<br>倘若昨夜是一场梦<br>我不想这时醒来</p><p>我清清楚楚知晓世界的美好<br>没人分享是我悲伤的缘由<br>我喜欢的歌单满是伤感的歌</p><p>我脸红地对着屏幕说晚安<br>带着欢喜与喜欢<br>我想，你也是</p><p>小时候我想要星河与浪漫<br>现在我已经长大了<br>我想要油桃与豆江</p><p>看见一个女孩头上一朵朴素的花<br>想起回忆里那个朴素的女孩<br>只有我自己知道自己往往偏心于朴素</p><p>十月桂花伴着寒风<br>清晨或晚上<br>每每路过一阵飘香</p><p>我还未主动寻她<br>她的花香<br>已飘进我的脑海里</p><p>以后定要停下来轻轻寻她<br>告诉她我多么喜欢她的花香<br>就如要去奔赴你一般欢喜</p><p>总是后悔当初没有勇敢一点<br>如果有一天我们兜兜转转再一次相遇<br>我一定会不顾一切紧紧抱着你</p><p>怀着对世界上一切美好事物的感激，我就此落笔。那么，就到此为止吧。</p><p>魏家劲<br>2021年10月24日</p>]]></content>
    
    
    <summary type="html">怀着对世界上一切美好事物的感激，我就此落笔。那么，就到此为止吧。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>Azure Linux 磁盘扩容</title>
    <link href="https://weijiajin.com/a81e04117a40/"/>
    <id>https://weijiajin.com/a81e04117a40/</id>
    <published>2021-05-10T00:00:00.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>进入 azure 改磁盘大小,重启后进入系统会发现磁盘大小没变，因为没扩容。</p><p>本系统为centos7</p><h4 id="安装-growpart"><a href="#安装-growpart" class="headerlink" title="安装 growpart"></a>安装 growpart</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure><h4 id="安装-growpart-1"><a href="#安装-growpart-1" class="headerlink" title="安装 growpart"></a>安装 growpart</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y cloud-utils</span><br></pre></td></tr></table></figure><h4 id="修改系统语言为为英文语言与编码"><a href="#修改系统语言为为英文语言与编码" class="headerlink" title="修改系统语言为为英文语言与编码"></a>修改系统语言为为英文语言与编码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><h4 id="扩-容块设备并重启"><a href="#扩-容块设备并重启" class="headerlink" title="扩-容块设备并重启"></a>扩-容块设备并重启</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">growpart /dev/sda 2</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="重启后执行"><a href="#重启后执行" class="headerlink" title="重启后执行"></a>重启后执行</h4><h5 id="xfs-文件系统-azure"><a href="#xfs-文件系统-azure" class="headerlink" title="xfs 文件系统 (azure)"></a>xfs 文件系统 (azure)</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xfs_growfs /dev/sda2</span><br></pre></td></tr></table></figure><h5 id="ext4-文件系统"><a href="#ext4-文件系统" class="headerlink" title="ext4 文件系统"></a>ext4 文件系统</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">resize2fs /dev/sda2 </span><br></pre></td></tr></table></figure><h4 id="查看是否-ok"><a href="#查看是否-ok" class="headerlink" title="查看是否 ok"></a>查看是否 ok</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -TH</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Azure Linux 磁盘扩容</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="Azure" scheme="https://weijiajin.com/blog/tags/Azure/"/>
    
    <category term="Microsoft" scheme="https://weijiajin.com/blog/tags/Microsoft/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft 365 E5 开发者</title>
    <link href="https://weijiajin.com/c185ab0f381d/"/>
    <id>https://weijiajin.com/c185ab0f381d/</id>
    <published>2021-04-26T14:12:39.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<h3 id="立即加入-Microsoft-365-开发人员计划"><a href="#立即加入-Microsoft-365-开发人员计划" class="headerlink" title="立即加入 Microsoft 365 开发人员计划"></a>立即加入 Microsoft 365 开发人员计划</h3><ul><li>获取免费、可续订的 90 天 Microsoft 365 E5 开发人员订阅;</li><li>包括SharePoint、OneDrive、Outlook、Exchange、Teams、Planner、Word、Excel、PowerPoint；</li><li>订阅包含 25 个用于所有 Microsoft 365 应用的许可证</li><li>OneDrive每个用户的网盘容量上限为 5TB；</li></ul><p>申请链接：<a href="https://developer.microsoft.com/zh-cn/office/dev-program">https://developer.microsoft.com/zh-cn/office/dev-program</a><br>Microsoft 365 E5 开发者管理页： <a href="https://admin.microsoft.com/">https://admin.microsoft.com/</a></p><h3 id="网盘扩容"><a href="#网盘扩容" class="headerlink" title="网盘扩容"></a>网盘扩容</h3><p>打开 <a href="https://admin.onedrive.com/">https://admin.onedrive.com</a> 登录之后在左方菜单中选择「存储」该项，将默认存储改为 5120，即 5TB。<br>但是管理员账号的容量此刻依旧为1TB，接下来更改管理员容量。</p><h3 id="修改全局管理员自身的5T容量"><a href="#修改全局管理员自身的5T容量" class="headerlink" title="修改全局管理员自身的5T容量"></a>修改全局管理员自身的5T容量</h3><ul><li>我们先安装最新的 SharePoint Online Management Shell → <a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=35588">下载地址</a>；</li><li>点击电脑左下角开始按钮，搜索PowerShell，然后单击Windows PowerShell，此时会弹出一个命令框。<br>依次输入命令：</li></ul><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#adminUPN为管理员邮箱，orgName为你设置的组织名</span></span><br><span class="line"><span class="variable">$adminUPN</span>=<span class="string">&quot;admin@weijiajin.onmicrosoft.com&quot;</span></span><br><span class="line"><span class="variable">$orgName</span>=<span class="string">&quot;weijiajin&quot;</span></span><br><span class="line"><span class="comment">#该步会弹出一个窗口，会要求你输入邮箱密码</span></span><br><span class="line"><span class="variable">$userCredential</span> = Get-Credential -UserName <span class="variable">$adminUPN</span> -Message <span class="string">&quot;Type the password.&quot;</span></span><br><span class="line">Connect-SPOService -Url https:<span class="regexp">//</span><span class="variable">$orgName</span>-admin.sharepoint.com -Credential <span class="variable">$userCredential</span></span><br><span class="line"><span class="comment">#这里默认修改为5T，如果你要修改为其它的可自行修改，单位为M，最大可修改为5T</span></span><br><span class="line">Set-SPOTenant -OneDriveStorageQuota <span class="number">5242880</span></span><br><span class="line"><span class="comment">#将后面的地址修改成你的OneDrive网盘地址，地址仿照下面的即可</span></span><br><span class="line">Set-SPOSite -Identity https:<span class="regexp">//</span>weijiajin-my.sharepoint.com<span class="regexp">/personal/</span>admin_weijiajin_onmicrosoft_com -StorageQuota <span class="number">5242880</span></span><br></pre></td></tr></table></figure><p><strong>如果你要修改现有用户的容量的话，将最后一步的OneDrive网盘地址替换成你想修改的用户地址即可。</strong></p><h3 id="微软OneDrive网盘免费升级到25T容量教程"><a href="#微软OneDrive网盘免费升级到25T容量教程" class="headerlink" title="微软OneDrive网盘免费升级到25T容量教程"></a>微软OneDrive网盘免费升级到25T容量教程</h3><p>如果OneDrive 5T不够用，这里分享个免费升级25T的方法，也是微软很早就出的一个政策，部分订阅的OneDrive网盘使用量超过90%的可免费申请提高容量到25T，有需求的可以升级下。</p><h3 id="申请方法（未试）"><a href="#申请方法（未试）" class="headerlink" title="申请方法（未试）"></a>申请方法（未试）</h3><p>提示：以下申请操作都需要全局管理员操作，如果需求大，也可以给自己其它的账号也升级到25T。</p><ul><li><p>管理员登录后台→<a href="https://admin.microsoft.com/Adminportal/Home">传送门</a>，点击左侧支持-新建服务请求；</p></li><li><p>然后在帮助框写下： 请帮助我吧 <a href="mailto:&#x61;&#100;&#109;&#105;&#x6e;&#64;&#119;&#x65;&#105;&#x6a;&#105;&#97;&#x6a;&#x69;&#x6e;&#46;&#x6f;&#110;&#x6d;&#105;&#99;&#114;&#x6f;&#115;&#x6f;&#102;&#x74;&#x2e;&#x63;&#x6f;&#x6d;">&#x61;&#100;&#109;&#105;&#x6e;&#64;&#119;&#x65;&#105;&#x6a;&#105;&#97;&#x6a;&#x69;&#x6e;&#46;&#x6f;&#110;&#x6d;&#105;&#99;&#114;&#x6f;&#115;&#x6f;&#102;&#x74;&#x2e;&#x63;&#x6f;&#x6d;</a> 账户的 onedrive 容量升级至25T；</p></li><li><p>然后填上管理员邮箱，附件上传几张该账号容量超过90%的截图，包括账户信息；</p></li><li><p>最后发送即可，截图不规范的，中途可能会有工作人员打电话要你重新发图片给他；</p></li><li><p>最后等一天，成功的邮件就会发给你，然后这时候你就照着邮件给的方法自行升级到25T。</p></li></ul><h3 id="Microsoft-365-E5-开发者-开源自动订阅程序"><a href="#Microsoft-365-E5-开发者-开源自动订阅程序" class="headerlink" title="Microsoft 365 E5 开发者 开源自动订阅程序"></a>Microsoft 365 E5 开发者 开源自动订阅程序</h3><p>教程地址：<a href="https://qyi.io/archives/687.html">https://qyi.io/archives/687.html</a><br>项目地址：<a href="https://github.com/luoye663/e5">https://github.com/luoye663/e5</a><br>自动订阅程序： <a href="https://e5.qyi.io/">https://e5.qyi.io/</a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Microsoft 365 E5 开发者 主要可以白嫖Office与onedrive 5T大容量还可以存储一些大文件，下载也很方便，如果可以一直自动续费那是相当不错的，值得推荐使用。比国内的网盘好太多，速度也很不错！office也没有广告，一些想用正版Office也很推荐。</p><h3 id="后续补充"><a href="#后续补充" class="headerlink" title="后续补充"></a>后续补充</h3><div class="tag-plugin timeline"><div class="timenode" item="1"><div class="header"><p>2021 年 6 月 16 日</p></div><div class="body fs14"><p>续订成功</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/wejudging/wejudging.github.io@main/source/images/文章图片/365/365renew.png" style="width:500px;"/></div></div></div></div></div>]]></content>
    
    
    <summary type="html">立即加入 Microsoft 365 开发人员计划，获取免费、可续订的 90 天 Microsoft 365 E5 开发人员订阅。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="onedrive" scheme="https://weijiajin.com/blog/tags/onedrive/"/>
    
    <category term="microsoft" scheme="https://weijiajin.com/blog/tags/microsoft/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Actions 实现 Hexo 自动部署</title>
    <link href="https://weijiajin.com/8bea8845151c/"/>
    <id>https://weijiajin.com/8bea8845151c/</id>
    <published>2021-04-21T00:00:00.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>首先我们先要在本地确保 Hexo 是可以正确运行的，比如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>确认 _config.yml 文件中有类似如下的 GitHub Pages 配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/wejudging/wejudging.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：请将 repository 修改为你自己的仓库地址。</p></blockquote><h3 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;Hexo Deploy Key&quot;</span> -f github-deploy-key -N <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>当前目录生成两个文件：</p><ul><li>github-deploy-key —— 私钥</li><li>github-deploy-key.pub —— 公钥</li></ul><h3 id="GitHub配置秘钥"><a href="#GitHub配置秘钥" class="headerlink" title="GitHub配置秘钥"></a>GitHub配置秘钥</h3><p><strong>把私钥放到我们存放 Hexo 原始文件的代码仓库里面，用于触发 Actions 时使用;</strong><br><strong>把公钥放到 GitHub Pages 对应的代码仓库里面，用于 Hexo 部署时的写入工作</strong></p><h4 id="配置私钥"><a href="#配置私钥" class="headerlink" title="配置私钥"></a>配置私钥</h4><ul><li>首先在 GitHub 上打开保存 Hexo 的仓库，访问 Settings -&gt; Secrets，然后选择 New secret;</li><li>名字部分填写：HEXO_DEPLOY_KEY，注意大小写，这个后面的 GitHub Actions Workflow 要用到;</li><li>在 Value 的部分填入 github-deploy-key 中的内容。</li></ul><h4 id="添加公钥"><a href="#添加公钥" class="headerlink" title="添加公钥"></a>添加公钥</h4><ul><li>接下来我们需要访问存放网页的仓库，也就是 Hexo 部署以后的仓库，访问 Settings -&gt; Deploy keys;</li><li>按 Add deploy key 来添加一个新的公钥；</li><li>在 Title中输入：HEXO_DEPLOY_PUB 字样，当然也可以填写其它自定义的名字;</li><li>在 Key 中粘贴 github-deploy-key.pub文件的内容。</li></ul><blockquote><p>注意：一定要勾选 Allow write access 来打开写权限，否则无法写入会导致部署失败。</p></blockquote><h3 id="创建-Workflow"><a href="#创建-Workflow" class="headerlink" title="创建 Workflow"></a>创建 Workflow</h3><p><strong>在 Hexo 的仓库中创建一个新文件：.github&#x2F;workflows&#x2F;auto_deploy.yml，文件的内容如下:</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span> <span class="comment"># workflow name</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  [<span class="string">push</span>] <span class="comment"># 触发事件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span> <span class="comment"># job1 id</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> <span class="comment"># 运行环境为最新版 Ubuntu</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="comment"># step1 获取源码</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span> <span class="comment"># 使用 actions/checkout@v1</span></span><br><span class="line">      <span class="attr">with:</span> <span class="comment"># 条件</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span> <span class="comment"># Checkout private submodules(themes or something else). 当有子模块时切换分支？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">10.</span><span class="string">x</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;10.x&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Public</span> <span class="string">Files</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm i</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string">        hexo clean &amp;&amp; hexo generate</span></span><br><span class="line"><span class="string"></span>    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">external_repository:</span> <span class="string">wejudging/wejudging.github.io</span></span><br><span class="line">        <span class="attr">publish_branch:</span> <span class="string">public</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">        <span class="attr">commit_message:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_name:</span> <span class="string">&#x27;github-actions[bot]&#x27;</span></span><br><span class="line">        <span class="attr">user_email:</span> <span class="string">&#x27;github-actions[bot]@users.noreply.github.com&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>以上就是 GitHub Actions 自动部署 Hexo 到 GitHub Pages 的方法。</strong></p>]]></content>
    
    
    <summary type="html">GitHub Actions 自动部署 Hexo 到 GitHub Pages 的方法</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="Hexo" scheme="https://weijiajin.com/blog/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://weijiajin.com/blog/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>近日随笔</title>
    <link href="https://weijiajin.com/43e2c80e2fdb/"/>
    <id>https://weijiajin.com/43e2c80e2fdb/</id>
    <published>2021-04-20T22:12:39.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdelivr.net/gh/wejudging/wejudging.github.io/source/images/文章图片/zuowang001.JPG" alt="朋友圈拍摄"/><a class="image-download blur" style="opacity:0" href="https://cdn.jsdelivr.net/gh/wejudging/wejudging.github.io/source/images/文章图片/zuowang001.JPG"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">朋友圈拍摄</span></div></div><p>我这稍晚的青春<br>今天是朦胧的太阳<br>人也是朦胧的<br>看见一个女孩头上一朵朴素的花</p><p>太阳纯粹<br>喜欢的女孩也纯粹</p><p>我没有青春，或者说还未有过青春。我想用稍晚的青春和清澈的心情，写一封言语由衷的信给我心爱姑娘。我们五指张开，十指相扣，自然，牢固，温暖，感动。</p><p>怎会坚持去爱你，真的爱一个人，是自然而然，细水长流，是想一直爱你。宛若两份孤独相逢，历久弥新，细水长流。</p><p>因为遇到了温柔可爱的人，所以觉得世界可爱温柔。</p><p>遇见你之后的时光，每一天，都很美好。</p><p>昨晚欣喜了一晚上，真的如诗一般，我想你，你便来了。</p><p>被喜欢的人也许不知道，一句晚安便是他听过最好的情话。</p><p>王小波说“生为冰山，，就该淡淡地爱海流、爱风，并且在偶然接触时，全心全意地爱另一块冰山。”我想我遇见了自己的另一块冰山，她带来欢笑，我有幸得到。我悄悄的写下所有情话，想读给未来的你来听，那是我细腻想你的心思。</p>]]></content>
    
    
    <summary type="html">生为冰山，，就该淡淡地爱海流、爱风，并且在偶然接触时，全心全意地爱另一块冰山。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="zuowang" scheme="https://weijiajin.com/blog/tags/zuowang/"/>
    
  </entry>
  
  <entry>
    <title>CRC码计算及校验原理的最通俗诠释</title>
    <link href="https://weijiajin.com/cfea251a3f8f/"/>
    <id>https://weijiajin.com/cfea251a3f8f/</id>
    <published>2021-04-09T21:18:30.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p><strong>CRC校验原理</strong><br>CRC校验原理看起来比较复杂，好难懂，因为大多数书上基本上是以二进制的多项式形式来说明的。其实很简单的问题，其根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“模2除法”）。到达接收端后，再把接收到的新帧除以（同样采用“模2除法”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。</p><p>【说明】“模2除法”与“算术除法”类似，但它既不向上位借位，也不比较除数和被除数的相同位数值的大小，只要以相同位数进行相除即可。模2加法运算为：1+1&#x3D;0，0+1&#x3D;1，0+0&#x3D;0，无进位，也无借位；模2减法运算为：1-1&#x3D;0，0-1&#x3D;1，1-0&#x3D;1，0-0&#x3D;0，也无进位，无借位。相当于二进制中的逻辑异或运算。也就是比较后，两者对应位相同则结果为“0”，不同则结果为“1”。如100101除以1110，结果得到商为11，余数为1，如图所示。如11×11&#x3D;101，如图所示。</p><p><img src="https://pic4.zhimg.com/80/v2-5b45e4b97f0eff80ff0d0c0a58385d97_1440w.jpg" alt="img"></p><p>具体来说，CRC校验原理就是以下几个步骤：</p><p>（1）先选择（可以随机选择，也可按标准选择，具体在后面介绍）一个用于在接收端进行校验时，对接收的帧进行除法运算的除数（是二进制比较特串，通常是以多项方式表示，所以CRC又称多项式编码方法，这个多项式也称之为“生成多项式”）。</p><p>（2）看所选定的除数二进制位数（假设为k位），然后在要发送的数据帧（假设为m位）后面加上k-1位“0”，然后以这个加了k-1个“0“的新帧（一共是m+k-1位）以“模2除法”方式除以上面这个除数，所得到的余数（也是二进制的比特串）就是该帧的CRC校验码，也称之为FCS（帧校验序列）。但要注意的是，余数的位数一定要是比除数位数只能少一位，哪怕前面位是0，甚至是全为0（附带好整除时）也都不能省略。</p><p>（3）再把这个校验码附加在原数据帧（就是m位的帧，注意不是在后面形成的m+k-1位的帧）后面，构建一个新帧发送到接收端，最后在接收端再把这个新帧以“模2除法”方式除以前面选择的除数，如果没有余数，则表明该帧在传输过程中没出错，否则出现了差错。<br>通过以上介绍，大家一定可以理解CRC校验的原理，并且不再认为很复杂吧。</p><p>从上面可以看出，CRC校验中有两个关键点：一是要预先确定一个发送端和接收端都用来作为除数的二进制比特串（或多项式）；二是把原始帧与上面选定的除进行二进制除法运算，计算出FCS。前者可以随机选择，也可按国际上通行的标准选择，但最高位和最低位必须均为“1”，如在IBM的SDLC（同步数据链路控制）规程中使用的CRC-16（也就是这个除数一共是17位）生成多项式g（x）&#x3D; x16 + x15 + x2 +1（对应二进制比特串为：11000000000000101）；而在ISO HDLC（高级数据链路控制）规程、ITU的SDLC、X.25、V.34、V.41、V.42等中使用CCITT-16生成多项式g（x）&#x3D;x16 + x15 + x5 +1（对应二进制比特串为：11000000000100001）。<br><strong>CRC校验码的计算示例</strong><br>由以上分析可知，既然除数是随机，或者按标准选定的，所以CRC校验的关键是如何求出余数，也就是CRC校验码。</p><p>下面以一个例子来具体说明整个过程。现假设选择的CRC生成多项式为G（X） &#x3D; X4 + X3 + 1，要求出二进制序列10110011的CRC校验码。下面是具体的计算过程：<br>（1）首先把生成多项式转换成二进制数，由G（X） &#x3D; X4 + X3 + 1可以知道（，它一共是5位（总位数等于最高位的幂次加1，即4+1&#x3D;5），然后根据多项式各项的含义（多项式只列出二进制值为1的位，也就是这个二进制的第4位、第3位、第0位的二进制均为1，其它位均为0）很快就可得到它的二进制比特串为11001。<br>（2）因为生成多项式的位数为5，根据前面的介绍，得知CRC校验码的位数为4（校验码的位数比生成多项式的位数少1）。因为原数据帧10110011，在它后面再加4个0，得到101100110000，然后把这个数以“模2除法”方式除以生成多项式，得到的余数，即CRC校验码为0100，如图所示。注意参考前面介绍的“模2除法”运算法则。</p><p><img src="https://pic1.zhimg.com/v2-15db3e5f6ebd50ba931955b53b3c6dbc_r.jpg" alt="img"></p><p>（3）把上步计算得到的CRC校验码0100替换原始帧101100110000后面的四个“0”，得到新帧101100110100。再把这个新帧发送到接收端。</p><p>（4）当以上新帧到达接收端后，接收端会把这个新帧再用上面选定的除数11001以“模2除法”方式去除，验证余数是否为0，如果为0，则证明该帧数据在传输过程中没有出现差错，否则出现了差错。 通过以上CRC校验原理的剖析和CRC校验码的计算示例的介绍，大家应该对这种看似很复杂的CRC校验原理和计算方法应该比较清楚了。</p><p>转自知乎：</p><p><a href="https://zhuanlan.zhihu.com/p/338068105">CRC码计算及校验原理的最通俗诠释 - 小太阳的文章 </a></p><p>2021年04月09日</p>]]></content>
    
    
    <summary type="html">CRC校验原理看起来比较复杂，好难懂，因为大多数书上基本上是以二进制的多项式形式来说明的。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>海明校验码是怎么实现的？</title>
    <link href="https://weijiajin.com/4f98d17a6171/"/>
    <id>https://weijiajin.com/4f98d17a6171/</id>
    <published>2021-04-09T10:09:39.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>如何一步步推导出海明码。</p><p>先提一个基本中的基本，异或。异或是两个数字相异则为1，相同则为0。举例1异或0&#x3D;1，0异或0&#x3D;0，1异或1&#x3D;0。</p><p>为什么要提异或呢，因为异或是校验中最为根本的一个东西。假设我有原码1111和错误传输1110以及正确传输1111，那么我怎么能隐藏数据内容直接更快更好的知道数据是否传输错误了呢？</p><p>按位异或，如果无错，则异或值必全为0。1111与1111的异或为0000，1111与1110的异或为0001，看出来了吧，异或在校验中有着极为基本的作用。</p><p>那么我们为什么要提出海明码？直接用奇偶校验不行吗？</p><p>不行，因为奇偶校验只能发现错误，不能追溯错误。所以我们提出了一个疑问，怎么能校验错误并寻找到错误的根源？（先讨论最基本的情况，即只发生一位错误）</p><p>那么将问题具体化就是：假设我要传输一个四位数据，想要对此数据进行校验并能够定位错误位置，我该如何设计？</p><p>首先考虑校验码的位数问题。</p><p>首先要明确的是校验码的位数加上数据的位数必须能够被校验码表示。即假设数据4位，校验码2位，则共有6位，但校验码2位只能标识4种状态，4&lt;6，不能表示清楚每一个位置。所以要增加校验码至3位。</p><p>但于此同时又有一个问题，假设我有5位数据，我可不可以使用3位校验码？5+3&#x3D;2^3，看起来刚好能够表示每个位置的数据，但这是不可以的。比如我传输的数据是11111，结果传输错误，传输成了01111，那么这个时候我要表示第一位的数据传输错误，我的校验码应该是001，而不是000。此外，000还表示了数据无错，所以实际操作中我们计算可表示位数的时候是忽略掉全为0的一种情况。故校验码的位数加上数据位数应该小于等于校验码能表示位数（除去全0情况后的）。</p><p>解决了位数的问题，接下来要解决校验码放在哪的问题。</p><p>假设我把校验码放在编码的最前3位，数据放在后面4位。再假设我传输的数据是*** 1111（<em>表示校验码）。那么当我的数据位置传输错误后，如传输成为了</em>** 0111，那么我的校验码应该写成2进制的4，因为第4位出现了传输错误。所以整体表示成100 0111。但此时出现一个致命的问题：数据不出错的情况下，可能单纯的校验码传输错误了。也就是说，如果第1位的校验码传输错误时，传输结果为 100 1111。看到问题的所在了吗？根据我的校验码，我应该追溯第4位的传输错误，但是我的第4位是传输正确的，这也就导致了我无法真正的找到错误位。</p><p>那么该怎么设计呢？我们可以看到，纠错失败是因为歧义的问题，即无法分辨是校验码所表示位置传输错误还是校验码自身传输错误。那么取消掉歧义，让校验码的自身传输错误时恰好其位置表示是他自己，不就解决掉这个问题了吗？按照刚才的例子来讲，我们首先考虑三种校验码出错的情况，分别是001，010，100三种，那么很明显，我们直接把这三位校验码放到他所表示的位置中不就可以了吗？也就是将校验码放置到第1，第2，第4三个位置中，这样位置的表示与校验码的传输错误可以用同一个表示，不会导致前文说的纠错失败的问题。</p><p>好了，到这一步后，我们已经清楚了校验码的设计方式了，但是校验码怎么取值呢？上面所提到的是已知错误去判断校验码的取值，但实际中我们是反过来的过程，所以我们就要去考虑取值的问题。</p><p>先讲我们是怎么进行校验的，也就是校验的流程问题。</p><p>这一步我们先将校验码和数据部分分开，假设校验码是p，数据是d，然后我们的p是根据d在某种规则下得到的，那么我们只需要将接收到的数据部分按照规则重新计算后（即理论传输正确时校验码的值）与其校验码部分（实际传输的校验码的值）做异或运算，我们将这个异或运算的结果记为s，若结果全为0，则表示两者完全相同，若不全为0，我们还希望s恰好为传输错误的位置信息。即我们希望s&#x3D;011时（s1&#x3D;1，s2&#x3D;1，s3&#x3D;0），第3位的数据确认传输出错。（s1即为s的第一位，s2为第二位，d，p同理）</p><p>这里我们探讨的s其实就是上一阶段讨论校验码位置时的校验码值，因为它的实际意义就是某一位出现了错误，表示位置信息。（而p是实际上校验码位置应该填写的值）</p><p>那么接下来我们先来思考一个问题，s1&#x3D;1代表什么？</p><p>这代表001，011，101，111位置中有一个必然出错了。也就是1，3，5，7位中有数据传输错误，s1&#x3D;1。那我们又知道s1&#x3D;（p1和d在p1下的规则运算后的异或），所以和p1有关的d就是抛开p1自身后的数据位数，即3，5，7位。</p><p>那么问题就简化了，我们需要将3，5，7位进行一种规则运算，使得3，5，7中一旦有一位发生了变化，他的规则运算结果就会由1变0，由0变1。</p><p>那么这种规则就是异或。3，5，7三位的异或将形成p1的值。如果其中1位发生了传输错误（或校验码本身第1位发生了传输错误），则按照异或规则形成的新p1必将与之前的p1相反，从而导致s1&#x3D;1。</p><p>同样的，按照此理我们可以求出p2，p3的值。</p><p>再举p2的例子好了。s2&#x3D;1代表着010 011 110 111中一个出错，即2，3，6，7四位中有一个出错。那么p2就应该是除了自己以外的3，6，7位进行异或运算后形成的结果。反过来说，如果3，6，7位发生传输错误（或校验码第2位发生了传输错误），则按照异或规则形成的新p2必与前p2相异，从而导致s2&#x3D;1。</p><p>到此为止，对海明码的编码过程就结束了。后面举例如何校验码是如何验证的。</p><p>假设我传输的编码是1010010（正确的海明码)，结果传输成为了1110010，那么海明码将如何验证呢？</p><p>1110010 画线部分是校验码，即p1&#x3D;0，p2&#x3D;1，p3&#x3D;0。</p><p>s1：d3异或d5异或d7等于0，0异或p1&#x3D;0.</p><p>s2：d3异或d6异或d7等于0，0异或p2&#x3D;1.</p><p>s3：d5异或d6异或d7等于1，1异或p3&#x3D;1.</p><p>故110位置出错，即第6位出现错误。</p><p>转自知乎：</p><p><a href="https://www.zhihu.com/question/29169628/answer/837787585">海明校验码是怎么实现的？ - 沐温的回答</a></p><p>2021年04月09日</p>]]></content>
    
    
    <summary type="html">如何一步步推导出海明码。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>原来你是我最想留住的幸运</title>
    <link href="https://weijiajin.com/0973603a3a3d/"/>
    <id>https://weijiajin.com/0973603a3a3d/</id>
    <published>2020-11-25T16:35:04.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>我喜欢你，做我女朋友吧！</p><p>我喜欢你。其实六年前就想对你说了，但那时还太懵懂，不懂爱情，喜欢与不喜欢，觉得一个女生很漂亮，人又很善良，便喜欢了。你就是我当时心中这样的一位女同学。虽然也有其他女生，但当时偏偏就选择了你。也许你比她们漂亮，比她们善良，但这都不是我喜欢你的原因，我喜欢你只是源于感觉，那种感觉只有你给过我。不知道你是否还记得，四年级那年我们同班，嗯，那是我最快乐的时光，下课你追我，我踢你一下，或是斗斗嘴，记得当时我喜欢管你叫鸭子。你知道为什么吗？第一次见你，就觉得你的脸型和眼睛好像好像唐老鸭。我想这些你该都不记得了吧！你还知道刘艳吗？就是她给了我喜欢你的勇气。我也第一次品尝到了恋爱的甜味。你知道吗？当刘艳告诉我你喜欢我的时候，我当时是多么的高兴。你当时和她一个宿舍的吧，我真的想不到我这么一个人会有人喜欢？更想不到那人竟是你？觉得没有什么时候比那一刻开心了。</p><p>真的，那段时间我觉得我是最幸福的人。</p><p>记得那年，我们中午一起去照大头贴，我现在还一直保留你那稚嫩的照片。我其实一直想和你照一张合照，就是当时胆子太小了，也没敢说。</p><p>我那时就想讨好你，让你开心。有一天，我在学校门口的小店里，看到十分好看的蜡烛，里面有五彩的沙子，用薄薄的玻璃装着。我当时就在想，要是能送给你，你肯定会很喜欢的。于是，每天我有点钱就去抽奖，抽了好多。终于，我抽到了，虽然那是最小的一个。我很开心地叫周盼递给你。但你好像不喜欢，又还回来了。当时我并没有太伤心，只觉得自己还不够好，不懂得你。我想，要你喜欢。</p><p>我每天中午上学，最开心的一瞬莫过于路过你们班，和你的一秒对视了。那一秒，真的美，我忘不了。</p><p>我到现在都还说不出为什么喜欢你。对于你，像来自我的骨头。</p><p>现在呢，想拥着你，距离不允许；想陪着你，时间不允许；唯有心底想念着你，信息祝福着你。每天陪你聊聊天。但无论你在何时，无论你在何处，无论你做什么；请记住：我永远支持你，无时无刻不着你，因为你是我最爱的人！那时我有一个破手机，里面那首《做我的女朋友》我每次从你家回来路上一直听，想着有一天唱给你听。</p><p>与你相遇，是我此生最幸运的事情，我想写出愉悦的文字给你，可落笔后却写成忧伤。应该是我的自卑配不上你。给不了你一路阳光，却也不愿放你离去，所以我在文字里洒下给你的毒，一点点地将你诱引，一天天地将你迷陷在我的世界。在文字里，我用忧伤将你感染，用相思将你牵绊，慢慢地迷幻你的视线，渐渐地麻痹你的理智。我自卑地想让你离去，却不停地用忧伤的相思将你缠绕，你若能慧剑斩情丝，该是多好。</p><p>与你相恋，是我此生最幸福的时光，我想写些暖心的文字给你，可落笔后却写成凄凉。应该是我的自私放不下你。许不了你半世繁华，却也不想让爱错过，所以我在文字里点燃我们的爱，一丝丝地将你牵引，一次次地将你迷醉于我的怀抱。在文字里，我用热情将你点燃，用缠绵将你挽留，缓缓地褪去你的武装，悄悄地卸下你的疲惫。我自私地想将你占有，却不敢用温暖的承诺将你守护，我若能封笔戏江湖，该是多好。</p><p>那些美好的画面，总在梦境里翻滚，提笔描绘时破碎成拼图，愚钝的我拼出了有你的画面，却拼不出你身旁的我。</p><p>那些幸福的时光，总在记忆里轮回，执笔书写时零乱成麻团，笨拙的我理出了相拥的曾经，却理不出我们的未来。</p><p>相遇，是因为这世界有会说话的文字。相恋，是因为我的世界里有个能懂我心的你。若我能写就繁华，当许你半世繁华。若我能写出风流，当给你倾城浪漫。若我能写下温暖，当陪你度过寒冬。若我能写入你心，当为你写一世情书。</p><p>2015年9月12日</p>]]></content>
    
    
    <summary type="html">那些美好的画面，总在梦境里翻滚，提笔描绘时破碎成拼图，愚钝的我拼出了有你的画面，却拼不出你身旁的我。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>小幸运</title>
    <link href="https://weijiajin.com/2a6e532cc6fe/"/>
    <id>https://weijiajin.com/2a6e532cc6fe/</id>
    <published>2020-11-25T16:29:18.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>也许很多年很多年以后，我和别人谈笑风生，会与别人提及我人生中的美好与最爱的人。也许，那时我头发斑白，会与别人说起，年轻时我曾喜欢过一位女孩，不，我曾爱过。</p><p>昨夜，偶然知晓你也许就快结婚了。</p><p>那该是不错的男孩，想来他是多么幸运。</p><p>但是不知怎么，我却好像一直追寻的有了答案，突然有了某种释怀，好像突然就没有羁绊。我的心告诉我，你要离开了。我也要远走了。</p><p>我愈发觉得一些话不得不说，因为我已经来不及了，再迟些，也许就会后悔，或是遗憾。</p><p>说实话，听到这件事的那一刻，整个人的身心都颤了一下，这一切是那么熟悉。我记得前年我曾和你说过，我做了一个梦，梦见你结婚了，梦中的我没有止住泪流。现实中，昨夜，我却依然佯装无谓，和你的曾经的某位追求者语音，一切的一切是那么安然。他也是很遗憾的说着关于你的近况，我静静的听着，却也失了魂。他说着他以为我的心里。他问我，我是不是还喜欢你。 我说是的。他问我是不是觉得遗憾，觉得我和你还没有机会在一起，我知道我不是，我还是回答是的。他问语气透着无奈哀伤，而我那刻的心绪早已在这十年来的任意的回忆中四处飘散，混乱，我理不清，我想说的话，越来越少，似乎趋于平静。</p><p>但是这一夜我睡不着，闭着眼我回忆，想要理清记忆。</p><p>我突然发现有些话，再不说，真的就不在有意义。沉了那么多年，我的心沉不下去了。因为，我发现某些情感，已在我的心里生根。突然心痛，这像是一个漩涡，我已陷了进去。脑子里的回忆，还有那些我看到的别人的爱情，看的那些名著，我知道，我在经历人生还算有点特色的人生。</p><p>我回忆，最初的相识，那是都很小，我不喜欢任何女生，我什么都不懂。到了六年级，我依然，我没有关于喜欢的概念，更别谈爱情。虽然那是我们是好朋友，我并不真正喜欢谁，只觉得你很好看，每天路过你们班的门口看看就很开心了。希望我们永远是好朋友，这是小学你留给我的毕业留言。我一直记得。</p><p>可是自那以后，我再遇见你，我止不住的是我的心跳，看到你，那是很小很小的我的心就狂跳。渐渐的我懂得，我喜欢你，很单纯的喜欢，我的心告诉我。</p><p>那是的我就开始憧憬，以后娶你做我的新娘。但是我从未说过，我只是在等，我知道要娶一位女生，我需要有足够的能力，给她想要的。于是，我不记得那天，你就成了我一个很模糊的目标，之所以模糊，我知道只是我单方面的倾向。从那时起，我把你当做我一生最重要的女人。</p><p>此后我们遇见好多次，我的人生好像，也因这些相遇更有意义。</p><p>我一直在思考爱情。</p><p>可能有人会说我不专一，喜欢过很多女生，我也怀疑过自己。只是我现在已经知晓了自己，我所喜的一切，只不过是我太爱一个人，从别人的影子也能看到有你。如果这都不算爱，我也没什么好去悲哀。</p><p>大学也遇到了一些女生，最后都没有结果，她们都说我的心里已经有了一个人。我回忆我以往喜欢过的女孩，这种喜欢只是我对某位同学的好感，我发现，每位有好感的女生，都是你的某些，我将之联系。除了你的其她，只是其她的你。</p><p>既然事实如此，何不成人之美，我的心告诉我。真爱一个人，会祝你幸福。我祝你幸福与幸运。</p><p>你一定要幸福美好，你在我心里永远都最美好的最初，没有之一。我以后便不再打扰你了。</p><p>在你的生活，我会渐渐淡出。</p><p>但是，此生此世，你是我忘不了的女生。</p><p>甚至我可以说，以后的以后，人之将死，我脑海中必将浮现你的名字，你让我十分清醒地懂得爱情，知晓人生。认识你，我很幸运。生来我一无所有，很多年很多年以后，我会带着你的名字离开。</p><p>最后，我想对你说，相比喜欢，我爱你!</p><p>怎样爱?很爱，我曾努力想娶你，可是人算不如天算。既然如此，便不强求。只是我爱你这件事，便再无人知道了，也许很多年很多年以后，我和别人谈笑风生，会与别人提及我人生中的美好与最爱的人。也许，那时我头发斑白，会与别人说起，年轻时我曾喜欢过一位叫王倩的女孩，不，我曾爱过。</p><p>我想你的那个他也一定会是个特别棒的男孩，我始终相信你是幸运的女孩!你一定会幸福的!一定的!你是那么的幸运!<br>现在才发现原来你是我最想留住的幸运。<br>希望我们永远是好朋友!这句话这次我对你说。<br>对了，有一首歌《年少有你》我一直想唱给你听。不知以后是否还有机会。</p><p>2017年4月20日</p>]]></content>
    
    
    <summary type="html">也许很多年很多年以后，我和别人谈笑风生，会与别人提及我人生中的美好与最爱的人。也许，那时我头发斑白，会与别人说起，年轻时我曾喜欢过一位女孩，不，我曾爱过。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>校园青春</title>
    <link href="https://weijiajin.com/1cbb7e0a3fc8/"/>
    <id>https://weijiajin.com/1cbb7e0a3fc8/</id>
    <published>2020-11-25T16:27:15.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>青春爱在校园<br>不得不说青春是本太过仓促的书<br>每页都有着自己铭心刻骨的回忆<br>有自己轻狂年少<br>你们像那夹在书里的银杏叶<br>记录着每段让人难以忘怀的感动<br>每片泛黄的银杏叶代表不同的回忆<br>那是一份信仰，一份依靠<br>我一辈子的骄傲</p><p>我们留恋校园的每一个角落，只因为我们曾是她的主人，当然她也是我们青春的见证，因为那一年，我们十七八岁。我们想尽快长大，想脱浮华的天真，想爱情，又思人生。等我们蓦然回首，才懂得那年的美好，才开始去怀念那时的青春，祭奠那年的十七八岁。可是回不去了，毕竟，此时此刻，她已不属于我们，只永存于那段称之为青春的岁月。特别是段很旧很旧的时光，有着轻轻浅浅的爱，藏着懵懵懂懂的情。</p><p>那一年，我与你同班，我们懵懂地度过了难忘美好的300天，似乎所有关于你的回忆都是带着淡淡的雨滴味，还有泥土的清香，似乎你就如同雨滴一般美好你带给我的是一直以来的清凉。</p><p>我懂得，那年我们的相遇，并不是缘分，不然为何和你碰撞在那过早的华年。人们说，花开固然美丽，过早盛开，也必将过早的凋零且无果实。所以，你只留给我美好回忆，在我回忆里最美的存在，也是那段旧时光的引以为傲。</p><p>没有你的日子，我把情字读了千万遍，后来发现，终究还是少了你的温婉秀气，于是我想渐渐忘记，假装不再想起。可是爱情依旧这般，来时如霜，去时如电，挽不住那芳华。我想提笔写下我们的故事，却迟迟下不了笔，我觉得，任凭我怎么去写，都刻制不出另一个你。曾经该怎么写？怎么写，都是错妄。</p><p>你是否还记得我写的第一封情书，现在想来，也许那是我最为青涩的情感；你是否还记得我写给你的第一首情诗，那是我，一位懵懂少年，从心里最为纯情的呼唤。也许，于你，那些字字句句，言言语语，早已忘记。可是，我记得。我记得，曾经有一位少年，离你不远不近，却一直守护；我记得，你明媚的笑颜，便是他心中倾城的暖；</p><p>我记得，他最喜，你那柔情的眼睛，那么美，浸着诗意；我记得，于他的记忆中，你就是唯美的丁香，静静地开在成长的路畔未曾凋谢。他最喜看你在楼梯角落，那洁嫩的脸庞，只是余光略过，心里却盈满了欢喜。</p><p>如果那儿不见了你，他会着急，担心，会感伤，带着忧虑想着，你在哪里。放学路上跟在你身后，为多看一眼，虽然只是背影。</p><p>他还喜，下课，假装路过你们班，为了你微笑的侧脸，明媚，温暖。这一切的一切，少年记忆依然。</p><p>你们说，多么美好的年月，喜欢一个人，在这最开始的青春，他在自己梦中慢慢睡着。也许就是遇见你的那一刻开始，他爱上了美好，爱上情歌与诗。</p><p>现在，每每回忆校园，回忆初中高中六年，温暖都会打心底溢出感动，涌出心头，润湿眼角。我想，日后若能和你回忆当初多好，一起想我们的爱恋，想你我青春的蠢，将我们曾经的点点滴滴，用文字镌刻，该有多好。我又想，你我终究无缘，我也只能一个人，一个人去写下这青春不完整的篇章，写下我残缺的回忆，给自己一个交代，不让多年对你的思念和你我的曾经消尽。是为了你，更为了弥补我逝去的青春。</p><p>岁月是一个道场，枯荣便是轮回，蹉跎是承诺的姿态，我只与真诚低眉。我也曾在你的世界里飞，最后默默离开，感谢你让我知晓爱情与诗意。曾经的爱，只开在蕊里，错过了一个季节，已无法完美，凋谢就是淡然如水。突如其来的雨，经过我的屋檐，涤净所有尘埃，抚平连日来的躁动与不安。我依着这种清新的脉络，写几行干净的小字，使得疲累的心情获取暂时的舒缓，安静且喜欢。</p><p>愿人生无可辜负，多么奢侈的愿望，空洞的梦想。世界原本就是蹉跎的，没有什么如愿的希望可以长久，欢喜有时，落寞有时，待到窗明几净，依然能含着泪，噙着微笑，向后人诉说我们逝去的青春，讲述我们那年的美好。</p><p>有些故事，经历过了，也就了无遗憾，有些人，爱过一次，也就无需再来。没有落了单的承诺，只是在别的地方，以另一种方式兑现。海誓山盟，地老天荒，天涯海角，便是爱情趋于永恒的地方。懵懂，是我们初见的情怀，时过境迁，结局也只剩怀念，隐着美含着泪。人生若只如初见，也就没了那么多的遗憾与嗟叹，这山长水远的人世本来就不是完美的，只感动了自己的故事，也没有理由继续读下去，一声再见便再也不见。</p><p>而后，独尝着浮世清欢，一个人的细水长流。</p><p>这就是我的青春印象，关乎爱情，关乎地老天荒。</p><p>也许你会记得我<br>一位痴情于你的少年<br>他对爱情有过深深的思考<br>如他的人生一般重要<br>在你尚未了解一切前<br>他便知道，你就是爱情<br>他看到烟，便断定是火<br>回想你我相逢<br>挥手之间，存下好感<br>相互对视的刹那<br>我认定今生有缘</p><p>2016年10月31日</p>]]></content>
    
    
    <summary type="html">那一年，我与你同班，我们懵懂地度过了难忘美好的300天，似乎所有关于你的回忆都是带着淡淡的雨滴味，还有泥土的清香，似乎你就如同雨滴一般美好你带给我的是一直以来的清凉。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>清欢</title>
    <link href="https://weijiajin.com/42cf3aea9a72/"/>
    <id>https://weijiajin.com/42cf3aea9a72/</id>
    <published>2020-11-25T16:25:36.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢一个人的清欢<br>我终究还是庸俗<br>活在当下，安于今朝<br>偶尔某个枯木水穷<br>偶尔某个女生牵动心绪<br>就文艺泛滥<br>未言承诺，不守天荒<br>只在心里，寄情达意<br>庸俗的我，羞涩于心<br>爱情却也清欢</p><p>2016年10月24日</p>]]></content>
    
    
    <summary type="html">我终究还是庸俗，活在当下，安于今朝，枯木水穷。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>猜想</title>
    <link href="https://weijiajin.com/a463d5967457/"/>
    <id>https://weijiajin.com/a463d5967457/</id>
    <published>2020-11-25T16:19:16.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>清清冷冷的晨雨中<br>我透过温婉的你<br>猜想秋的心意</p><p>2016年10月24日</p>]]></content>
    
    
    <summary type="html">清清冷冷的晨雨中，我透过温婉的你，猜想秋的心意</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>失眠</title>
    <link href="https://weijiajin.com/39965e8f2c28/"/>
    <id>https://weijiajin.com/39965e8f2c28/</id>
    <published>2020-11-25T16:17:58.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>不眠的人，也许会有很多种<br>想着昨日种种，想着今日种种<br>想着明日种种，为着种种虚诞<br>难以静穆，于床榻之上覆去翻来<br>入睡却也梦多，成了半个不眠人<br>昨夜梦你，一个月，在梦里给的时间<br>我不懂，不懂</p><p>我想<br>是时候，好好反省夜的宁静<br>下着雨，不知何时才能放晴</p><p>我忽然非常想念<br>想念丁香般的姑娘</p><p>我写诗写词写花季年华<br>却写不出盛开的执着<br>过于在意爱或喜欢</p><p>是怎样的情感，<br>叫我看你许久<br>我只想说你给我的是一种蓝<br>天空的那种，不同于海的那种<br>浅浅清清，那样纯洁</p><p>又想起，那日雨中相遇<br>素不相识，给予微笑<br>那一刻，让我觉得，有你的地方<br>便会有花海和诗意</p><p>2016年10月24日</p>]]></content>
    
    
    <summary type="html">我忽然非常想念，想念丁香般的姑娘。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>梦溺</title>
    <link href="https://weijiajin.com/12f8a6917cb9/"/>
    <id>https://weijiajin.com/12f8a6917cb9/</id>
    <published>2020-11-25T16:16:39.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>最近梦里时常会梦见一个女生<br>我们柔和相对<br>报之以灿笑邂逅<br>彼此大方与活泼<br>就这样，梦里不觉孤单<br>一朵丁香独独落在心房</p><p>现实中再去看她时<br>觉得触手可及，又觉得不可及<br>于是我只在眼神里将她慢慢宠溺</p><p>我想，只是喜欢一个人罢了<br>毕竟，我和她的距离<br>可咫尺，可天涯<br>便如这世上万般的情，事与物<br>可穷，可尽<br>可木，可竹<br>可花，可草<br>可瓣，可叶<br>可爱，可憎<br>可喜，可怆<br>可我，可你</p><p>现实可以是梦<br>梦也许是还未发生的现实</p><p>2016年10月19日</p>]]></content>
    
    
    <summary type="html">我想，只是喜欢一个人罢了，毕竟，我和她的距离，可咫尺，可天涯。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>烟火</title>
    <link href="https://weijiajin.com/f1f3e5e1677f/"/>
    <id>https://weijiajin.com/f1f3e5e1677f/</id>
    <published>2020-11-25T16:14:55.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>也许你会记得我<br>一位痴情于你的少年<br>他对爱情有过深深的思考<br>如他的人生一般重要<br>在你尚未了解一切前<br>他便知道，你就是爱情<br>他看到烟，便断定是火</p><p>2016年9月21日</p>]]></content>
    
    
    <summary type="html">也许你会记得我，一位痴情于你的少年，他对爱情有过深深的思考。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>随我来</title>
    <link href="https://weijiajin.com/c86468d6de1c/"/>
    <id>https://weijiajin.com/c86468d6de1c/</id>
    <published>2020-11-25T16:13:38.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>随我来<br>你随我来<br>我带你去看一看太阳<br>议一议将来<br>讨论云彩</p><p>2016年9月21日</p>]]></content>
    
    
    <summary type="html">随我来，你随我来，我带你去看一看太阳，议一议将来，讨论云彩。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>等的远方人</title>
    <link href="https://weijiajin.com/06f83907f73c/"/>
    <id>https://weijiajin.com/06f83907f73c/</id>
    <published>2020-11-25T15:54:30.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>现在，不再依恋她们，自己轻松。我想来之前的我真是幼稚，但是我还没长大，我还在成长。我只是又看了看爱情，觉得往后推迟那么几年才是对的。所以我看现在的她们，也是无所谓的，满不在乎的。毕竟，你们与我无关。远方人，才是我的宿命。只是还要等那么几年，或几十年。</p><p>2016年2月15日</p>]]></content>
    
    
    <summary type="html">我看了看爱情，只好又往后推迟。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>放下</title>
    <link href="https://weijiajin.com/79dddbec45d0/"/>
    <id>https://weijiajin.com/79dddbec45d0/</id>
    <published>2020-11-25T15:51:48.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>分开已经很久了，那次匆匆别后，我渐渐淡了你的模样，你的声音。现在，你的存在仅仅告诉我，那么一个曾经。我们不痛不痒，平淡地经历了青春。</p><p>又是一年春节，你我都会到了这起点。多年了，好像对你依旧存有念想。无所谓的向你发了一个信息，一个我年少时的夙愿。我也只是想陪你看场电影了,没有其他。我仅是你的老友，你是我多年未了的心结。</p><p>你知不知道刚开始的答应，我多么欣喜，我觉得那一个我触到了爱情。可后来，你步步推脱，我心伤。却依然强做，我不在乎。我没事。那也好的之类。</p><p>我已经放下，对你说“结束后，告诉一声”，只是之后你什么都没说。我知道，我那么的无力，我于你，不算什么。你该会有你的理由，你的生活。我何苦多情，何必让自己一副媚态！本来就不该这样。一切只是我想错了，换句话说，一开始我就输了。</p><p>我尽量不要自己想起你，这个假期真的没有在想任何人。我也对你们，不在乎了。</p><p>你那天说，要和我看电影，我想去的。又想了想，我们还是，就不如不见。</p><p>因为我们早就已经步入了不同的世界，不一样的圈子。不可能，是这个世界给我们的箴言。</p><p>当初的誓言，我已经违背。你也不要还以为我是那个我。现在的我，除了自己，你们我都不在乎。</p><p>没有意思，起码我觉得还小。现在的爱情对我来说，没有意思。只是在浪费青春而已。我想做的只是让自己过上更好的生活。你可以说我自私。但我是在成长。我从现实中看到了未来我的爱情。或者未来我的爱情，必将来自现实。</p><p>2016年2月17日</p>]]></content>
    
    
    <summary type="html">一个我年少时的夙愿，我也只是想陪你看场电影了,没有其他。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>不完美的爱情</title>
    <link href="https://weijiajin.com/78613abef607/"/>
    <id>https://weijiajin.com/78613abef607/</id>
    <published>2020-11-25T14:43:47.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>突然想到一生一世的一句话：这些都不是我想要的，我想要的就是和你在一起。我一想到这句话，紧接着就是女主高圆圆的泪眼，虽然那一刻她是幸福的。我总是因为那个结局，自己感伤。本是幸福的，我却感受不了。我被那个结局伤的太深了，失去了感受幸福的标度。假如换个结尾，我也许想到了，我会欣喜。但是，更重要的是，如果不是那个结尾，我该早就忘了那个故事，即使那爱情很美。我永远地记住了这个爱情，因为她的不完美。完完美美的捕获了我的心。我以后的爱情，要是什么样。如果要的话，我愿一人承受。</p><p>2015年11月4日</p>]]></content>
    
    
    <summary type="html">这些都不是我想要的，我想要的就是和你在一起。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>沉默</title>
    <link href="https://weijiajin.com/cf2bf527ab1d/"/>
    <id>https://weijiajin.com/cf2bf527ab1d/</id>
    <published>2020-11-25T14:10:51.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>遇见你时的沉默，只是强压下自己的思念，想把要说的话，深深的埋在心里，慢慢地编织着，待到日后与你一起时，再细细的说给你听，说到老。</p><p>2015年10月16日</p>]]></content>
    
    
    <summary type="html">遇见你时的沉默，只是强压下自己的思念，想把要说的话，深深的埋在心里，慢慢地编织着，待到日后与你一起时，再细细的说给你听，说到老。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>不该</title>
    <link href="https://weijiajin.com/b067881ed6e1/"/>
    <id>https://weijiajin.com/b067881ed6e1/</id>
    <published>2020-11-25T13:56:13.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>你不该回眸<br>你那一笑，倾倒了我一片城<br>我不该抬头<br>一次抬头，成了我一辈子的羁绊</p><p>2015年10月13日</p>]]></content>
    
    
    <summary type="html">我不该抬头，一次抬头，成了我一辈子的羁绊。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>感心</title>
    <link href="https://weijiajin.com/a552b3523a83/"/>
    <id>https://weijiajin.com/a552b3523a83/</id>
    <published>2020-11-25T13:24:09.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>那天我们久别的初次见面，互相端详各自的变化，你说，我话少，有点老实。我想：你也一样，你眼神中的妖娆多年未变，虽然我已经变得狂妄不羁，但那颗心，依然爱你。我没说出口。你又说了一句：你话少，我也不喜欢讲很多话，这可怎么办呢？我笑了，笑着回答：没事的。我笑，笑这不是问题的问题，我知道这问题只会在日后被渐渐淡忘。因为那感心的感觉，让我知晓，你是对的人。</p><p>2015年10月13日</p>]]></content>
    
    
    <summary type="html">那感心的感觉，只会在日后被渐渐淡忘。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>暗恋的美好</title>
    <link href="https://weijiajin.com/b56dc577080a/"/>
    <id>https://weijiajin.com/b56dc577080a/</id>
    <published>2020-11-25T13:01:25.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>我喜欢你<br>将你放在心里最妥贴的地方<br>不敢惊动你<br>也许，这就是暗恋的美好<br>你在我心中永远都那个模样、那么美<br>没有一点不好<br>久而久之<br>你成了我心中的一份信仰，一份依靠<br>我喜欢你，成了我一辈子的骄傲</p><p>2015年3月14日</p>]]></content>
    
    
    <summary type="html">喜欢你,将你放在心里最妥贴的地方.</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lina" scheme="https://weijiajin.com/blog/tags/lina/"/>
    
  </entry>
  
  <entry>
    <title>不配</title>
    <link href="https://weijiajin.com/08d0e13c3591/"/>
    <id>https://weijiajin.com/08d0e13c3591/</id>
    <published>2020-11-25T12:58:07.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>一直太容易喜欢<br>见一个女孩，有一点美好，就喜欢<br>所以我喜欢过，喜欢好多女生</p><p>做很多事情，不能如一<br>半途中，我就厌了<br>爱情我是那么的憧憬<br>觉得这是我未来的庄严<br>但是我还是不懂自己<br>能否爱你到老</p><p>于我，只不想太多重复生活<br>生活每天该有不同的名字<br>有新意，有趣</p><p>爱情的爱对方如一，不变<br>时间久了，估计我会厌她<br>会去找新的爱情<br>这样，现在我看来，很不好<br>可，这便可能是未来的我</p><p>爱情也会荒芜<br>于我，也许荒的更早，我这样想</p><p>所以，不曾对谁许下誓言<br>怕伤害别人<br>愧疚自己</p><p>常常想，<br>我这样的人<br>不配拥有爱情</p><p>2015年4月27日</p>]]></content>
    
    
    <summary type="html">常常想，我这样的人，不配拥有爱情。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>大学</title>
    <link href="https://weijiajin.com/654291a989c7/"/>
    <id>https://weijiajin.com/654291a989c7/</id>
    <published>2020-11-25T12:24:05.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>第一次接触大学<br>提前了些<br>真正的战斗并未开始<br>我却提前在享受这自由<br>该不该努力<br>该不该拼搏<br>为了未来的大学<br>为了这自由<br>我这样问自己</p><p>2015-09-19<br>高三之前到南师大参加化学竞赛所写</p>]]></content>
    
    
    <summary type="html">真正的战斗并未开始，我却提前在享受这自由。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="university" scheme="https://weijiajin.com/blog/tags/university/"/>
    
  </entry>
  
  <entry>
    <title>大方的微笑</title>
    <link href="https://weijiajin.com/65f7451823c5/"/>
    <id>https://weijiajin.com/65f7451823c5/</id>
    <published>2020-11-25T11:25:58.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>中午，下楼时恰好在你后面，只看了你一会，一种伤感突然涌进心头，就是那种感觉自己很无能，很不配你，又想想以前对你说的喜欢，就悄悄从旁路离开，怕你看见这样颓败的我。路上，想着以后一定要努力，至少多年后，再遇见你时，敢喊出你的名字，敢大方地微笑。</p><p>2015年9月16日</p>]]></content>
    
    
    <summary type="html">想着以后一定要努力，至少多年后，再遇见你时，敢喊出你的名字，敢大方地微笑。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lina" scheme="https://weijiajin.com/blog/tags/lina/"/>
    
  </entry>
  
  <entry>
    <title>过客</title>
    <link href="https://weijiajin.com/194be5da681c/"/>
    <id>https://weijiajin.com/194be5da681c/</id>
    <published>2020-11-25T11:19:28.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>有一位女孩在我记忆里成了我胸口的朱砂痣，那晚，她是那么的美和纯洁，我现在真的很想她。虽然没经历过什么，但第一眼我的心被俘虏，可以说我喜欢上她了。但她是不属于我的，之后就不再多想，只有梦里，见她微笑，替她开心了。再后来，淡了，不想了，也梦不到了。但现在我又想起她了，好久好久没见她了。</p><p>2015年9月16日</p>]]></content>
    
    
    <summary type="html">现在我又想起她了，好久好久没见她了。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="houtongtong" scheme="https://weijiajin.com/blog/tags/houtongtong/"/>
    
  </entry>
  
  <entry>
    <title>此刻的美好</title>
    <link href="https://weijiajin.com/456ad0be4ff5/"/>
    <id>https://weijiajin.com/456ad0be4ff5/</id>
    <published>2020-11-24T19:38:27.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>此刻的美好<br>如我，如她，如你<br>时间静止的那一刻<br>和十年前的光景,一般相像<br>她是有喜欢的人的<br>你也是<br>她是我眼里西施<br>也是他们口中我讲述的西施<br>想来，不过是我眼中的虚荣<br>她没有全然不自知的美丽<br>只是我不自知的丑陋<br>我满眼都是最喜的月亮<br>想着，近水楼台先得的便一定是月吗<br>我想以后让月亮奔我而来<br>和小时候一样<br>田边会有跟我走的月亮</p><p>2019年12月30日<br>那是我第一次和她出去玩，那天晚上的一切在我记忆里都很美，就连站台的寒风也不那么刺骨。</p>]]></content>
    
    
    <summary type="html">此刻的美好，如我，如她，如你，时间静止的那一刻，和十年前的光景一般相像。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="xurong" scheme="https://weijiajin.com/blog/tags/xurong/"/>
    
  </entry>
  
  <entry>
    <title>基于深度学习框架Tensorflow的成绩自动查询</title>
    <link href="https://weijiajin.com/0c01e2dc13e4/"/>
    <id>https://weijiajin.com/0c01e2dc13e4/</id>
    <published>2020-11-24T19:02:37.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>项目地址(包含数据集)：<a href="https://github.com/feelheart7/Python">https://github.com/feelheart7/Python</a><br>项目地址(包含数据集，精简版，由于学校网页失效，精简只有深度学习核心部分)：<a href="https://github.com/feelheart7/tensorflow">https://github.com/feelheart7/tensorflow</a></p></blockquote><h4 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h4><p>当考试结束后，有很多同学想及时知道自己的成绩，由于学校成绩在官网最新更新，其他平台查成绩有很大的延迟，所以迫不及待的同学需要去学校官网的教务处查询，过程操作不是很方便，每次凭运气查成绩。于是通过程序自动化操作，简化成绩查询过程，节省时间，提高效率。</p><h5 id="项目所需知识"><a href="#项目所需知识" class="headerlink" title="项目所需知识"></a>项目所需知识</h5><ul><li>图像数值处理</li><li>深度学习</li><li>tensorflow</li><li>python3.6</li><li>爬虫</li></ul><h4 id="项目优点"><a href="#项目优点" class="headerlink" title="项目优点"></a>项目优点</h4><ul><li>第一次查询全部成绩</li><li>最新成绩通过邮箱通知，最新成绩显示在邮箱标题</li><li>配置简单只需填写 ，学号、密码、和接受通知的邮箱</li></ul><h4 id="项目所需库"><a href="#项目所需库" class="headerlink" title="项目所需库"></a>项目所需库</h4><figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 操作图片模块</span></span><br><span class="line"><span class="title">from</span> <span class="type">PIL</span> <span class="keyword">import</span> Image</span><br><span class="line"><span class="meta"># 第三方OCR调用（识别率不高）</span></span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="meta"># 范围随机模块</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="meta"># 操作系统模块</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="meta"># 矩阵计算与tensorflow（深度学习框架）</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="meta"># 爬虫模拟网页请求模块</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta"># 调用系统浏览器</span></span><br><span class="line"><span class="keyword">import</span> webbrowser</span><br><span class="line"><span class="meta"># 爬取html指定内容</span></span><br><span class="line"><span class="title">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="meta"># 正则模块</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="meta"># smtp邮箱</span></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="title">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="title">from</span> email.utils <span class="keyword">import</span> formataddr</span><br><span class="line"><span class="meta"># 时间模块，用于延迟</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="meta"># 下载图片模块</span></span><br><span class="line"><span class="title">from</span> typing <span class="keyword">import</span> Any</span><br><span class="line"><span class="title">from</span> urllib.request <span class="keyword">import</span> urlretrieve</span><br><span class="line"><span class="meta"># TF_CPP_MIN_LOG_LEVEL默认值为 0 (显示所有logs)</span></span><br><span class="line"><span class="meta"># 设置为 1 隐藏 INFO logs, 2 额外隐藏WARNING logs</span></span><br><span class="line"><span class="meta"># 设置为3所有 ERROR logs也不显示</span></span><br><span class="line"><span class="title">os</span>.environ[&#x27;<span class="type">TF_CPP_MIN_LOG_LEVEL&#x27;</span>] = &#x27;<span class="number">2</span>&#x27;</span><br></pre></td></tr></table></figure><h4 id="项目难点"><a href="#项目难点" class="headerlink" title="项目难点"></a>项目难点</h4><p>通过深度神经网络的验证码识别，目前我的验证码的识别率为97%，3万图片经过深度神经网络的训练，使用的是Google的神经网络框架tensorflow，如果还想提高识别率也是可以的，可以增加数据集，降低keep_prob的值（拟合度），达到99.9%是没有问题的。</p><blockquote><p>3万张的数据集并不是我手动码的，而是通过最开始我自己人工识别了1000张和我的好朋友刘雪峰200张作为最初数据集，开始训练的识别率只有20%左右，然后写了个函数将识别正确验证码储存，再进行训练，从而增大数据集和提高数据集（当识别率已经很高的时候，错误的图片再进行人工识别在训练可进一步提高识别率）。</p></blockquote><h4 id="多用户使用方法"><a href="#多用户使用方法" class="headerlink" title="多用户使用方法"></a>多用户使用方法</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">info</span> = [&#123;</span><br><span class="line">        <span class="string">&#x27;account&#x27;</span>: <span class="string">&#x27;******,</span></span><br><span class="line"><span class="string">        &#x27;</span>password<span class="string">&#x27;: &#x27;</span>******<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;</span>email<span class="string">&#x27;: &#x27;</span>*****@qq.com<span class="string">&#x27;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">        &#x27;</span>account<span class="string">&#x27;: &#x27;</span>******</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;***&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;*****@qq.com&#x27;</span></span><br><span class="line">        &#125;]</span><br></pre></td></tr></table></figure><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p><img src="https://s2.ax1x.com/2020/01/31/18SxbR.png" alt="运行结果"></p><h4 id="python源码"><a href="#python源码" class="headerlink" title="python源码"></a>python源码</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 操作图片模块</span></span><br><span class="line"><span class="keyword">from</span> PIL import Image</span><br><span class="line"><span class="comment"># 第三方OCR调用（识别率不高）</span></span><br><span class="line">import pytesseract</span><br><span class="line"><span class="comment"># 范围随机模块</span></span><br><span class="line">import random</span><br><span class="line"><span class="comment"># 操作系统模块</span></span><br><span class="line">import os</span><br><span class="line"><span class="comment"># 矩阵计算与tensorflow（深度学习框架）</span></span><br><span class="line">import numpy as np</span><br><span class="line">import tensorflow as tf</span><br><span class="line"><span class="comment"># 爬虫模拟网页请求模块</span></span><br><span class="line">import requests</span><br><span class="line"><span class="comment"># 调用系统浏览器</span></span><br><span class="line">import webbrowser</span><br><span class="line"><span class="comment"># 爬取html指定内容</span></span><br><span class="line"><span class="keyword">from</span> bs4 import BeautifulSoup</span><br><span class="line"><span class="comment"># 正则模块</span></span><br><span class="line">import re</span><br><span class="line"><span class="comment"># smtp邮箱</span></span><br><span class="line">import smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text import MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils import formataddr</span><br><span class="line"><span class="comment"># 时间模块，用于延迟</span></span><br><span class="line">import time</span><br><span class="line"><span class="comment"># 下载图片模块</span></span><br><span class="line"><span class="keyword">from</span> typing import Any</span><br><span class="line"><span class="keyword">from</span> urllib.request import urlretrieve</span><br><span class="line"><span class="comment"># TF_CPP_MIN_LOG_LEVEL默认值为 0 (显示所有logs)</span></span><br><span class="line"><span class="comment"># 设置为 1 隐藏 INFO logs, 2 额外隐藏WARNING logs</span></span><br><span class="line"><span class="comment"># 设置为3所有 ERROR logs也不显示</span></span><br><span class="line">os.environ[<span class="string">&#x27;TF_CPP_MIN_LOG_LEVEL&#x27;</span>] = <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">IMAGE_HEIGHT = 22  # 验证码图片高度</span><br><span class="line">IMAGE_WIDTH = 68   # 验证码图片宽度</span><br><span class="line">MAX_CAPTCHA = 4    # 验证码的位数</span><br><span class="line">CHAR_SET_LEN = 36  # 验证码的字符有多少种</span><br><span class="line"><span class="comment"># 验证码图片网址</span></span><br><span class="line">IMAGE_URL = <span class="string">&quot;http://jwfw1.sdjzu.edu.cn/ssfw/jwcaptcha.do&quot;</span></span><br><span class="line"><span class="comment"># 下载验证码图片的数量</span></span><br><span class="line">VERIFICATION_CODE_NUMBER = 10</span><br><span class="line"><span class="comment"># 验证码文件夹与文件绝对存储路径</span></span><br><span class="line">VERIFICATION_CODE_PATH1 = os.path.dirname(__file__) + <span class="string">&#x27;/verification_code_images/&#x27;</span></span><br><span class="line">VERIFICATION_CODE_PATH2 = os.path.dirname(__file__) + <span class="string">&#x27;/verification_code_images/&#123;name&#125;.png&#x27;</span></span><br><span class="line"><span class="comment"># 训练数据集绝对存储路径</span></span><br><span class="line">VERIFICATION_CODE_TRAINING_PATH = os.path.dirname(__file__) + <span class="string">&#x27;/verification_code_training_images/&#x27;</span></span><br><span class="line"><span class="comment"># placeholder 是 Tensorflow 中的占位符，暂时储存变量 X Y ,keep_prob是dropout层保留概率</span></span><br><span class="line">X = tf.placeholder(tf.float32, [None, IMAGE_HEIGHT*IMAGE_WIDTH])</span><br><span class="line">Y = tf.placeholder(tf.float32, [None, MAX_CAPTCHA<span class="number">*C</span>HAR_SET_LEN])</span><br><span class="line">keep_prob = tf.placeholder(tf.float32)</span><br><span class="line"><span class="comment"># 邮箱信息</span></span><br><span class="line">SENDER = <span class="string">&#x27;********&#x27;</span></span><br><span class="line">PASSWORD = <span class="string">&#x27;********&#x27;</span></span><br><span class="line"><span class="comment"># 用户信息</span></span><br><span class="line"><span class="built_in">info</span> = [&#123;</span><br><span class="line">        <span class="string">&#x27;account&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;********&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="string">&#x27;account&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;********&#x27;</span></span><br><span class="line">        &#125;]</span><br><span class="line"><span class="comment"># String1为原始成绩,String2为最新成绩。创建方式为这样append防止默认copy（以免浅拷贝）</span></span><br><span class="line">String1 = [[] <span class="keyword">for</span> copy <span class="keyword">in</span> range(len(info))]</span><br><span class="line">String2 = [[] <span class="keyword">for</span> copy <span class="keyword">in</span> range(len(info))]</span><br><span class="line"><span class="comment"># 训练集所有图片list与</span></span><br><span class="line">all_images = os.listdir(VERIFICATION_CODE_TRAINING_PATH)</span><br><span class="line">all_images_size = len(all_images)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载验证码图片安装序号存储图片</span></span><br><span class="line">def download_verification_code():</span><br><span class="line">    # 创建文件夹如果没有</span><br><span class="line">    os.makedirs(VERIFICATION_CODE_PATH1, <span class="attribute">exist_ok</span>=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0, VERIFICATION_CODE_NUMBER):</span><br><span class="line">        urlretrieve(IMAGE_URL, VERIFICATION_CODE_PATH2.format(<span class="attribute">name</span>=i))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功下载%s张图片！&quot;</span> % VERIFICATION_CODE_NUMBER)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用pytesseract整体识别验证码(识别率低)</span></span><br><span class="line">def pytesseract_verification_code():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0, VERIFICATION_CODE_NUMBER):</span><br><span class="line">        img = Image.open(VERIFICATION_CODE_PATH2.format(<span class="attribute">name</span>=i))</span><br><span class="line">        char = pytesseract.image_to_string(img, <span class="attribute">config</span>=<span class="string">&#x27;--psm 8&#x27;</span>)</span><br><span class="line">        # psm 各个值的说明</span><br><span class="line">        # 0：定向脚本监测（OSD）</span><br><span class="line">        # 1： 使用OSD自动分页</span><br><span class="line">        # 2 ：自动分页，但是不使用OSD或OCR（Optical Character Recognition，光学字符识别）</span><br><span class="line">        # 3 ：全自动分页，但是没有使用OSD（默认）</span><br><span class="line">        # 4 ：假设可变大小的一个文本列。</span><br><span class="line">        # 5 ：假设垂直对齐文本的单个统一块。</span><br><span class="line">        # 6 ：假设一个统一的文本块。</span><br><span class="line">        # 7 ：将图像视为单个文本行。</span><br><span class="line">        # 8 ：将图像视为单个词。</span><br><span class="line">        # 9 ：将图像视为圆中的单个词。</span><br><span class="line">        # 10 ：将图像视为单个字符</span><br><span class="line">        <span class="built_in">print</span>(i, char)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二值化分割验证码再调用pytesseract识别验证码(识别率有所提高)</span></span><br><span class="line">def pytesseract_devide_verification_code():</span><br><span class="line">    # 随机读取图片并灰度化</span><br><span class="line">    random_number = random.randint(0, VERIFICATION_CODE_NUMBER)</span><br><span class="line">    img = Image.open(VERIFICATION_CODE_PATH2.format(<span class="attribute">name</span>=random_number)).convert(&#x27;L&#x27;)</span><br><span class="line">    # 二值化:173为我的验证图片有较好的效果的值，不同图片的值不一样，请根据自己验证码图片设置相应的值</span><br><span class="line">    img = img.point(lambda x: 255 <span class="keyword">if</span> x &gt; 173 <span class="keyword">else</span> 0)</span><br><span class="line">    # 分离:crop函数带的参数为(起始点的横坐标，起始点的纵坐标，宽度，高度）</span><br><span class="line">    img1 = img.crop((0 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 1 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    img2 = img.crop((1 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 2 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    img3 = img.crop((2 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 3 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    img4 = img.crop((3 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 4 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    # 调用pytesseract识别验证码</span><br><span class="line">    char = pytesseract.image_to_string(img, <span class="attribute">config</span>=<span class="string">&#x27;--psm 8&#x27;</span>)</span><br><span class="line">    char1 = pytesseract.image_to_string(img1, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    char2 = pytesseract.image_to_string(img2, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    char3 = pytesseract.image_to_string(img3, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    char4 = pytesseract.image_to_string(img4, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(char)</span><br><span class="line">    <span class="built_in">print</span>(char1)</span><br><span class="line">    <span class="built_in">print</span>(char2)</span><br><span class="line">    <span class="built_in">print</span>(char3)</span><br><span class="line">    <span class="built_in">print</span>(char4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment">### 通过tensorflow的CNN(卷积神经网络深度学习后识别验证码,识别率贼高####</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取验证码名字和图片（训练数据集）</span></span><br><span class="line">def get_name_and_image():</span><br><span class="line">    # 获取数据集下的所有图片的数组all_images</span><br><span class="line">    # all_images = os.listdir(VERIFICATION_CODE_TRAINING_PATH)</span><br><span class="line">    random_image = random.randint(0, all_images_size - 1)</span><br><span class="line">    # <span class="built_in">print</span> (all_images_size)</span><br><span class="line">    base = os.path.basename(VERIFICATION_CODE_TRAINING_PATH + all_images[random_image])  # 有扩展名</span><br><span class="line">    name = os.path.splitext(base)[0]  # 无扩展名</span><br><span class="line">    image = Image.open(VERIFICATION_CODE_TRAINING_PATH + all_images[random_image])</span><br><span class="line">    image = np.array(image)</span><br><span class="line">    return name, image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证码名字转变成向量: 不同位数的需要重写这个函数,函数里的数字为ASCII码</span></span><br><span class="line">def name2vec(name):</span><br><span class="line">    vector = np.zeros(MAX_CAPTCHA<span class="number">*C</span>HAR_SET_LEN)</span><br><span class="line">    <span class="keyword">for</span> i, c <span class="keyword">in</span> enumerate(name):</span><br><span class="line">        <span class="keyword">if</span> ord(c) &lt; 58:</span><br><span class="line">            idx = i * 36 + ord(c)-48</span><br><span class="line">            vector[idx] = 1</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            idx = i * 36 + ord(c) - 87</span><br><span class="line">            vector[idx] = 1</span><br><span class="line">    return vector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向量转名字:注释部分是 最开始的向量 转 名字</span></span><br><span class="line"><span class="comment"># def vec2name(vec):</span></span><br><span class="line"><span class="comment">#     name = []</span></span><br><span class="line"><span class="comment">#     for i, c in enumerate(vec):</span></span><br><span class="line"><span class="comment">#         if c == 1.0:</span></span><br><span class="line"><span class="comment">#             name.append(i)</span></span><br><span class="line"><span class="comment">#     for i in range(0, 4):</span></span><br><span class="line"><span class="comment">#         if name[i] % 36 &lt; 10:</span></span><br><span class="line"><span class="comment">#             name[i] = chr(name[i] % 36 + 48)</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             name[i] = chr(name[i] % 36 + 87)</span></span><br><span class="line"><span class="comment">#     return &quot;&quot;.join(name)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向量转名字: 训练是不用到这个函数，训练完成用这个函数得到最终结果</span></span><br><span class="line">def vec2name(vec):</span><br><span class="line">    name = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> vec:</span><br><span class="line">        <span class="keyword">if</span> i &lt; 10:</span><br><span class="line">            a = chr(i + 48)</span><br><span class="line">            name.append(a)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = chr(i + 87)</span><br><span class="line">            name.append(a)</span><br><span class="line">    return <span class="string">&quot;&quot;</span>.join(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 采样函数:默认一次采集64张验证码作为一次训练</span></span><br><span class="line"><span class="comment"># 需要注意通过get_name_and_image()函数获得的image是一个含布尔值的矩阵</span></span><br><span class="line"><span class="comment"># 在这里通过1*(image.flatten())函数转变成只含0和1的1行114*450列的矩阵</span></span><br><span class="line">def get_next_batch(<span class="attribute">batch_size</span>=64):</span><br><span class="line">    batch_x = np.zeros([batch_size, IMAGE_HEIGHT*IMAGE_WIDTH])</span><br><span class="line">    batch_y = np.zeros([batch_size, MAX_CAPTCHA<span class="number">*C</span>HAR_SET_LEN])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(batch_size):</span><br><span class="line">        name, image = get_name_and_image()</span><br><span class="line">        batch_x[i, :] = 1*(image.flatten())</span><br><span class="line">        batch_y[i, :] = name2vec(name)</span><br><span class="line">    return batch_x, batch_y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义CNN(卷积神经网络):三个卷积层卷积神经网络结构</span></span><br><span class="line"><span class="comment"># 采用3个卷积层加1个全连接层的结构，在每个卷积层中都选用2*2的最大池化层和dropout层，卷积核尺寸选择5*5。，</span></span><br><span class="line"><span class="comment"># 我们的图片已经经过了3层池化层，也就是长宽都压缩了8倍(各自取整为3X9)</span></span><br><span class="line">def crack_captcha_cnn(<span class="attribute">w_alpha</span>=0.01, <span class="attribute">b_alpha</span>=0.1):</span><br><span class="line">    x = tf.reshape(X, shape=[-1, IMAGE_HEIGHT, IMAGE_WIDTH, 1])</span><br><span class="line">    # 3个卷积层</span><br><span class="line">    w_c1 = tf.Variable(w_alpha * tf.random_normal([5, 5, 1, 32]))</span><br><span class="line">    b_c1 = tf.Variable(b_alpha * tf.random_normal([32]))</span><br><span class="line">    conv1 = tf.nn.relu(tf.nn.bias_add(tf.nn.conv2d(x, w_c1, strides=[1, 1, 1, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>), b_c1))</span><br><span class="line">    conv1 = tf.nn.max_pool(conv1, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>)</span><br><span class="line">    conv1 = tf.nn.dropout(conv1, keep_prob)</span><br><span class="line"></span><br><span class="line">    w_c2 = tf.Variable(w_alpha * tf.random_normal([5, 5, 32, 64]))</span><br><span class="line">    b_c2 = tf.Variable(b_alpha * tf.random_normal([64]))</span><br><span class="line">    conv2 = tf.nn.relu(tf.nn.bias_add(tf.nn.conv2d(conv1, w_c2, strides=[1, 1, 1, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>), b_c2))</span><br><span class="line">    conv2 = tf.nn.max_pool(conv2, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>)</span><br><span class="line">    conv2 = tf.nn.dropout(conv2, keep_prob)</span><br><span class="line"></span><br><span class="line">    w_c3 = tf.Variable(w_alpha * tf.random_normal([5, 5, 64, 64]))</span><br><span class="line">    b_c3 = tf.Variable(b_alpha * tf.random_normal([64]))</span><br><span class="line">    conv3 = tf.nn.relu(tf.nn.bias_add(tf.nn.conv2d(conv2, w_c3, strides=[1, 1, 1, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>), b_c3))</span><br><span class="line">    conv3 = tf.nn.max_pool(conv3, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>)</span><br><span class="line">    conv3 = tf.nn.dropout(conv3, keep_prob)</span><br><span class="line"></span><br><span class="line">    # 1个全连接层</span><br><span class="line">    w_d = tf.Variable(w_alpha * tf.random_normal([3<span class="number">*9</span><span class="number">*64</span>, 1024]))</span><br><span class="line">    b_d = tf.Variable(b_alpha * tf.random_normal([1024]))</span><br><span class="line">    dense = tf.reshape(conv3, [-1, w_d.get_shape().as_list()[0]])</span><br><span class="line">    dense = tf.nn.relu(tf.<span class="built_in">add</span>(tf.matmul(dense, w_d), b_d))</span><br><span class="line">    dense = tf.nn.dropout(dense, keep_prob)</span><br><span class="line"></span><br><span class="line">    w_out = tf.Variable(w_alpha * tf.random_normal([1024, MAX_CAPTCHA * CHAR_SET_LEN]))</span><br><span class="line">    b_out = tf.Variable(b_alpha * tf.random_normal([MAX_CAPTCHA * CHAR_SET_LEN]))</span><br><span class="line">    out = tf.<span class="built_in">add</span>(tf.matmul(dense, w_out), b_out)</span><br><span class="line">    return out</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练函数：选择sigmoid_cross_entropy_with_logits()交叉熵来比较loss</span></span><br><span class="line"><span class="comment"># 用adam优化器来优化</span></span><br><span class="line"><span class="comment"># keep_prob = 0.3，控制着过拟合</span></span><br><span class="line">def train_crack_captcha_cnn():</span><br><span class="line">    output = crack_captcha_cnn()</span><br><span class="line">    loss = tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(<span class="attribute">logits</span>=output, <span class="attribute">labels</span>=Y))</span><br><span class="line">    optimizer = tf.train.AdamOptimizer(<span class="attribute">learning_rate</span>=0.0001).minimize(loss)</span><br><span class="line">    predict = tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN])</span><br><span class="line">    max_idx_p = tf.argmax(predict, 2)</span><br><span class="line">    max_idx_l = tf.argmax(tf.reshape(Y, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span><br><span class="line">    correct_pred = tf.equal(max_idx_p, max_idx_l)</span><br><span class="line">    accuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))</span><br><span class="line">    saver = tf.train.Saver()</span><br><span class="line">    with tf.Session() as sess:</span><br><span class="line">        sess.<span class="built_in">run</span>(tf.global_variables_initializer())</span><br><span class="line">        <span class="keyword">step</span> = 0</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            batch_x, batch_y = get_next_batch(256)</span><br><span class="line">            _, loss_ = sess.<span class="built_in">run</span>([optimizer, loss], feed_dict=&#123;X: batch_x, Y: batch_y, keep_prob: 0.2&#125;)</span><br><span class="line">            <span class="built_in">print</span>(<span class="keyword">step</span>, loss_)</span><br><span class="line">            # 每100 <span class="keyword">step</span>计算一次准确率</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">step</span> % 1000 == 0:</span><br><span class="line">                batch_x_test, batch_y_test = get_next_batch(1000)</span><br><span class="line">                acc = sess.<span class="built_in">run</span>(accuracy, feed_dict=&#123;X: batch_x_test, Y: batch_y_test, keep_prob: 1.&#125;)</span><br><span class="line">                <span class="built_in">print</span>(<span class="keyword">step</span>, acc)</span><br><span class="line">                # 如果准确率大于99%,保存模型,完成训练</span><br><span class="line">                <span class="keyword">if</span> acc &gt; 0.999:</span><br><span class="line">                    saver.save(sess, <span class="string">&quot;./crack_capcha.model&quot;</span>, <span class="attribute">global_step</span>=step)</span><br><span class="line">                    break</span><br><span class="line">            <span class="keyword">step</span> += 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># train_crack_captcha_cnn()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练完成后,注释train_crack_captcha_cnn()，取消下面的注释，开始预测，注意更改预测集目录</span></span><br><span class="line"><span class="comment"># def crack_captcha():</span></span><br><span class="line"><span class="comment">#     output = crack_captcha_cnn()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     saver = tf.train.Saver()</span></span><br><span class="line"><span class="comment">#     with tf.Session() as sess:</span></span><br><span class="line"><span class="comment">#         saver.restore(sess, tf.train.latest_checkpoint(&#x27;.&#x27;))</span></span><br><span class="line"><span class="comment">#         n = 1</span></span><br><span class="line"><span class="comment">#         while n &lt;= 10:</span></span><br><span class="line"><span class="comment">#             text, verification_code_training_images = get_name_and_image()</span></span><br><span class="line"><span class="comment">#             verification_code_training_images = 1 * (verification_code_training_images.flatten())</span></span><br><span class="line"><span class="comment">#             predict = tf.argmax(tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span></span><br><span class="line"><span class="comment">#             text_list = sess.run(predict, feed_dict=&#123;X: [verification_code_training_images], keep_prob: 1&#125;)</span></span><br><span class="line"><span class="comment">#             vec = text_list[0].tolist()</span></span><br><span class="line"><span class="comment">#             predict_text = vec2name(vec)</span></span><br><span class="line"><span class="comment">#             print(&quot;正确: &#123;&#125;  预测: &#123;&#125;&quot;.format(text, predict_text))</span></span><br><span class="line"><span class="comment">#             n += 1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># crack_captcha()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def captcha():</span><br><span class="line">    output = crack_captcha_cnn()</span><br><span class="line">    saver = tf.train.Saver()</span><br><span class="line">    with tf.Session() as sess:</span><br><span class="line">        saver.restore(sess, tf.train.latest_checkpoint(<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">        first_time = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            users_number = 0</span><br><span class="line">            <span class="keyword">for</span> information <span class="keyword">in</span> info:</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    session = requests.Session()</span><br><span class="line">                    headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0&quot;</span>&#125;</span><br><span class="line">                    html = session.<span class="built_in">get</span>(IMAGE_URL, <span class="attribute">headers</span>=headers).content</span><br><span class="line">                    with open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) as file:</span><br><span class="line">                        file.write(html)</span><br><span class="line">                    img = Image.open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>).convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">                    # 二值化</span><br><span class="line">                    img = img.point(lambda x: 255 <span class="keyword">if</span> x &gt; 173 <span class="keyword">else</span> 0)</span><br><span class="line">                    img = np.array(img)</span><br><span class="line">                    img = 1 * (img.flatten())</span><br><span class="line">                    predict = tf.argmax(tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span><br><span class="line">                    text_list = sess.<span class="built_in">run</span>(predict, feed_dict=&#123;X: [img], keep_prob: 1&#125;)</span><br><span class="line">                    vec = text_list[0].tolist()</span><br><span class="line">                    # <span class="built_in">print</span>(<span class="string">&quot;预测:&quot;</span>, vec2name(vec))</span><br><span class="line"></span><br><span class="line">                    session.<span class="built_in">get</span>(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/login.jsp&#x27;</span>)</span><br><span class="line">                    data = &#123;<span class="string">&#x27;j_username&#x27;</span>: information[<span class="string">&#x27;account&#x27;</span>], <span class="string">&#x27;j_password&#x27;</span>: information[<span class="string">&#x27;password&#x27;</span>],</span><br><span class="line">                            <span class="string">&#x27;validateCode&#x27;</span>: vec2name(vec)&#125;</span><br><span class="line">                    r = session.post(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/j_spring_ids_security_check&#x27;</span>, <span class="attribute">data</span>=data, <span class="attribute">headers</span>=headers)</span><br><span class="line">                    <span class="keyword">if</span> (re.search(r<span class="string">&#x27;校验码错误&#x27;</span>, r.text, re.I | re.M)) is None:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;验证码正确通过！&quot;</span>)</span><br><span class="line">                        n = session.<span class="built_in">get</span>(</span><br><span class="line">                            <span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/jwnavmenu.do?menuItemWid=1E057E24ABAB4CAFE0540010E0235690&#x27;</span>,</span><br><span class="line">                            <span class="attribute">headers</span>=headers)</span><br><span class="line">                        soup = BeautifulSoup(n.content, <span class="attribute">features</span>=<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">                        s = soup.select(<span class="string">&#x27;div[title=&quot;有效成绩&quot;] .t_con td[align=&quot;center&quot;]&#x27;</span>)</span><br><span class="line">                        subjects_number = int(len(s) / 11)</span><br><span class="line">                        # <span class="built_in">print</span>(<span class="string">&quot;科目数:&quot;</span>, subjects_number)</span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> range(0, subjects_number):</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;序号:&#x27;</span>, s[i * 11].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;学年学期:&#x27;</span>, s[i * 11 + 1].get_text( <span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程号:&#x27;</span>, s[i * 11 + 2].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程名称:&#x27;</span>, s[i * 11 + 3].get_text( <span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程类别:&#x27;</span>, s[i * 11 + 4].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;任选课类别:&#x27;</span>, s[i * 11 + 5].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程性质:&#x27;</span>, s[i * 11 + 6].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;学分:&#x27;</span>, s[i * 11 + 7].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;成绩:&#x27;</span>, s[i * 11 + 8].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;****************&#x27;</span>)</span><br><span class="line">                            ss = <span class="string">&#x27;&#123;&#125; &#123;&#125; 成绩: &#123;&#125;&#x27;</span>.format(s[i * 11].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>), s[i * 11 + 3].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>),</span><br><span class="line">                                                       s[i * 11 + 8].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            <span class="keyword">if</span> first_time:</span><br><span class="line">                                String1[users_number].append(ss)</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                String2[users_number].append(ss)</span><br><span class="line">                        # 发送邮件</span><br><span class="line">                        my_user = <span class="string">&#x27;%s&#x27;</span> % information[<span class="string">&#x27;email&#x27;</span>]</span><br><span class="line">                        sss = <span class="string">&quot;&quot;</span>.join(list(<span class="built_in">set</span>(String2[users_number]).difference(<span class="built_in">set</span>(String1[users_number]))))  # b中有而a中没有的</span><br><span class="line">                        ret = <span class="literal">True</span></span><br><span class="line">                        <span class="keyword">if</span> first_time:</span><br><span class="line">                            text = <span class="string">&#x27;\n&#x27;</span>.join(String1[users_number])</span><br><span class="line"></span><br><span class="line">                            try:</span><br><span class="line">                                msg = MIMEText(text, <span class="string">&#x27;plain&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                                msg[<span class="string">&#x27;From&#x27;</span>] = formataddr([<span class="string">&quot;weijiajin&quot;</span>, SENDER])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;To&#x27;</span>] = formataddr([<span class="string">&quot;亲～:&quot;</span>, my_user])  # 括号里的对应收件人邮箱昵称、收件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&quot;全部成绩！好好学习！&quot;</span>  # 邮件的主题，也可以说是标题</span><br><span class="line">                               <span class="built_in"> server </span>= smtplib.SMTP_SSL(<span class="string">&quot;smtp.qq.com&quot;</span>, 465)  # 发件人邮箱中的SMTP服务器，端口是465</span><br><span class="line">                                server.login(SENDER, PASSWORD)  # 括号中对应的是发件人邮箱账号、邮箱密码</span><br><span class="line">                                server.sendmail(SENDER, [my_user, ], msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span><br><span class="line">                                server.quit()  # 关闭连接</span><br><span class="line">                            except Exception:  # 如果 try 中的语句没有执行，则会执行下面的 <span class="attribute">ret</span>=<span class="literal">False</span></span><br><span class="line">                                ret = <span class="literal">False</span></span><br><span class="line">                            <span class="keyword">if</span> ret:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件成功！&quot;</span>)</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件失败！&quot;</span>)</span><br><span class="line">                            String2[users_number].clear()</span><br><span class="line">                            users_number = + 1</span><br><span class="line">                            break</span><br><span class="line">                        elif sss == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&quot;没有最新成绩！不发送邮件！&quot;</span>)</span><br><span class="line">                            String2[users_number].clear()</span><br><span class="line">                            users_number = + 1</span><br><span class="line">                            break</span><br><span class="line">                        elif sss != <span class="string">&quot;&quot;</span>:</span><br><span class="line">                            text = <span class="string">&#x27;\n&#x27;</span>.join(String2[users_number])</span><br><span class="line">                            title = <span class="string">&quot;&quot;</span>.join(list(<span class="built_in">set</span>(String2[users_number]).difference(<span class="built_in">set</span>(String1[users_number]))))</span><br><span class="line">                            try:</span><br><span class="line">                                msg = MIMEText(text, <span class="string">&#x27;plain&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                                msg[<span class="string">&#x27;From&#x27;</span>] = formataddr([<span class="string">&quot;weijiajin&quot;</span>, SENDER])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;To&#x27;</span>] = formataddr([<span class="string">&quot;亲～&quot;</span>, my_user])  # 括号里的对应收件人邮箱昵称、收件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&quot;最新成绩出来啦～&quot;</span> + title  # 邮件的主题，也可以说是标题</span><br><span class="line">                               <span class="built_in"> server </span>= smtplib.SMTP_SSL(<span class="string">&quot;smtp.qq.com&quot;</span>, 465)  # 发件人邮箱中的SMTP服务器，端口是465</span><br><span class="line">                                server.login(SENDER, my_pass)  # 括号中对应的是发件人邮箱账号、邮箱密码</span><br><span class="line">                                server.sendmail(SENDER, [my_user, ], msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span><br><span class="line">                                server.quit()  # 关闭连接</span><br><span class="line">                            except Exception:  # 如果 try 中的语句没有执行，则会执行下面的 <span class="attribute">ret</span>=<span class="literal">False</span></span><br><span class="line">                                ret = <span class="literal">False</span></span><br><span class="line">                            <span class="keyword">if</span> ret:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件失败！&quot;</span>)</span><br><span class="line">                            String1[users_number].clear()</span><br><span class="line">                            String1[users_number] = String2[users_number]</span><br><span class="line">                            String2[users_number].clear()</span><br><span class="line">                            users_number = + 1</span><br><span class="line">                            break</span><br><span class="line">                        time.sleep(300)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;校验码错误！重新尝试中......&quot;</span>)</span><br><span class="line"></span><br><span class="line">            first_time = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def auto_download_train_images():</span><br><span class="line">    output = crack_captcha_cnn()</span><br><span class="line">    saver = tf.train.Saver()</span><br><span class="line">    with tf.Session() as sess:</span><br><span class="line">        saver.restore(sess, tf.train.latest_checkpoint(<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">        times1 = 0</span><br><span class="line">        times2 = 0</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            session = requests.Session()</span><br><span class="line">            headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0&quot;</span>&#125;</span><br><span class="line">            html = session.<span class="built_in">get</span>(IMAGE_URL, <span class="attribute">headers</span>=headers).content</span><br><span class="line">            with open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) as file:</span><br><span class="line">                file.write(html)</span><br><span class="line">            img = Image.open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>).convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">            # 二值化</span><br><span class="line">            img = img.point(lambda x: 255 <span class="keyword">if</span> x &gt; 173 <span class="keyword">else</span> 0)</span><br><span class="line">            img1 = np.array(img)</span><br><span class="line">            img1 = 1 * (img1.flatten())</span><br><span class="line">            predict = tf.argmax(tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span><br><span class="line">            text_list = sess.<span class="built_in">run</span>(predict, feed_dict=&#123;X: [img1], keep_prob: 1&#125;)</span><br><span class="line">            vec = text_list[0].tolist()</span><br><span class="line">            # <span class="built_in">print</span>(<span class="string">&quot;预测:&quot;</span>, vec2name(vec))</span><br><span class="line">            session.<span class="built_in">get</span>(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/login.jsp&#x27;</span>)</span><br><span class="line">            data = &#123;<span class="string">&#x27;j_username&#x27;</span>: <span class="string">&#x27;201611101122&#x27;</span>, <span class="string">&#x27;j_password&#x27;</span>: <span class="string">&#x27;174519&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;validateCode&#x27;</span>: vec2name(vec)&#125;</span><br><span class="line">            r = session.post(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/j_spring_ids_security_check&#x27;</span>, <span class="attribute">data</span>=data, <span class="attribute">headers</span>=headers)</span><br><span class="line">            <span class="keyword">if</span> (re.search(r<span class="string">&#x27;校验码错误&#x27;</span>, r.text, re.I | re.M)) is None:</span><br><span class="line">                # <span class="built_in">print</span>(<span class="string">&quot;验证码正确通过！&quot;</span>)</span><br><span class="line">                # <span class="built_in">print</span>(times1)</span><br><span class="line">                image_name = <span class="string">&#x27;&#123;image_name&#125;.png&#x27;</span></span><br><span class="line">                img.save(os.path.join(<span class="string">&#x27;./verification_code_training_images/&#x27;</span>, image_name.format(<span class="attribute">image_name</span>=vec2name(vec))))</span><br><span class="line">                times1 = times1 + 1</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                # <span class="built_in">print</span>(<span class="string">&quot;校验码错误！&quot;</span>)</span><br><span class="line">                # <span class="built_in">print</span>(times2)</span><br><span class="line">                image_name = <span class="string">&#x27;&#123;image_name&#125;.png&#x27;</span></span><br><span class="line">                img.save(os.path.join(<span class="string">&#x27;./error_images/&#x27;</span>, image_name.format(<span class="attribute">image_name</span>=vec2name(vec))))</span><br><span class="line">                times2 = times2 + 1</span><br><span class="line">            rate = times1/(times2+times1)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;总次数: % s&quot;</span> % (times2+times1)+<span class="string">&quot;正确率：% s &quot;</span> % rate)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">captcha()</span><br><span class="line"><span class="comment"># auto_download_train_images()</span></span><br></pre></td></tr></table></figure><h4 id="TODO："><a href="#TODO：" class="headerlink" title="TODO："></a>TODO：</h4><ul><li>增加绩点计算公式</li><li>集成于微信小程序或者微信公众号</li><li>优化代码</li></ul><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><p><a href="https://morvanzhou.github.io/">https://morvanzhou.github.io/</a></p></li><li><p><a href="https://www.iswin.org/2016/10/15/Simple-CAPTCHA-Recognition-with-Machine-Learning/">https://www.iswin.org/2016/10/15/Simple-CAPTCHA-Recognition-with-Machine-Learning/</a></p></li><li><p><a href="https://finthon.com/python-tensorflow-cnn-captcha/">https://finthon.com/python-tensorflow-cnn-captcha/</a></p></li><li><p><a href="http://blog.topspeedsnail.com/archives/10858">http://blog.topspeedsnail.com/archives/10858</a></p></li></ul>]]></content>
    
    
    <summary type="html">程序自动化操作，简化成绩查询过程，节省时间，提高效率。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="tensorflow" scheme="https://weijiajin.com/blog/tags/tensorflow/"/>
    
    <category term="python" scheme="https://weijiajin.com/blog/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://weijiajin.com/60aa4714ad3e/"/>
    <id>https://weijiajin.com/60aa4714ad3e/</id>
    <published>2017-11-25T14:12:39.000Z</published>
    <updated>2022-03-06T13:52:01.603Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Welcome to Hexo!</summary>
    
    
    
    
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>weijiajin</title>
  <icon>https://weijiajin.com/images/logo.png</icon>
  <subtitle>「Stay Hungry.Stay Foolish.」 | 求知若饥，虚心若愚</subtitle>
  <link href="https://weijiajin.com/atom.xml" rel="self"/>
  
  <link href="https://weijiajin.com/"/>
  <updated>2022-08-12T10:06:50.953Z</updated>
  <id>https://weijiajin.com/</id>
  
  <author>
    <name>weijiajin</name>
    <email>wejudging@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++程序设计简答题（二）</title>
    <link href="https://weijiajin.com/e88b8adf319c/"/>
    <id>https://weijiajin.com/e88b8adf319c/</id>
    <published>2022-03-16T13:01:25.000Z</published>
    <updated>2022-08-12T10:06:50.953Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="/images/文章图片/程序设计简答题/logo.png"/></div></div><h4 id="1-比较值传递和引用传递的相同点和不同点。"><a href="#1-比较值传递和引用传递的相同点和不同点。" class="headerlink" title="1. 比较值传递和引用传递的相同点和不同点。"></a>1. 比较值传递和引用传递的相同点和不同点。</h4><p>值传递是指当发生函数调用时，给形参分配内存空间，并用实参来初始化形参（直接将 实参的值传递给形参）。这一过程是参数值的单向传递过程，一旦形参获得了值便与实参脱 离关系，此后无论形参发生了怎样的改变，都不会影响到实参。<br>引用传递将引用作为形参，在执行主调函数中的调用语句时，系统自动用实参来初始化 形参。这样形参就成为实参的一个别名，对形参的任何操作也就直接作用于实参。</p><h4 id="2-什么叫内联函数-它有哪些特点？"><a href="#2-什么叫内联函数-它有哪些特点？" class="headerlink" title="2 什么叫内联函数?它有哪些特点？"></a>2 什么叫内联函数?它有哪些特点？</h4><p>定义时使用关键字 inline 的函数叫做内联函数；编译器在编译时在调用处用函数体进行替换,节省了参数传递、控制转移等开销；<br>内联函数体内不能有循环语句和 switch 语句；<br>内联函数的定义必须出现在内联函数第一次被调用之前；对内联函数不能进行异常接口声明；</p><h4 id="3-什么叫复制构造函数？复制构造函数何时被调用？"><a href="#3-什么叫复制构造函数？复制构造函数何时被调用？" class="headerlink" title="3 什么叫复制构造函数？复制构造函数何时被调用？"></a>3 什么叫复制构造函数？复制构造函数何时被调用？</h4><p>复制构造函数是一种特殊的构造函数，具有一般构造函数的所有特性，其形参是本类的 对象的引用 (const T &amp;)。其作用是使用一个已经存在的对象（由复制构造函数的参数指定），去初始化同类的一个新对象。<br>（1） 当用类的一个对象去初始化该类的另一个对象时；<br>（2） 如果函数的形参是类的对象，调用函数时进行形参和实参结合时；<br>（3） 如果函数的返回值是类的对象，函数执行完成返回调用者时。</p><h4 id="4-复制构造函数与赋值运算符（-x3D-）有何不同？"><a href="#4-复制构造函数与赋值运算符（-x3D-）有何不同？" class="headerlink" title="4 复制构造函数与赋值运算符（&#x3D;）有何不同？"></a>4 复制构造函数与赋值运算符（&#x3D;）有何不同？</h4><p>从概念上区分：复制构造函数是构造函数，而赋值操作符属于操作符重载范畴，它通常 是类的成员函数 从原型上来区分：<br>复制构造函数原型 ClassType(const ClassType &amp;);无返回值；<br>赋值操作符原型 ClassType&amp; operator&#x3D;(const ClassType &amp;);返回值为 ClassType 的引用，便于连续赋 值操作 从使用的场合来区分：复制构造函数用于产生对象，它用于以下几个地方：函数参数为 类的值类型时、函数返回值为类类型时以及初始化语句</p><h4 id="5-什么叫作用域？有哪几种类型的作用域？"><a href="#5-什么叫作用域？有哪几种类型的作用域？" class="headerlink" title="5 什么叫作用域？有哪几种类型的作用域？"></a>5 什么叫作用域？有哪几种类型的作用域？</h4><p>作用域讨论的是标识符的有效范围，作用域是一个标识符在程序正文中有效的区域。 C++的作用域分为：函数原型作用域、函数作用域、文件作用域(全局作用域)、块作用 域（局部作用域）、类作用域和名字空间作用域。</p><h4 id="6-什么叫做可见性？可见性的一般规则是什么？"><a href="#6-什么叫做可见性？可见性的一般规则是什么？" class="headerlink" title="6 什么叫做可见性？可见性的一般规则是什么？"></a>6 什么叫做可见性？可见性的一般规则是什么？</h4><p>可见性是标识符是否可以引用的问题； 可见性的一般规则是：标识符要声明在前，引用在后，在同一作用域中，不能声明同名 的标识符。对于在不同的作用域声明的标识符，遵循的原则是：若有两个或多个具有包含关 系的作用域，外层声明的标识符如果在内层没有声明同名标识符时仍可见，如果内层声明了 同名标识符则外层标识符不可见。</p><h4 id="7-什么叫静态数据成员？他有何特点？"><a href="#7-什么叫静态数据成员？他有何特点？" class="headerlink" title="7 什么叫静态数据成员？他有何特点？"></a>7 什么叫静态数据成员？他有何特点？</h4><p>类的静态数据成员是类的数据成员的一种特例，采用 static 关键字来声明。对于类的普<br>通数据成员，每一个类的对象都拥有一个拷贝，就是说每一个对象的同名数据成员可以分别存储不同的值，这也是保证对象拥有区别于其他对象的特征的需要，但是静态数据成员，每 个类只要一个拷贝，由所有该类的对象共同维护和使用，这个共同维护，使用也就实现了同一类的不同对象之间的数据共享。</p><h4 id="8-什么叫静态函数成员？他有何特点？"><a href="#8-什么叫静态函数成员？他有何特点？" class="headerlink" title="8 什么叫静态函数成员？他有何特点？"></a>8 什么叫静态函数成员？他有何特点？</h4><p>使用 static 关键字声明的函数成员是静态的，静态函数成员属于整个类，被同一个类的 所有对象共同维护，为这些所有对象共享。<br>静态成员函数具有以下两个方面的好处：<br>一是由于静态成员函数只能直接访问同一个类的静态数据成员，可以保证不会对该类的其余数据成员造成负面影响；<br>二是同一个类只维护一个静态函数成员的拷贝，节约了系统的开销，提高 程序的运行效率。</p><h4 id="9-什么叫友元函数？什么叫友元类？"><a href="#9-什么叫友元函数？什么叫友元类？" class="headerlink" title="9 什么叫友元函数？什么叫友元类？"></a>9 什么叫友元函数？什么叫友元类？</h4><p>友元函数是使用关键字 friend 关键字声明的函数，它可以访问相应类的保护成员和私 有成员。友元类是使用 friend 关键字声明的类，它的所有成员函数都是相应类的友元函数。<br>友元不可继承，没有传递性。</p><h4 id="10-在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两类变量做了怎样的不同处理导致了这种差异？"><a href="#10-在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两类变量做了怎样的不同处理导致了这种差异？" class="headerlink" title="10 在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两类变量做了怎样的不同处理导致了这种差异？"></a>10 在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两类变量做了怎样的不同处理导致了这种差异？</h4><p>局部作用域中静态变量的特点是：它并不会随着每次函数调用而产生一个副本，也不会 随着函数的返回而失效，定义时未指定初值的基本类型静态变量，会被以 0 值初始化；局部作用域的全部变量诞生于声明点，结束于声明所在的块执行完毕之时，并且不指定初值，意 味初值不确定。普通局部变量存放于栈区，超出作用域后，变量被撤销，其所占的内存也被 回收；静态局部变量存放于静态数据存储区，全局可见，但是作用域是局部作用域，超出作用域后变量仍然存在。</p><h4 id="11-引用和指针有何区别？何时只能使用指针而不能使用引用？"><a href="#11-引用和指针有何区别？何时只能使用指针而不能使用引用？" class="headerlink" title="11 引用和指针有何区别？何时只能使用指针而不能使用引用？"></a>11 引用和指针有何区别？何时只能使用指针而不能使用引用？</h4><p>引用是一个别名，不能为 NULL 值，不能被重新分配；<br>指针是一个存放地址的变量。<br>当需要对变量重新赋以另外的地址或赋值为 NULL 时只能使用指针。<br>引用是一个变量的别名，本身不单独分配自己的内存空间，而指针有自己的内存空间。</p><h4 id="12-比较类的-3-种继承方式之间的差别？"><a href="#12-比较类的-3-种继承方式之间的差别？" class="headerlink" title="12 比较类的 3 种继承方式之间的差别？"></a>12 比较类的 3 种继承方式之间的差别？</h4><p>公有继承，使得基类 public(公有)和 protected(保护)成员的访问属性在派生类中不变， 而基类 private(私有)成员不可访问。<br>私有继承，使得基类 public(公有)和 protected(保护)成员都以 private(私有)成员身份出 现在派生类中，而基类 private(私有)成员不可访问。<br>保护继承中，基类 public(公有)和 protected(保护)成员都以 protected(保护)成员身份出 现在派生类中，而基类 private(私有)成员不可访问。</p><h4 id="13-什么叫虚基类？有何作用？"><a href="#13-什么叫虚基类？有何作用？" class="headerlink" title="13 什么叫虚基类？有何作用？"></a>13 什么叫虚基类？有何作用？</h4><p>当某类的部分或全部直接基类是从另一个基类派生而来，这些直接基类中，从上一级基类继承来的成员就拥有相同的名称，派生类的对象的这些同名成员在内存中同时拥有多 个拷贝，我们可以使用作用域分辨符来唯一标识并分别访问它们。<br>我们也可以将直接基类的共同基类设置为虚基类，这时从不同的路径继承过来的该类成员在内存中只拥有一个拷 贝，这样就解决了同名成员的唯一标识问题。<br>虚基类的声明是在派生类的定义过程，其语法格式为： class 派生类名：virtual 继承方式 基类名 上述语句声明基类为派生类的虚基类，在多继承情况下，虚基类关键字的作用范围和 继承方式关键字相同，只对紧跟其后的基类起作用。<br>声明了虚基类之后，虚基类的成员在 进一步派生过程中，和派生类一起维护一个内存数据拷贝。 虚基类就是为了解决多继承产生的二义性问题</p><h4 id="14-组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什-么？继承呢？"><a href="#14-组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什-么？继承呢？" class="headerlink" title="14 组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什 么？继承呢？"></a>14 组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什 么？继承呢？</h4><p>组合和继承它们都使得已有对象成为新对象的一部分，从而达到代码复用的目的。组合 和继承其实反映了两种不同的对象关系。<br>组合反映的是“有一个”（has-s）的关系，如果类 B 中存在一个类 A 的内嵌对象，表示的 是每一个 B 类型的对象都“有一个”A 类型的对象，A 类型的对象与 B 类型的对象是部分整体 的关系。<br>继承反映的是“是一个”（is-a）的关系，在“是一个”关系中，如果类 A 是类 B 的公有基 类，那么这表示每一个 B 类型的对象都“是一个”A 类型的对象，B 类型的对象与 A 类型的对 象是特殊与一般的关系。</p><h4 id="15-基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显-示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？"><a href="#15-基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显-示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？" class="headerlink" title="15 基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显 示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？"></a>15 基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显 示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？</h4><p>派生类指针可以隐含转换为基类指针，而基类指针要想转换为派生类指针，则转换一定 要显示地进行。因为从特殊的指针转换到一般的指针时安全的，因此允许隐含转换；<br>从一般 的指针转换到特殊的指针是不安全的，因此只能显示地转换。基类对象一般无法被显式转换 为派生类对象。在多重继承情况下，执行基类指针到派生类指针的显式转换时，有时需要将 指针所存储的地址值进行调整后才能得到新指针的值。<br>但是，如果 A 类型是 B 类型的虚拟 基类，虽然 B 类型的指针可以隐含转换为 A 类型，但是 A 类型指针却无法通过 static_case 隐含转换为 B 类型的指针。</p><h4 id="16-什么叫做多态性？在-C-种是如何实现多态的？"><a href="#16-什么叫做多态性？在-C-种是如何实现多态的？" class="headerlink" title="16 什么叫做多态性？在 C++种是如何实现多态的？"></a>16 什么叫做多态性？在 C++种是如何实现多态的？</h4><p><strong>多态是指同样的消息被不同类型的对象接收时导致完全不同的行为，是对类的特定成员 函数的再抽象。</strong>C++支持重载多态，强制多态，包含多态和参数多态。 在基类中声明相应的函数为 virtual 型，然后在派生类中实现该函数，这样就可以通过 基类指针调用派生类对象的函数，实现了运行时动态绑定，即多态的功能。</p><h4 id="17-什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？"><a href="#17-什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？" class="headerlink" title="17 什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？"></a>17 什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？</h4><p>带有纯虚函数的类是抽象类。其主要作用是通过它为一个类族建立一个公共的接口，使 他们能够更有效地发挥多态特性。抽象类声明了一个类族派生类的共同接口，而接口的完整 实现，即纯虚函数的函数体，要由派生类自己定义。抽象类派生出新的类之后，如果派生类 给出所有纯虚函数的函数实现，这个派生类就可以定义自己的对象，因而不再是抽象类；反 之，如果派生类没有给出全部纯虚函数的实现，此时的派生类仍然是一个抽象类。</p><h4 id="18-在-C-中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？"><a href="#18-在-C-中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？" class="headerlink" title="18 在 C++中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？"></a>18 在 C++中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？</h4><p>在 C++中，不能声明虚构造函数，多态是不同的对象对同一消息有不同的行为特性，虚 函数作为运行过程中多态的基础，主要是针对对象的，而构造函数是在对象产生之前运行的， 因此虚构造函数是没有意义的；<br>可以声明虚析构函数，析构函数的功能是在该类对象消亡之前进行一些必要的清理工作， 如果一个类的析构函数是虚函数，那么，由它派生而来的所有子类的析构函数也是虚函数。 析构函数设置为虚函数之后，在使用指针引用时可以动态联编，实现运行时的多态，保证使 用基类的指针就能够调用适当的析构函数针对不同的对象进行清理工作。</p><h4 id="19-什么叫做流？流的提取和插入是指什么？I-x2F-O-流在-C-中起着怎样的作用？"><a href="#19-什么叫做流？流的提取和插入是指什么？I-x2F-O-流在-C-中起着怎样的作用？" class="headerlink" title="19 什么叫做流？流的提取和插入是指什么？I&#x2F;O 流在 C++中起着怎样的作用？"></a>19 什么叫做流？流的提取和插入是指什么？I&#x2F;O 流在 C++中起着怎样的作用？</h4><p>流是一种抽象，它 负责在数据的生产者和数据的消费者之间建立联系，并管理数据的流 动，一般意义下的读操作在流数据抽象中被称为（从流中）提取，写操作被称为（向流中） 插入。<br>操作系统是将键盘、屏幕、打印机和通信端口作为扩充文件来处理的，I&#x2F;O 流类就是 用来与这些扩充文件进行交互，实现数据的输入与输出。</p><h4 id="20-什么叫做异常？什么叫做异常处理？"><a href="#20-什么叫做异常？什么叫做异常处理？" class="headerlink" title="20 什么叫做异常？什么叫做异常处理？"></a>20 什么叫做异常？什么叫做异常处理？</h4><p>当一个函数在执行的过程中出现了一些不平常的情况，或运行结果无法定义的情况，使 得操作不得不被中断时，我们说出现了异常。异常通常是用 throw 关键字产生的一个对象， 用来表明出现了一些意外的情况。我们在设计程序时，就要充分考虑到各种意外情况，并给 与恰当的处理。这就是我们所说的异常处理。</p><h4 id="21-C-的异常处理机制有何优点？"><a href="#21-C-的异常处理机制有何优点？" class="headerlink" title="21 C++的异常处理机制有何优点？"></a>21 C++的异常处理机制有何优点？</h4><p>C++的异常处理机制使得异常的引发和处理不必在同一函数中，这样底层的函数可以着 重解决具体问题，而不必过多地考虑对异常的处理。上层调用者可以在适当的位置设计对不 同类型异常的处理。</p><h4 id="22-比较函数重载和虚函数在概念和使用方式方面有什么区别？"><a href="#22-比较函数重载和虚函数在概念和使用方式方面有什么区别？" class="headerlink" title="22 比较函数重载和虚函数在概念和使用方式方面有什么区别？"></a>22 比较函数重载和虚函数在概念和使用方式方面有什么区别？</h4><p>    函数重载可以用于普通函数（非成员的函数）和类的成员函数，而虚函数只能用于 类的成员函数。<br>    函数重载可以用于构造函数，而虚函数不能用于构造函数。<br>    如果对成员函数进行重载，则重载的函数与被重载的函数应当都是同一类中的成员 函数，不能分属于两个不同继承层次的类。函数重载是横向的重载。虚函数是对同 一类族中的基类和派生类的同名函数的处理，即允许在派生类中对基类的成员函数 重新定义。虚函数的作用是处理纵向的同名函数。<br>    重载的函数必须具有相同的函数名，但函数的参数个数和参数类型二者中至少有一 样不同，否则在编译时无法区分它们。而虚函数则要求再同一类族中的所有虚函数 不仅函数名相同，而且要求函数类型、函数的参数个数和参数类型都全部相同，否 则就不是重定义了。也就不是虚函数了。<br>    函数重载是在程序编译阶段确定操作的对象的，属静态关联。虚函数是在程序运行 阶段确定操作的对象的，属动态关联。</p><h4 id="23-比较-class-和-struct-结构体的异同"><a href="#23-比较-class-和-struct-结构体的异同" class="headerlink" title="23 比较 class 和 struct 结构体的异同"></a>23 比较 class 和 struct 结构体的异同</h4><p>不同之处：</p><p>    默认成员访问权限不同，struct 默认是 public，而 class 默认是 private。<br>    默认继承方式不同，struct 默认是 public，而 class 默认是 private。<br>    在定义模板参数时可以用 class 但不能用 struct。 相同之处在于：都可以包含成员函数，都可以实现继承，都可以实现多态。</p><h4 id="24-浅拷贝和深拷贝的区别？"><a href="#24-浅拷贝和深拷贝的区别？" class="headerlink" title="24 浅拷贝和深拷贝的区别？"></a>24 浅拷贝和深拷贝的区别？</h4><p>在某些情况下，类内的成员变量需要动态开辟堆内存，如果实行按位拷贝，就可能会出 现两个对象里面的成员变量指针指向同一块内存区域。当回收其中一个对象时，该对象成员 变量所指向的内存区域也将回收，会导致另一个对象存在野指针的情况。非常危险。 深拷贝和浅拷贝可以简单理解为：如果一个类拥有资源，当这个类的对象发生复制过程 的时候，资源重新分配，这个过程就是深拷贝，反之，没有重新分配资源，就是浅拷贝。</p><h4 id="25-const-和-static-作用-const-作用："><a href="#25-const-和-static-作用-const-作用：" class="headerlink" title="25 const 和 static 作用 const 作用："></a>25 const 和 static 作用 const 作用：</h4><p>const:</p><p>    定义 const 常量，具有不可变性，保护被修饰的东西。防止意外修改，增强程序的 健壮性。<br>    便于类型检查，使编译器对处理内容有更多的了解。<br>    可以避免意义模糊的数字出现，也便于进行参数的修改。同宏定义一样，可以做到 不变则以，一变都变。<br>    const 定义的常量在程序运行过程中只有一份拷贝，而宏定义却又若干份拷贝。</p><p>static:</p><p>    作为类的静态数据成员：被类的所有对象共同拥有，在内存中只有一份拷贝。在类 内声明，在类外初始化。<br>    在全局变量前加上 static 关键字，该变量被定义为一个全局变量，<br>    特点：<br>    a) 变量在全局数据区分配内存<br>    b) 如果不显示初始化，则隐式的初始化为 0<br>    c) 作用域仅限于本文件内<br>    在局部变量前加 static 关键字，该变量被定义为静态局部变量，<br>    特点：<br>    a) 在全局数据区分配内存<br>    b) 如果不显示初始化，则隐式的初始化为 0<br>    c) 始终驻留在全局数据区，直到程序结束。作用域仅限于函数体内，当函数执行 完后作用域随之消失。<br>    静态函数，<br>    特点：<br>    a) 静态函数只能在本源文件中使用<br>    b) 在文件作用域下声明的 inline 函数默认是 static 的</p><h4 id="26-析构函数带-virtual-和-不带-virtual-的区别"><a href="#26-析构函数带-virtual-和-不带-virtual-的区别" class="headerlink" title="26 析构函数带 virtual 和 不带 virtual 的区别"></a>26 析构函数带 virtual 和 不带 virtual 的区别</h4><p>如果基类要被派生，则析构函数一定要带 virtual。否则，通过基类指针指向派生类对象 后，删除该指针时并不会释放派生类对象的空间。也即，不会调用派生类的析构函数。</p><p>不带 virtual 的几种情况：</p><p>    作为非公有基类<br>    不作为接口使用的基类<br>    可以保证这个类不被 public 继承<br>    如果他的所有派生类的 virtual 函数都是什么都不做<br>    如果不需要基类指针指向派生类对象</p><h4 id="27-重写，重载和隐藏的区别？"><a href="#27-重写，重载和隐藏的区别？" class="headerlink" title="27 重写，重载和隐藏的区别？"></a>27 重写，重载和隐藏的区别？</h4><p>重载：在一个类中的同名函数，但参数列表不同，函数的返回值相同。<br>隐藏：派生类的函数屏蔽了与其同名的父类函数<br>重写（覆盖）：父类和子类存在相同的函数，包括返回值，参数列表均相同，父类的该 函数必须含有 virtual 关键字。</p><h4 id="28-C-中的四个默认的函数"><a href="#28-C-中的四个默认的函数" class="headerlink" title="28 C++中的四个默认的函数"></a>28 C++中的四个默认的函数</h4><p>    构造函数：先基类后派生类<br>    拷贝函数：对象被创建时调用<br>    调用拷贝构造函数的情况：<br>    a) 一个对象以值传递的方式传入函数体<br>    b) 一个对象以值传递的方式从函数返回<br>    c) 一个对象需要通过另外一个对象初始化<br>    析构函数：每个类只有一个析构函数，<br>    赋值函数：</p><h4 id="29-不可以被重载的运算符–五个"><a href="#29-不可以被重载的运算符–五个" class="headerlink" title="29 不可以被重载的运算符–五个"></a>29 不可以被重载的运算符–五个</h4><p>类属关系运算符、成员指针运算符“、作用域运算符、 sizeof 运算符和三目 运算符<br>. .* :: sizeof() ?:</p><h4 id="30-三种字符数组初始化的方法"><a href="#30-三种字符数组初始化的方法" class="headerlink" title="30 三种字符数组初始化的方法"></a>30 三种字符数组初始化的方法</h4><p>char str[5] &#x3D; {“hello”};<br>char str[6] &#x3D; {‘a’,‘b’,‘c’,‘d’,‘e’,’\0’};<br>char str[] &#x3D; “abcde”;</p><h4 id="31-哪些操作符必须重载为成员函数"><a href="#31-哪些操作符必须重载为成员函数" class="headerlink" title="31 哪些操作符必须重载为成员函数"></a>31 哪些操作符必须重载为成员函数</h4><p>必须重载：<br>&#x3D; -&gt; () [] new delete</p><h4 id="32-什么是“else-摇摆问题”，举例说明"><a href="#32-什么是“else-摇摆问题”，举例说明" class="headerlink" title="32 什么是“else 摇摆问题”，举例说明"></a>32 什么是“else 摇摆问题”，举例说明</h4><p>C++编译器总是把 else 同与它最近的 if 联系起来，因此如果没有正确放置花括号对就 会出现逻辑错误。</p><h4 id="33-函数模板和函数重载的区别与联系"><a href="#33-函数模板和函数重载的区别与联系" class="headerlink" title="33 函数模板和函数重载的区别与联系"></a>33 函数模板和函数重载的区别与联系</h4><p>函数重载：C++允许使用同一个函数名，不同的参数个数和参数类型来定义多个函数。 重载函数的参数个数，类型，顺序至少有一个不同。返回值可以相同，也可以不同。</p><p>函数模板：是对一类同构函数的抽象定义，并不是具体的函数，函数模板的定义被编译 时不会产生任何可执行的代码。 联系： 针对不同类型的数据，但实现相同功能的函数重载可以通过函数模板来替代。</p><h4 id="34-怎样区别虚函数和纯虚函数？两者都有什么作用"><a href="#34-怎样区别虚函数和纯虚函数？两者都有什么作用" class="headerlink" title="34 怎样区别虚函数和纯虚函数？两者都有什么作用"></a>34 怎样区别虚函数和纯虚函数？两者都有什么作用</h4><p>纯虚函数是在基类中声明的虚函数，在基类中没有定义。在基类中实现纯虚函数的方法 是在函数原型后加“&#x3D;0。虚函数可以实现也可以不实现。<br>定义纯虚函数是为了实现一个接口，起到了一个规范的作用。规范继承这个类的程序员 必须实现这个接口。<br>声明了纯虚函数的类为抽象类，不能实例化对象。 定义虚函数是为了允许用基类的指针来调用子类的这个函数。<br>抽象类的作用：将有关的操作作为一个接口组织在一个继承层次结构中，由他来为派生 类提供一个公共的根。派生类将具体实现在其基类中作为接口的操作。</p><h4 id="35-面向对象程序“接口与实现方法分离”，有什么作用（好处）"><a href="#35-面向对象程序“接口与实现方法分离”，有什么作用（好处）" class="headerlink" title="35 面向对象程序“接口与实现方法分离”，有什么作用（好处）"></a>35 面向对象程序“接口与实现方法分离”，有什么作用（好处）</h4><p>接口与实现分离技术可以只把接口暴露给用户，具体的实现细节隐藏起来，当需要改动 代码时，只要在实现部分修改后编译，用户无需再编译自己的项目。</p><h4 id="36-列出所有与字符串处理有关的头文件"><a href="#36-列出所有与字符串处理有关的头文件" class="headerlink" title="36 列出所有与字符串处理有关的头文件"></a>36 列出所有与字符串处理有关的头文件</h4><p>string.h 是 C 语言中字符串操作函数的头文件<br>cstring 是 c++对 C 语言中的 strcpy 之类的函数申明，包含 cstring 之后，就可以在程序 中使用 C 语言风格的 strcpy 之类的函数。<br>string 是 c++语言中 string 类模板的申明<br>CString 是 MFC 中定义的字符串类，MFC 中很多类及函数都是以 CString 为参数的</p><h4 id="37-C-中显示类型转换"><a href="#37-C-中显示类型转换" class="headerlink" title="37 C++中显示类型转换"></a>37 C++中显示类型转换</h4><p>    static_cast：最常用的类型转换，提供基本数据类型之间的转换操作。<br>    const_cast：可以把 const 类型的指针转换为非 const 类型的指针。<br>    reinterpret_cast：解释的意思，主要用于不相关类型之间的转换。目标和原始值之 间至少有相同的位数，我们可以将转换之后的值再转换回去，而不像其它 3 种类型 可能会导致精度丢失<br>    dynamic_cast：运行时检查该转换是否类型安全，但只有在多态类型时合法，主要 用于类层次间的上行和下行转换，还可以用于类之间的交叉转换。在进行类层次间 的上行转换时和 static_cast 效果一样，进行下行转换时，具有类型检查的功能，比 static_cast 更安全。</p><p>38 delete 和 delete [] 的区别？<br>delete ptr 代表用来释放内存，且只用来释放 ptr 指向的内存。<br>delete[] rg 用来释放 rg 指向的内存！！还逐一调用数组中每个对象的析构函数 对于像 int&#x2F;char&#x2F;long&#x2F;int*&#x2F;struct 等等简单数据类型，由于对象没有 destructor，所以用 delete 和 delete [] 是一样的！但是如果是 C++对象数组就不同了！</p><h4 id="39-存储类别说明符可划分为两类。"><a href="#39-存储类别说明符可划分为两类。" class="headerlink" title="39 存储类别说明符可划分为两类。"></a>39 存储类别说明符可划分为两类。</h4><p>静态存储类别（static，extern）和自动存储类别（auto， register）。这样的变量在程序执行进入到定义它们的程序块时创建，在程序块激活时存在， 在程序块退出时销毁。</p><h4 id="40-什么是运算符重载，它如何增强-C-的扩展性？"><a href="#40-什么是运算符重载，它如何增强-C-的扩展性？" class="headerlink" title="40 什么是运算符重载，它如何增强 C++的扩展性？"></a>40 什么是运算符重载，它如何增强 C++的扩展性？</h4><p>运算符重载是对已有的运算符赋予多重含义，使得同一个运算符作用于不同类型的数据 时导致不同的行为。 运算符重载的本质是函数重载，可以改变现有运算符的操作方式，以适用于类类型，为 类的用户提供了一个直接的接口，使得用户程序所用的语言是面向问题的，而不是面向机器的，增强了 C++的扩展性。</p><h4 id="41-为什么说”继承是-C-面向对象的主要特征之一”-请简要说明-？"><a href="#41-为什么说”继承是-C-面向对象的主要特征之一”-请简要说明-？" class="headerlink" title="41 为什么说”继承是 C++面向对象的主要特征之一”?请简要说明.？"></a>41 为什么说”继承是 C++面向对象的主要特征之一”?请简要说明.？</h4><p>继承是一种联结类的层次模型，层次结构的上层是最具有通用性的，而下层的部分，即 后代具有特殊性。类可以从他的祖先那里继承方法和成员变量，也可以增加新的方法是适用 于特殊的需要。如果没有继承，类就缺失了一块层次结构，代码重用和数据共享就贯彻不到 底，有了继承，就会有抽象编程中的多态问题，只有从机制内部真正解决了多态表现问题， 对象的数据封装，信息隐藏，代码重用等招式才能淋漓尽致的发挥出来。才称得上真正的面 向对象编程。</p><h4 id="42-作用域辨析有哪些？"><a href="#42-作用域辨析有哪些？" class="headerlink" title="42 作用域辨析有哪些？"></a>42 作用域辨析有哪些？</h4><p>    类作用域： 在类的作用域内，类的成员可以被类的所有成员函数直接访问，在类的作用域之外， public 类成员通过对象的句柄之一而引用。句柄可以是对象名称，对象的引用，对象的指针。 对象，引用或指针指定了客户可访问的接口。<br>    全局名字空间作用域： 声明与任何函数或者类之外的标识符具有全局名字空间作用域，这种标识符对于从其声 明处开始直到文件结尾处为止出现的所有函数都是已知的，即可访问的。位于函数之外的全局变量。函数定义和函数原型都属于该作用域。<br>    函数作用域： 标签是唯一具有函数作用域的标识符，标签可以在函数中的任何地方使用，但是不能在 函数体外被引用。<br>    局部作用域： 在一个语句块中声明的作用域，开始于标识符的声明出，结束于标识符声明处所在语句 块的结束右花括号处。局部变量具有局部作用域，函数形参也是函数的局部作用域。当语句 块是嵌套的，并且外层语句块的一个标识符和内层语句块的一个标识符具有相同的名字时， 外层的标识符处于隐藏状态，直到内存的语句块执行结束为止。<br>    函数原型作用域： 函数原型形参列表中的标识符，在一个函数原型中，一个特定的标识符只能使用一次。</p><h4 id="43-STL-是什么？组成部分和区别。"><a href="#43-STL-是什么？组成部分和区别。" class="headerlink" title="43.STL 是什么？组成部分和区别。"></a>43.STL 是什么？组成部分和区别。</h4><p>STL 是 c++提供的标准模板库。<br>STL 的主要组成部分为：容器、迭代器、算法、函数对象和适配器。其中算法处于核心 地位，迭代器如同算法和容器之间的桥梁，算法通过迭代器从容器中获取元素，然后将获取 的元素传递给特定的函数对象的操作，最后将处理后的结果存储到容器中。</p><h4 id="44-如何声明和使用虚函数。说明它在多态性中的作用和意义。"><a href="#44-如何声明和使用虚函数。说明它在多态性中的作用和意义。" class="headerlink" title="44 如何声明和使用虚函数。说明它在多态性中的作用和意义。"></a>44 如何声明和使用虚函数。说明它在多态性中的作用和意义。</h4><p>声明：在基类中声明成员函数时在前面加上关键字 virtual 。<br>使用虚函数：在基类中将成员函数声明为虚函数，这样在派生类中重写该方法后，在使 用基类的指针或引用指向派生类对象时，就可以通过这个基类指针或引用访问到派生类的方法。</p><p>C++中的多态可分为四类：重载多态、强制多态、包含多态和参数多态，其中包含多态 是研究类族中定义于不同类中的同名函数的多态行为，主要通过虚函数来实现。多态使得接 口与实现得到分离，要利用统一接口实现运行时多态一般需要动态绑定，而虚函数是动态绑 定的基础，就使得虚函数在多态中很重要。</p><p>多态指同样的消息被不同类型的对象接收时导致不同的行为。 虚函数机理：当编译器看到 fn 的虚函数标志时，会记下，等遇到这个虚函数的调用时，将 该捆绑操作滞后到运行中，以实际的对象来捆绑其对应的成员函数操作，编译器在捆绑操作 b.fn()处避开函数调用，只作一个指向实际对象成员函数的间接访问，每个实际的对象都需 额外占有一个指针空间，以指向类中的虚函数表。</p><h4 id="44-什么是逻辑错误？什么是语法错误？请举例说明。"><a href="#44-什么是逻辑错误？什么是语法错误？请举例说明。" class="headerlink" title="44.什么是逻辑错误？什么是语法错误？请举例说明。"></a>44.什么是逻辑错误？什么是语法错误？请举例说明。</h4><p>逻辑错误：由于程序设计人员设计的算法有错或编写的程序有错，此时程序一般能够正 常运行，但是通知给系统的指令与解题的原意不相同，即出现了逻辑上的混乱。 例如：int a[5] &#x3D; { 1 , 2 , 3 , 4 , 5} ; for( int i &#x3D; 0 ; i &lt;&#x3D; 0 ; i ++ ) cout &lt;&lt; a[i] &lt;&lt; endl ; &#x2F;&#x2F;发生数组越界</p><p>语法错误：违背了 C++语言的规定，不能生成可执行文件，主要是语句的结构或拼写中 存在的错误。 例如：for( int i &#x3D; 0 , i &lt; 10 , i ++) { } &#x2F;&#x2F;应该用“;</p><h4 id="45-编写语句说明枚举类型是如何定义和使用的。"><a href="#45-编写语句说明枚举类型是如何定义和使用的。" class="headerlink" title="45 编写语句说明枚举类型是如何定义和使用的。"></a>45 编写语句说明枚举类型是如何定义和使用的。</h4><p>枚举类型的声明形式如下 enum 枚举类型名 { 变量值列表 } ;</p><p>例如： enum weekday{ sun , mon , tue , wed , thu , fri , sta } ; 变量定义：enum weekday a , b , c &#x3D; tue ; &#x2F;&#x2F;也可以省略 enum</p><p>    枚举元素具有默认值，他们依次是：0 , 1 , 2 , … , 例子中：sun 的值为 0 ， mon 的值 为 1，tue 的值为 2，… ,sta 的值为 6 。<br>    枚举元素按常量处理，不能进行赋值。<br>    整数值也不能赋给枚举变量，如确实需要可进行强制类型转换。<br>    枚举变量可以进行关系运算。</p><h4 id="46-ADT是什么？简述你对“数据抽象”和“信息隐藏”的认识。"><a href="#46-ADT是什么？简述你对“数据抽象”和“信息隐藏”的认识。" class="headerlink" title="46 ADT是什么？简述你对“数据抽象”和“信息隐藏”的认识。"></a>46 ADT是什么？简述你对“数据抽象”和“信息隐藏”的认识。</h4><p>C++内部的数据类型包括基本类型和复合类型（数组、字符串、指针和结构），有表示 范围，只是用可以接受的方式表示实际概念。确定了一个类型就确定了计算机存储给类型所 需要的容量，确定了其表示范围，也确定了对该类型可以进行的操作。</p><p>抽象数据类型（Abstract Data Type)，简称 ADT，是指一个数学模型以及定义在该模型 上的一组操作。 通常以以下格式定义： ADT 抽象数据类型名{ 数据对象：&lt;数据对象的定义&gt; 数据关系：&lt;数据关系的定义&gt; 基本操作：&lt;基本操作的定义&gt; }</p><p>数据抽象：对具体事物描述的一个概括。通过数据抽象可以将数据类型的定义和它的实 现分开，使得只研究和使用它的结构而不用考虑它的实现细节成为可能。C++中的类就是一 种数据抽象，类是具有相同属性和服务的一组对象的集合。</p><p>信息隐藏：C++中的封装就是信息隐藏的一种，即尽可能的隐藏对象的内部细节，对外 形成一个边界，只保留有限的对外接口使之与外部反生关系。</p><h4 id="47-简述你对“面向对象”和“面向过程”编程思想的理解和认识。"><a href="#47-简述你对“面向对象”和“面向过程”编程思想的理解和认识。" class="headerlink" title="47 简述你对“面向对象”和“面向过程”编程思想的理解和认识。"></a>47 简述你对“面向对象”和“面向过程”编程思想的理解和认识。</h4><p>“面向过程”是一种以事件为中心的编程思想，就是分析出解决问题所需要的步骤，然后 用函数把这些步骤一步一步实现，使用的时候一个一个依次调用就可以了。过程化编程强调 功能，以过程模块为中心，分层逐步展开设计。通常采用结构化程序设计，基本思路为：自 顶向下、逐步求精。</p><p>“面向对象”的编程思想就是把你需要解决的问题中的所有具体的东西，都看成一个个具 有属性和行为的对象，然后把所有具有相同性质的对象抽象成类，那些与问题无关的对象则 忽略。对象化编程强调分离抽象层次，以便让程序员分工，关心不同抽象层次中的细节，而 不用去关心不同抽象层次的联系，数据安全而隐蔽，不同抽象层次的职责分明。</p><h4 id="50-写出递归函数定义以及相应的优缺点"><a href="#50-写出递归函数定义以及相应的优缺点" class="headerlink" title="50 写出递归函数定义以及相应的优缺点"></a>50 写出递归函数定义以及相应的优缺点</h4><p>递归函数是直接或间接地（通过另一个函数）调用自己。</p><p>优点：<br>结构清晰，可读性强，使程序易于理解和调试。</p><p>缺点</p><p>    效率较低。递归是有时间和空间消耗的。另外，递归有可能很多计算都是重复的，从而给性能带来很大的负面影响。因为递归的本质是把一个问题分解成连个或者多个小问题。如果多个小问题存在相互重叠的部分，那么就存在重复的计算。</p><p>    可能导致调用栈溢出。每一次函数调用在内存栈中分配空间，而每个进程的栈的容量是有限的。当递归调用的层级太多时，就会超出栈的容量，从而导致栈溢出。</p><h4 id="51-写出包含输入输出的标准库"><a href="#51-写出包含输入输出的标准库" class="headerlink" title="51 写出包含输入输出的标准库"></a>51 写出包含输入输出的标准库</h4><figure class="highlight apache"><table><tr><td class="code"><pre><span class="line">    <span class="section">&lt;fstream&gt;</span></span><br><span class="line">    <span class="section">&lt;iomanip&gt;</span></span><br><span class="line">    <span class="section">&lt;ios&gt;</span></span><br><span class="line">    <span class="section">&lt;iosfwd&gt;</span></span><br><span class="line">    <span class="section">&lt;iostream&gt;</span></span><br><span class="line">    <span class="section">&lt;ostream&gt;</span></span><br><span class="line">    <span class="section">&lt;istream&gt;</span></span><br><span class="line">    <span class="section">&lt;sstream&gt;</span></span><br><span class="line">    <span class="section">&lt;streambuf&gt;</span></span><br></pre></td></tr></table></figure><h4 id="52-怎样区别虚函数和纯虚函数？两者都有什么作用"><a href="#52-怎样区别虚函数和纯虚函数？两者都有什么作用" class="headerlink" title="52 怎样区别虚函数和纯虚函数？两者都有什么作用"></a>52 怎样区别虚函数和纯虚函数？两者都有什么作用</h4><p>虛函數介紹</p><p>    虚函数，在类成员方法的声明（不是定义）语句前加“virtual”, 如 virtual void func()<br>    纯虚函数，在虚函数后加“&#x3D;0”，如 virtual void func()&#x3D;0<br>    对于虚函数，子类可以（也可以不）重新定义基类的虚函数，该行为称之为复写Override。<br>    对于纯虚函数，子类必须提供纯虚函数的个性化实现。</p><p>在派生子类中对虚函数和纯虚函数的个性化实现，都体现了“多态”特性。但区别是：</p><p>    子类如果不提供虚函数的实现，将会自动调用基类的缺省虚函数实现，作为备选方案；<br>    子类如果不提供纯虚函数的实现，编译将会失败。尽管在基类中可以给出纯虚函数的实现，但无法通过指向子类对象的基类类型指针来调用该纯虚函数，也即不能作为子类相应纯虚函数的备选方案。（纯虚函数在基类中的实现跟多态性无关，它只是提供了一种语法上的便利，在变化多端的应用场景中留有后路。）</p><p>虚函数：当使用类的指针调用成员函数时，普通函数由指针类型决定，而虚函数由指针指向的实际类型决定。所以虚函数的调用时由指针所指向内存块的具体类型决定的。</p><p>纯虚函数：纯虚函数是在基类中声明的虚函数，它要求任何派生类都要定义自己的实现方法，以实现多态性。实现了纯虚函数的子类，该纯虚函数在子类中就变成了虚函数。</p><p>定义纯虚函数是为了实现一个接口，用来规范派生类的行为，也即规范继承这个类的程序员必须实现这个函数。派生类仅仅只是继承函数的接口。纯虚函数的意义在于，让所有的类对象（主要是派生类对象）都可以执行纯虚函数的动作，但基类无法为纯虚函数提供一个合理的缺省实现。所以类纯虚函数的声明就是在告诉子类的设计者，“你必须提供一个纯虚函数的实现，但我不知道你会怎样实现它”。</p><p>含有纯虚函数的类称之为抽象类，它不能生成对象（创建实例），只能创建它的派生类的实例。抽象类是一种特殊的类，它是为了抽象和设计的目的为建立的，它处于继承层次结构的较上层。抽象类的主要作用是将有关的操作作为结果接口组织在一个继承层次结构中，由它来为派生类提供一个公共的根，派生类将具体实现在其基类中作为接口的操作。</p><p>抽象类只能作为基类来使用，其纯虚函数的实现由派生类给出。如果派生类中没有重新定义纯虚函数，而只是继承基类的纯虚函数，则这个派生类仍然还是一个抽象类。如果派生类中给出了基类纯虚函数的实现，则该派生类就不再是抽象类了，它是一个可以建立对象的具体的类。 </p>]]></content>
    
    
    <summary type="html">C++既可以进行C语言的过程化程序设计，又可以进行以抽象数据类型为特点的基于对象的程序设计，还可以进行以继承和多态为特点的面向对象的程序设计。</summary>
    
    
    
    <category term="C++" scheme="https://weijiajin.com/blog/categories/C/"/>
    
    
    <category term="C++" scheme="https://weijiajin.com/blog/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++程序设计简答题（一）</title>
    <link href="https://weijiajin.com/30ab32a49b91/"/>
    <id>https://weijiajin.com/30ab32a49b91/</id>
    <published>2022-03-06T13:01:25.000Z</published>
    <updated>2022-08-12T10:06:50.949Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="/images/文章图片/程序设计简答题/logo.png"/></div></div><h4 id="1、简述你对C-中的数据类型和抽象数据类型（ADTs）的理解"><a href="#1、简述你对C-中的数据类型和抽象数据类型（ADTs）的理解" class="headerlink" title="1、简述你对C++中的数据类型和抽象数据类型（ADTs）的理解"></a>1、简述你对C++中的数据类型和抽象数据类型（ADTs）的理解</h4><blockquote><p>数据类型是⼀组性质相同的具有⼀定范围的值集以及定义于这个值集上的⼀组操作。数据类型既有内部数据类型，如int，char，float，bool等，⼜有⾃定义外部数据类型，如枚举类型，结构类型，联合类型，数组类型、类类型。ADT即抽象数据类型，是基于已有类型⽽组合⽣成的复合数据类型，类正是抽象数据类型的描述形式</p></blockquote><h4 id="2、阐述C-在什么情况下必须进⾏运算符重载"><a href="#2、阐述C-在什么情况下必须进⾏运算符重载" class="headerlink" title="2、阐述C++在什么情况下必须进⾏运算符重载"></a>2、阐述C++在什么情况下必须进⾏运算符重载</h4><blockquote><p>只有当⼆元运算符最左边的操作数是该类的⼀个对象，或者当⼀元运算符的操作数是该类的⼀个对象时，才有必要进⾏运算符重载</p></blockquote><h4 id="3、为什么说继承是C-⾯向对象的⼀个主要特征之⼀"><a href="#3、为什么说继承是C-⾯向对象的⼀个主要特征之⼀" class="headerlink" title="3、为什么说继承是C++⾯向对象的⼀个主要特征之⼀"></a>3、为什么说继承是C++⾯向对象的⼀个主要特征之⼀</h4><blockquote><p>继承是一种联结类的层次模型，层次结构的上层是最具有通用性的，而下层的部分，即后代具有特殊性。类可以从他的祖先那里继承方法和成员变量，也可以增加新的方法是适用于特殊的需要。如果没有继承，类就缺失了一块层次结构，代码重用和数据共享就贯彻不到<br>底，有了继承，就会有抽象编程中的多态问题，只有从机制内部真正解决了多态表现问题，对象的数据封装，信息隐藏，代码重用等招式才能淋漓尽致的发挥出来。才称得上真正的面向对象编程。</p></blockquote><h4 id="4、如何声明和使⽤虚函数，说明它在多态性中的作⽤和意义"><a href="#4、如何声明和使⽤虚函数，说明它在多态性中的作⽤和意义" class="headerlink" title="4、如何声明和使⽤虚函数，说明它在多态性中的作⽤和意义"></a>4、如何声明和使⽤虚函数，说明它在多态性中的作⽤和意义</h4><blockquote><p>声明虚函数时，在基类的函数原型前加关键字virtual，在派⽣类中重写函数；⽤名称和圆点成员选择运算符引⽤⼀个特定的对象以调⽤虚函数，被调⽤的虚函数是在编译时确定的；也可以通过基类指针调⽤函数，让程序在任何给定的时刻基于基类指针所指对象的对象类型，动态确定执⾏相应的派⽣类的函数。虚函数是多态性的主要实现⽅式，利⽤虚拟函数和多态性，程序员可以处理普遍性⽽让执⾏环境处理特殊性，即使在不知道⼀些对象的类型的情况下（只要这些对象属于同⼀继承层次并且通过⼀个共同的基类指针访问），程序员也可以命令各种对象表现出适合这些对象的⾏为</p></blockquote><h4 id="5、请说明函数模板和模板函数的区别与联系"><a href="#5、请说明函数模板和模板函数的区别与联系" class="headerlink" title="5、请说明函数模板和模板函数的区别与联系"></a>5、请说明函数模板和模板函数的区别与联系</h4><blockquote><p>函数模板：以具体的类型为实参来⽣成函数体的模板；模板函数：函数模板实例化的结果，由函数模板将涉及的数据类型为参数来⽣成的模板化函数函数模版就是数据类型参数化的函数定义，是⼀个函数族，代表的是⼀类函数。 当编译系统发现⽤指定数据类型调⽤函数模版时，就创建了⼀个模版函数，模版函数是⼀个实例化的具体函数</p></blockquote><h4 id="6、编写语句说明枚举类型是如何定义和使⽤的"><a href="#6、编写语句说明枚举类型是如何定义和使⽤的" class="headerlink" title="6、编写语句说明枚举类型是如何定义和使⽤的"></a>6、编写语句说明枚举类型是如何定义和使⽤的</h4><blockquote><p>Enum Week{Mon，Tue，Wed，Thu，Fri，Sat，Sun}；枚举类是对整数区间的⾃定义类型，⼀旦定义则不能改变，常常代替整数常量使⽤，可以使程序更清晰、更持久。在进⼊函数调⽤或其他模块时，常量需要初始化，⽽枚举类型是⼀种类型，⽆须定义实体，便可直接使⽤枚举符。默认对应着整数0,1,2…当然也可以Enum Week{Mon&#x3D;1，Tue，Wed，Thu，Fri，Sat，Sun}；这样定义，对应的整数就变成1,2,3…</p></blockquote><h4 id="7、什么是逻辑错误-什么是语法错误-请举例说明"><a href="#7、什么是逻辑错误-什么是语法错误-请举例说明" class="headerlink" title="7、什么是逻辑错误?什么是语法错误?请举例说明"></a>7、什么是逻辑错误?什么是语法错误?请举例说明</h4><blockquote><p>语法错误是对语⾔规则的违背，当编译器不能正确识别语句时，便会导致语法错误，它们都是在编译阶段出现的，所以也叫编译错误，编译不能通过，⽐如语句末尾缺少分号等。逻辑错误是指算法上的错误，编译能通过，程序可以完成运⾏，但往往产⽣不正确的结果，⽐如循环语句结束条件没写，造成死循环</p></blockquote><h4 id="8、控制语句有哪⼏种-请画出它的流程图或UML图"><a href="#8、控制语句有哪⼏种-请画出它的流程图或UML图" class="headerlink" title="8、控制语句有哪⼏种?请画出它的流程图或UML图"></a>8、控制语句有哪⼏种?请画出它的流程图或UML图</h4><div class="tag-plugin image"><div class="image-bg"><img src="/images/文章图片/程序设计简答题/c08.png"/></div></div><blockquote><p>顺序，选择，循环。UML就是统⼀建模语⾔，是⽤的最⼴泛的图形化表示⽅案</p></blockquote><h4 id="9、什么是运算符重载-它如何增强了-C-的扩展性"><a href="#9、什么是运算符重载-它如何增强了-C-的扩展性" class="headerlink" title="9、什么是运算符重载?它如何增强了 C++的扩展性?"></a>9、什么是运算符重载?它如何增强了 C++的扩展性?</h4><blockquote><p>运算符重载是对已有的运算符赋予多重含义，使得同一个运算符作用于不同类型的数据时导致不同的行为。运算符重载的本质是函数重载，可以改变现有运算符的操作方式，以适用于类类型，为类的用户提供了一个直接的接口，使得用户程序所用的语言是面向问题的，而不是面向机器的，增强了 C++的扩展性。</p></blockquote><h4 id="10、请详细说明C-作⽤域"><a href="#10、请详细说明C-作⽤域" class="headerlink" title="10、请详细说明C++作⽤域"></a>10、请详细说明C++作⽤域</h4><blockquote><ul><li>类作用域：<br>在类的作用域内，类的成员可以被类的所有成员函数直接访问，在类的作用域之外，public 类成员通过对象的句柄之一而引用。句柄可以是对象名称，对象的引用，对象的指针。对象，引用或指针指定了客户可访问的接口。</li><li>全局名字空间作用域：<br>声明与任何函数或者类之外的标识符具有全局名字空间作用域，这种标识符对于从其声明处开始直到文件结尾处为止出现的所有函数都是已知的，即可访问的。位于函数之外的全局变量。函数定义和函数原型都属于该作用域。</li><li>函数作用域：<br>标签是唯一具有函数作用域的标识符，标签可以在函数中的任何地方使用，但是不能在函数体外被引用。</li><li>局部作用域：<br>在一个语句块中声明的作用域，开始于标识符的声明出，结束于标识符声明处所在语句块的结束右花括号处。局部变量具有局部作用域，函数形参也是函数的局部作用域。当语句块是嵌套的，并且外层语句块的一个标识符和内层语句块的一个标识符具有相同的名字时，外层的标识符处于隐藏状态，直到内存的语句块执行结束为止。</li><li>函数原型作用域：<br>函数原型形参列表中的标识符，在一个函数原型中，一个特定的标识符只能使用一次。</li></ul></blockquote><h4 id="11、部分填空题"><a href="#11、部分填空题" class="headerlink" title="11、部分填空题"></a>11、部分填空题</h4><blockquote><p>(1).程序从哪⾥开始运⾏ <u>main()函数</u><br>(2).三种控制结构 <u>顺序</u> 、 <u>选择</u> 、 <u>循环</u><br>(3).可以初始化指针的值 <u>nullptr</u> 、 <u>0</u> 、 <u>具体的地址</u><br>注：nullptr是C++11新引⼊的，写NULL也⾏<br>(4).对象之间看不到其他对象的具体操作的属性是 <u>信息隐藏</u><br>注：信息隐藏包括但不限于private、protected及接⼝类这些⼿段。注意区分封装和信息隐藏之间的区别。<br>(5).⽤户⾃定义类型的⼀个实例叫什么 <u>对象</u><br>注：类是抽象数据类型(ADTs)的描述形式<br>(6).如果每次运⾏环境只能执⾏⼀条语句,但是有许多语句需要执⾏,那么 ⽤ <u>花括号</u> {} <u>括起来</u> , 构成 <u>语句块</u><br>(7).标识符的作⽤域: <u>语句块作⽤域</u> 、 <u>函数原型作⽤域</u> 、 <u>函数作⽤域</u> 、<u>类作⽤域</u> 、<u>命名空间及全局命名空间作⽤域</u><br>(8). 哪⼏个运算符必须重载为成员函数 </u> () </u> 、 <u>[]</u> 、<u>-&gt;</u> 、<u>&#x3D;</u><br>(9). 哪些运算符不能重载: <u>.</u>  <u>.*</u>(成员指针运算符)  <u>::</u>  <u>?:</u>  <u>sizeof 运算符</u><br>(10).哪些操作符必须重载为成员函数 <u> &#x3D; -&gt; () [] new delete </u></p></blockquote><h4 id="12、说明std-cin-std-cout-std-cerr的含义"><a href="#12、说明std-cin-std-cout-std-cerr的含义" class="headerlink" title="12、说明std::cin,std::cout,std::cerr的含义"></a>12、说明std::cin,std::cout,std::cerr的含义</h4><blockquote><p>都是标准流对象</p><ul><li>cin：istream实例，连接到标准输⼊设备</li><li>cout：ostream实例，连接到标准输出设备</li><li>cerr：ostream实例，连接到标准错误设备，输出是⽆缓冲的</li><li>补充⼀个 clog：ostream实例，连接到标准错误设备，输出是有缓冲的</li></ul></blockquote><h4 id="13、存储类说明符有哪些？作⽤分别是？"><a href="#13、存储类说明符有哪些？作⽤分别是？" class="headerlink" title="13、存储类说明符有哪些？作⽤分别是？"></a>13、存储类说明符有哪些？作⽤分别是？</h4><blockquote><p>auto、static、extern、register</p><ul><li>auto 标明⼀个变量具有⾃动存储时期，该说明符只能⽤在具有代码块作⽤域的变量声明中。⽐如⼀般的局部变量或是在函数原型中的参数。</li><li>register 只能⽤在具有代码块作⽤域的变量。请求⼀个变量存储在寄存器中快速使⽤，但是不能获得改变量的地址。register常常是不必要的。</li><li>static 使⽤static声明的局部变量仅被其声明所在的函数所知，static局部变量在函数返回到它的调⽤者后仍保留着变量的值。</li><li>extern 表明在声明⼀个在其他地⽅定义了的变量(该关键字⽤于全局变量)。<table><thead><tr><th>类型</th><th>特性</th></tr></thead><tbody><tr><td>auto</td><td>具有代码块作⽤域，⾃动存储期，外部或者内部链接属性</td></tr><tr><td>register</td><td>具有代码块作⽤域，⾃动存储期，外部或者内部链接属性</td></tr><tr><td>static</td><td>具有代码块或者⽂件作⽤域、静态存储期、内部链接</td></tr><tr><td>extern</td><td>具有⽂件作⽤域、静态存储期、外部链接</td></tr></tbody></table></li></ul></blockquote><h4 id="14、-运算符有哪些含义"><a href="#14、-运算符有哪些含义" class="headerlink" title="14、 * 运算符有哪些含义"></a>14、 * 运算符有哪些含义</h4><blockquote><p>答：乘法、指针的间接运算符</p></blockquote><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">int *ptr; <span class="regexp">//</span>声明⼀个指针</span><br><span class="line">*ptr = <span class="number">10</span>; <span class="regexp">//</span>表示指针操作数所指向的对象(内存块)</span><br></pre></td></tr></table></figure><h4 id="15、多态性如何实现"><a href="#15、多态性如何实现" class="headerlink" title="15、多态性如何实现"></a>15、多态性如何实现</h4><blockquote><p>多态是指同样的消息被不同类型的对象接收时导致完全不同的⾏为，是对类的特定成员函数的再抽象。C++⽀持的多态有多种类型，重载（包括函数重载和运算符重载）和虚函数是其主要的⽅式</p></blockquote><h4 id="16、什么是“else摇摆问题”，举例说明"><a href="#16、什么是“else摇摆问题”，举例说明" class="headerlink" title="16、什么是“else摇摆问题”，举例说明"></a>16、什么是“else摇摆问题”，举例说明</h4><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">if</span></span> (<span class="variable">a</span>&gt;<span class="number">0</span>)</span><br><span class="line"><span class="function"><span class="title">if</span>(<span class="variable">b</span>&gt;<span class="number">0</span>)</span></span><br><span class="line">...</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><blockquote><p>这⾥的else应该与第⼆个if匹配⽽⾮第⼀个</p></blockquote><h4 id="17、函数模板和函数重载的区别与联系"><a href="#17、函数模板和函数重载的区别与联系" class="headerlink" title="17、函数模板和函数重载的区别与联系"></a>17、函数模板和函数重载的区别与联系</h4><blockquote><ul><li>若⼀个函数的功能是对任意类型的数据作同样的处理，则将所处理的数据类型说明为参数，就可以把这个程序改写为函数模版。函数模版就是数据类型参数化的函数定义，代表的是⼀类函数。其参数都是抽象的。</li><li>⽤同⼀函数名定义多个函数，这些函数的参数个数、参数类型或参数顺序不同，这就是函数重载。每个重载函数的参数是具体的。但参数完全相同⽽返回值不同的函数不构成重载。</li><li>有⼀种特殊情况：重载模版函数。当编译器在处理重载模版函数的问题时，遵循的原则是：⾸选函数名、参数类型都匹配的具体函数，再找模版。</li></ul></blockquote><h4 id="18、怎样区别虚函数和纯虚函数？两者都有什么作⽤"><a href="#18、怎样区别虚函数和纯虚函数？两者都有什么作⽤" class="headerlink" title="18、怎样区别虚函数和纯虚函数？两者都有什么作⽤"></a>18、怎样区别虚函数和纯虚函数？两者都有什么作⽤</h4><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">virtual void <span class="function"><span class="title">fun</span><span class="params">()</span></span>; <span class="comment">//虚函数</span></span><br><span class="line">virtual void <span class="function"><span class="title">fun</span><span class="params">()</span></span> = <span class="number">0</span>; <span class="comment">//纯虚函数</span></span><br></pre></td></tr></table></figure><blockquote><p>虚函数⽤于基类与派⽣类的同名操作使其具有多态性，纯虚函数是⽤来定义抽象类的。</p></blockquote><h4 id="19、⾯向对象程序“接⼝与实现⽅法分离”，有什么优点"><a href="#19、⾯向对象程序“接⼝与实现⽅法分离”，有什么优点" class="headerlink" title="19、⾯向对象程序“接⼝与实现⽅法分离”，有什么优点"></a>19、⾯向对象程序“接⼝与实现⽅法分离”，有什么优点</h4><blockquote><ul><li>接⼝定义并标准化了⼈和系统等诸如此类事物彼此交互的⽅式</li><li>成员函数的实现细节对客户代码是隐藏的(即信息隐藏)，使得程序员不会写出依赖类的实现细节的客户代码</li><li>程序更容易修改，只要类的接⼝保持不变，类的实现的改变不会影响客户</li><li>加快编译速度，提⾼了维护性，使得代码变得清晰</li></ul></blockquote><h4 id="20、列出所有与字符串处理有关的头⽂件"><a href="#20、列出所有与字符串处理有关的头⽂件" class="headerlink" title="20、列出所有与字符串处理有关的头⽂件"></a>20、列出所有与字符串处理有关的头⽂件</h4><blockquote><ul><li>string.h是C语⾔中字符串操作函数的头⽂件</li><li>cstring是C++对C语⾔中的strcpy之类的函数申明，包含cstring之后，就可以在程序中使⽤C语⾔⻛格的strcpy之类的函数。<br>string是C++中string类模板的声明</li><li>CString是MFC中定义的字符串类，MFC中很多类及函数都是以CString为参数的</li></ul></blockquote><h4 id="21、浅拷贝和深拷贝的区别？"><a href="#21、浅拷贝和深拷贝的区别？" class="headerlink" title="21、浅拷贝和深拷贝的区别？"></a>21、浅拷贝和深拷贝的区别？</h4><blockquote><p>在某些情况下，类内的成员变量需要动态开辟堆内存，如果实行按位拷贝，就可能会出现两个对象里面的成员变量指针指向同一块内存区域。当回收其中一个对象时，该对象成员变量所指向的内存区域也将回收，会导致另一个对象存在野指针的情况。非常危险。深拷贝和浅拷贝可以简单理解为：如果一个类拥有资源，当这个类的对象发生复制过程的时候，资源重新分配，这个过程就是深拷贝，反之，没有重新分配资源，就是浅拷贝。</p></blockquote><h4 id="22、比较值传递和引用传递的相同点与不同点。"><a href="#22、比较值传递和引用传递的相同点与不同点。" class="headerlink" title="22、比较值传递和引用传递的相同点与不同点。"></a>22、比较值传递和引用传递的相同点与不同点。</h4><blockquote><ul><li>值传递是指当发生函数调用时，给形参分配内存空间，并用实参来初始化形参（直接将实参的值传递给形参）。这一过程是参数值的单向传递过程，一旦形参获得了值便与实参脱离关系，此后无论形参发生了怎样的改变，都不会影响到实参。</li><li>引用传递将引用作为形参，在执行主调函数中的调用语句时，系统自动用实参来初始化形参。这样形参就成为实参的一个别名，对形参的任何操作也就直接作用于实参。</li></ul></blockquote><h4 id="23、什么叫内联函数-它有哪些特点？"><a href="#23、什么叫内联函数-它有哪些特点？" class="headerlink" title="23、什么叫内联函数?它有哪些特点？"></a>23、什么叫内联函数?它有哪些特点？</h4><blockquote><p>定义时使用关键字 inline 的函数叫做内联函数；编译器在编译时在调用处用函数体进行替换,节省了参数传递、控制转移等开销；内联函数体内不能有循环语句和 switch 语句；内联函数的定义必须出现在内联函数第一次被调用之前；对内联函数不能进行异常接口声明</p></blockquote><h4 id="24、什么叫复制构造函数？复制构造函数何时被调用？"><a href="#24、什么叫复制构造函数？复制构造函数何时被调用？" class="headerlink" title="24、什么叫复制构造函数？复制构造函数何时被调用？"></a>24、什么叫复制构造函数？复制构造函数何时被调用？</h4><blockquote><p>复制构造函数是一种特殊的构造函数，具有一般构造函数的所有特性，其形参是本类的对象的引用。其作用是使用一个已经存在的对象（由复制构造函数的参数指定），去初始化同类的一个新对象。<br>    （1） 当用类的一个对象去初始化该类的另一个对象时；<br>    （2） 如果函数的形参是类的对象，调用函数时进行形参和实参结合时；<br>    （3） 如果函数的返回值是类的对象，函数执行完成返回调用者时。</p></blockquote><h4 id="25、复制构造函数与赋值运算符（-x3D-）有何不同？"><a href="#25、复制构造函数与赋值运算符（-x3D-）有何不同？" class="headerlink" title="25、复制构造函数与赋值运算符（&#x3D;）有何不同？"></a>25、复制构造函数与赋值运算符（&#x3D;）有何不同？</h4><blockquote><ul><li>从概念上区分：复制构造函数是构造函数，而赋值操作符属于操作符重载范畴，它通常是类的成员函数</li><li>从原型上来区分：复制构造函数原型 ClassType(const ClassType &amp;);无返回值；赋值操作符原型 ClassType&amp; operator&#x3D;(const ClassType &amp;);返回值为 ClassType 的引用，便于连续赋值操作</li><li>从使用的场合来区分：复制构造函数用于产生对象，它用于以下几个地方：函数参数为类的值类型时、函数返回值为类类型时以及初始化语句</li></ul></blockquote><h4 id="26、什么叫做可见性？可见性的一般规则是什么？"><a href="#26、什么叫做可见性？可见性的一般规则是什么？" class="headerlink" title="26、什么叫做可见性？可见性的一般规则是什么？"></a>26、什么叫做可见性？可见性的一般规则是什么？</h4><blockquote><p>可见性是标识符是否可以引用的问题；可见性的一般规则是：标识符要声明在前，引用在后，在同一作用域中，不能声明同名<br>的标识符。对于在不同的作用域声明的标识符，遵循的原则是：若有两个或多个具有包含关系的作用域，外层声明的标识符如果在内层没有声明同名标识符时仍可见，如果内层声明了同名标识符则外层标识符不可见。</p></blockquote><h4 id="27、什么叫静态数据成员？他有何特点？"><a href="#27、什么叫静态数据成员？他有何特点？" class="headerlink" title="27、什么叫静态数据成员？他有何特点？"></a>27、什么叫静态数据成员？他有何特点？</h4><blockquote><p>类的静态数据成员是类的数据成员的一种特例，采用 static 关键字来声明。对于类的普通数据成员，每一个类的对象都拥有一个拷贝，就是说每一个对象的同名数据成员可以分别存储不同的值，这也是保证对象拥有区别于其他对象的特征的需要，但是静态数据成员，每个类只要一个拷贝，由所有该类的对象共同维护和使用，这个共同维护，使用也就实现了同一类的不同对象之间的数据共享。</p></blockquote><h4 id="28、什么叫静态函数成员？他有何特点？"><a href="#28、什么叫静态函数成员？他有何特点？" class="headerlink" title="28、什么叫静态函数成员？他有何特点？"></a>28、什么叫静态函数成员？他有何特点？</h4><blockquote><p>使用 static 关键字声明的函数成员是静态的，静态函数成员属于整个类，被同一个类的所有对象共同维护，为这些所有对象共享。静态成员函数具有以下两个方面的好处，一是由于静态成员函数只能直接访问同一个类的静态数据成员，可以保证不会对该类的其余数据成员造成负面影响；二是同一个类只维护一个静态函数成员的拷贝，节约了系统的开销，提高程序的运行效率。</p></blockquote><h4 id="29、什么叫友元函数？什么叫友元类？"><a href="#29、什么叫友元函数？什么叫友元类？" class="headerlink" title="29、什么叫友元函数？什么叫友元类？"></a>29、什么叫友元函数？什么叫友元类？</h4><blockquote><p>友元函数是使用关键字 friend 关键字声明的函数，它可以访问相应类的保护成员和私有成员。友元类是使用 friend 关键字声明的类，它的所有成员函数都是相应类的友元函数。友元不可继承，没有传递性。</p></blockquote><h4 id="30、在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两"><a href="#30、在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两" class="headerlink" title="30、在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两"></a>30、在函数内部定义的普通局部变量和静态局部变量在功能上有何不同？计算机底层对这两</h4><p>类变量做了怎样的不同处理导致了这种差异？</p><blockquote><p>局部作用域中静态变量的特点是：它并不会随着每次函数调用而产生一个副本，也不会随着函数的返回而失效，定义时未指定初值的基本类型静态变量，会被以 0 值初始化；局部作用域的全部变量诞生于声明点，结束于声明所在的块执行完毕之时，并且不指定初值，意味初值不确定。普通局部变量存放于栈区，超出作用域后，变量被撤销，其所占的内存也被回收；静态局部变量存放于静态数据存储区，全局可见，但是作用域是局部作用域，超出作用域后变量仍然存在。</p></blockquote><h4 id="31、引用和指针有何区别？何时只能使用指针而不能使用引用？"><a href="#31、引用和指针有何区别？何时只能使用指针而不能使用引用？" class="headerlink" title="31、引用和指针有何区别？何时只能使用指针而不能使用引用？"></a>31、引用和指针有何区别？何时只能使用指针而不能使用引用？</h4><blockquote><ul><li>引用是一个别名，不能为 NULL 值，不能被重新分配;</li><li>指针是一个存放地址的变量;</li><li>当需要对变量重新赋以另外的地址或赋值为 NULL 时只能使用指针。引用是一个变量的别名，本身不单独分配自己的内存空间，而指针有自己的内存空间。</li></ul></blockquote><h4 id="32、比较类的-3-种继承方式之间的差别？"><a href="#32、比较类的-3-种继承方式之间的差别？" class="headerlink" title="32、比较类的 3 种继承方式之间的差别？"></a>32、比较类的 3 种继承方式之间的差别？</h4><blockquote><ul><li>公有继承，使得基类 public(公有)和 protected(保护)成员的访问属性在派生类中不变，而基类 private(私有)成员不可访问。</li><li>私有继承，使得基类 public(公有)和 protected(保护)成员都以 private(私有)成员身份出现在派生类中，而基类 private(私有)成员不可访问。</li><li>保护继承中，基类 public(公有)和 protected(保护)成员都以 protected(保护)成员身份出现在派生类中，而基类 private(私有)成员不可访问。</li></ul></blockquote><h4 id="33、什么叫虚基类？有何作用？"><a href="#33、什么叫虚基类？有何作用？" class="headerlink" title="33、什么叫虚基类？有何作用？"></a>33、什么叫虚基类？有何作用？</h4><blockquote><ul><li>当某类的部分或全部直接基类是从另一个基类派生而来，这些直接基类中，从上一级基类继承来的成员就拥有相同的名称，派生类的对象的这些同名成员在内存中同时拥有多个拷贝，我们可以使用作用域分辨符来唯一标识并分别访问它们。我们也可以将直接基类<br>的共同基类设置为虚基类，这时从不同的路径继承过来的该类成员在内存中只拥有一个拷贝，这样就解决了同名成员的唯一标识问题。</li><li>虚基类的声明是在派生类的定义过程，其语法格式为：</li><li>class 派生类名：virtual 继承方式 基类名</li><li>上述语句声明基类为派生类的虚基类，在多继承情况下，虚基类关键字的作用范围和继承方式关键字相同，只对紧跟其后的基类起作用。声明了虚基类之后，虚基类的成员在进一步派生过程中，和派生类一起维护一个内存数据拷贝。</li><li>虚基类就是为了解决多继承产生的二义性问题</li></ul></blockquote><h4 id="34、组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什"><a href="#34、组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什" class="headerlink" title="34、组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什"></a>34、组合与继承有什么共同点和差异？通过组合生成的类与被组合的类之间的逻辑关系是什</h4><p>么？继承呢？</p><blockquote><ul><li>组合和继承它们都使得已有对象成为新对象的一部分，从而达到代码复用的目的。组合和继承其实反映了两种不同的对象关系。</li><li>组合反映的是“有一个”（has-s）的关系，如果类 B 中存在一个类 A 的内嵌对象，表示的是每一个 B 类型的对象都“有一个”A 类型的对象，A 类型的对象与 B 类型的对象是部分整体的关系。</li><li>继承反映的是“是一个”（is-a）的关系，在“是一个”关系中，如果类 A 是类 B 的公有基类，那么这表示每一个 B 类型的对象都“是一个”A 类型的对象，B 类型的对象与 A 类型的对象是特殊与一般的关系。</li></ul></blockquote><h4 id="35、基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？"><a href="#35、基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？" class="headerlink" title="35、基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？"></a>35、基类与派生类的对象，指针或引用之间，哪些情况下可以隐含转换，哪些情况下可以显示转换？在涉及多重继承或虚继承的情况下，在转换时会面临哪些新问题？</h4><blockquote><p>派生类指针可以隐含转换为基类指针，而基类指针要想转换为派生类指针，则转换一定要显示地进行。因为从特殊的指针转换到一般的指针时安全的，因此允许隐含转换；从一般的指针转换到特殊的指针是不安全的，因此只能显示地转换。基类对象一般无法被显式转换<br>为派生类对象。在多重继承情况下，执行基类指针到派生类指针的显式转换时，有时需要将指针所存储的地址值进行调整后才能得到新指针的值。但是，如果 A 类型是 B 类型的虚拟基类，虽然 B 类型的指针可以隐含转换为 A 类型，但是 A 类型指针却无法通过 static_case隐含转换为 B 类型的指针。</p></blockquote><h4 id="36、什么叫做多态性？在-C-种是如何实现多态的？"><a href="#36、什么叫做多态性？在-C-种是如何实现多态的？" class="headerlink" title="36、什么叫做多态性？在 C++种是如何实现多态的？"></a>36、什么叫做多态性？在 C++种是如何实现多态的？</h4><blockquote><ul><li>多态是指同样的消息被不同类型的对象接收时导致完全不同的行为，是对类的特定成员函数的再抽象。C++支持重载多态，强制多态，包含多态和参数多态。</li><li>在基类中声明相应的函数为 virtual 型，然后在派生类中实现该函数，这样就可以通过基类指针调用派生类对象的函数，实现了运行时动态绑定，即多态的功能。</li></ul></blockquote><h4 id="37、什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？"><a href="#37、什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？" class="headerlink" title="37、什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？"></a>37、什么叫抽象类？抽象类有何作用？抽象类的派生类是否一定要给出纯虚函数的实现？</h4><blockquote><p>带有纯虚函数的类是抽象类。其主要作用是通过它为一个类族建立一个公共的接口，使他们能够更有效地发挥多态特性。抽象类声明了一个类族派生类的共同接口，而接口的完整实现，即纯虚函数的函数体，要由派生类自己定义。抽象类派生出新的类之后，如果派生类给出所有纯虚函数的函数实现，这个派生类就可以定义自己的对象，因而不再是抽象类；反之，如果派生类没有给出全部纯虚函数的实现，此时的派生类仍然是一个抽象类。</p></blockquote><h4 id="38、在-C-中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？"><a href="#38、在-C-中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？" class="headerlink" title="38、在 C++中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？"></a>38、在 C++中，能否声明虚构造函数？为什么？能否声明虚析构函数？有何用途？</h4><blockquote><p>在 C++中，不能声明虚构造函数，多态是不同的对象对同一消息有不同的行为特性，虚函数作为运行过程中多态的基础，主要是针对对象的，而构造函数是在对象产生之前运行的，因此虚构造函数是没有意义的；可以声明虚析构函数，析构函数的功能是在该类对象消亡之前进行一些必要的清理工作，如果一个类的析构函数是虚函数，那么，由它派生而来的所有子类的析构函数也是虚函数。析构函数设置为虚函数之后，在使用指针引用时可以动态联编，实现运行时的多态，保证使用基类的指针就能够调用适当的析构函数针对不同的对象进行清理工作。</p></blockquote><h4 id="39、什么叫做流？流的提取和插入是指什么？I-x2F-O-流在-C-中起着怎样的作用？"><a href="#39、什么叫做流？流的提取和插入是指什么？I-x2F-O-流在-C-中起着怎样的作用？" class="headerlink" title="39、什么叫做流？流的提取和插入是指什么？I&#x2F;O 流在 C++中起着怎样的作用？"></a>39、什么叫做流？流的提取和插入是指什么？I&#x2F;O 流在 C++中起着怎样的作用？</h4><blockquote><p>流是一种抽象，它负责在数据的生产者和数据的消费者之间建立联系，并管理数据的流动，一般意义下的读操作在流数据抽象中被称为（从流中）提取，写操作被称为（向流中）插入。操作系统是将键盘、屏幕、打印机和通信端口作为扩充文件来处理的，I&#x2F;O 流类就是用来与这些扩充文件进行交互，实现数据的输入与输出。</p></blockquote><h4 id="40、什么叫做异常？什么叫做异常处理？"><a href="#40、什么叫做异常？什么叫做异常处理？" class="headerlink" title="40、什么叫做异常？什么叫做异常处理？"></a>40、什么叫做异常？什么叫做异常处理？</h4><blockquote><p>当一个函数在执行的过程中出现了一些不平常的情况，或运行结果无法定义的情况，使得操作不得不被中断时，我们说出现了异常。异常通常是用 throw 关键字产生的一个对象，用来表明出现了一些意外的情况。我们在设计程序时，就要充分考虑到各种意外情况，并给与恰当的处理。这就是我们所说的异常处理。</p></blockquote><h4 id="41、比较函数重载和虚函数在概念和使用方式方面有什么区别？"><a href="#41、比较函数重载和虚函数在概念和使用方式方面有什么区别？" class="headerlink" title="41、比较函数重载和虚函数在概念和使用方式方面有什么区别？"></a>41、比较函数重载和虚函数在概念和使用方式方面有什么区别？</h4><blockquote><ul><li>函数重载可以用于普通函数（非成员的函数）和类的成员函数，而虚函数只能用于类的成员函数。</li><li>函数重载可以用于构造函数，而虚函数不能用于构造函数。</li><li>如果对成员函数进行重载，则重载的函数与被重载的函数应当都是同一类中的成员函数，不能分属于两个不同继承层次的类。函数重载是横向的重载。虚函数是对同一类族中的基类和派生类的同名函数的处理，即允许在派生类中对基类的成员函数重新定义。虚函数的作用是处理纵向的同名函数。</li><li>重载的函数必须具有相同的函数名，但函数的参数个数和参数类型二者中至少有一样不同，否则在编译时无法区分它们。而虚函数则要求再同一类族中的所有虚函数不仅函数名相同，而且要求函数类型、函数的参数个数和参数类型都全部相同，否则就不是重定义了。也就不是虚函数了。</li><li>函数重载是在程序编译阶段确定操作的对象的，属静态关联。虚函数是在程序运行阶段确定操作的对象的，属动态关联。</li></ul></blockquote><h4 id="42、比较-class-和-struct-结构体的异同"><a href="#42、比较-class-和-struct-结构体的异同" class="headerlink" title="42、比较 class 和 struct 结构体的异同"></a>42、比较 class 和 struct 结构体的异同</h4><blockquote><p> 不同之处：</p><ul><li>默认成员访问权限不同，struct 默认是 public，而 class 默认是 private。</li><li>默认继承方式不同，struct 默认是 public，而 class 默认是 private。</li><li>在定义模板参数时可以用 class 但不能用 struct。<br> 相同之处在于：都可以包含成员函数，都可以实现继承，都可以实现多态。</li></ul></blockquote><h4 id="43、const-和-static-作用"><a href="#43、const-和-static-作用" class="headerlink" title="43、const 和 static 作用"></a>43、const 和 static 作用</h4><p>const：</p><blockquote><ul><li>定义 const 常量，具有不可变性，保护被修饰的东西。防止意外修改，增强程序的健壮性。</li><li>便于类型检查，使编译器对处理内容有更多的了解。</li><li>可以避免意义模糊的数字出现，也便于进行参数的修改。同宏定义一样，可以做到不变则以，一变都变。</li><li>const 定义的常量在程序运行过程中只有一份拷贝，而宏定义却又若干份拷贝。</li></ul></blockquote><p>static:</p><blockquote><ul><li>作为类的静态数据成员：被类的所有对象共同拥有，在内存中只有一份拷贝。在类内声明，在类外初始化。</li><li>在全局变量前加上 static 关键字，该变量被定义为一个全局变量，特点：<br>  a) 变量在全局数据区分配内存<br>  b) 如果不显示初始化，则隐式的初始化为 0<br>  c) 作用域仅限于本文件内</li><li>在局部变量前加 static 关键字，该变量被定义为静态局部变量，特点：<br>  a) 在全局数据区分配内存<br>  b) 如果不显示初始化，则隐式的初始化为 0<br>  c) 始终驻留在全局数据区，直到程序结束。作用域仅限于函数体内，当函数执行完后作用域随之消失。</li><li>静态函数，特点：<br>  a) 静态函数只能在本源文件中使用<br>  b) 在文件作用域下声明的 inline 函数默认是 static 的</li></ul></blockquote><h4 id="44、析构函数带-virtual-和-不带-virtual-的区别"><a href="#44、析构函数带-virtual-和-不带-virtual-的区别" class="headerlink" title="44、析构函数带 virtual 和 不带 virtual 的区别"></a>44、析构函数带 virtual 和 不带 virtual 的区别</h4><blockquote><p>如果基类要被派生，则析构函数一定要带 virtual。否则，通过基类指针指向派生类对象后，删除该指针时并不会释放派生类对象的空间。也即，不会调用派生类的析构函数。不带 virtual 的几种情况：<br>    1) 作为非公有基类<br>    2) 不作为接口使用的基类<br>    3) 可以保证这个类不被 public 继承<br>    4) 如果他的所有派生类的 virtual 函数都是什么都不做<br>    5) 如果不需要基类指针指向派生类对象</p></blockquote><h4 id="45、重写，重载和隐藏的区别？"><a href="#45、重写，重载和隐藏的区别？" class="headerlink" title="45、重写，重载和隐藏的区别？"></a>45、重写，重载和隐藏的区别？</h4><blockquote><ul><li>重载：在一个类中的同名函数，但参数列表不同，函数的返回值相同。</li><li>隐藏：派生类的函数屏蔽了与其同名的父类函数</li><li>重写（覆盖）：父类和子类存在相同的函数，包括返回值，参数列表均相同，父类的该函数必须含有 virtual 关键字。</li></ul></blockquote><h4 id="46、C-中的四个默认的函数"><a href="#46、C-中的四个默认的函数" class="headerlink" title="46、C++中的四个默认的函数"></a>46、C++中的四个默认的函数</h4><blockquote><ul><li>构造函数：先基类后派生类</li><li>拷贝函数：对象被创建时调用</li><li>调用拷贝构造函数的情况：<br>  a) 一个对象以值传递的方式传入函数体<br>  b) 一个对象以值传递的方式从函数返回<br>  c) 一个对象需要通过另外一个对象初始化</li><li>析构函数：每个类只有一个析构函数，</li><li>赋值函数：</li></ul></blockquote><h4 id="47、函数模板和函数重载的区别与联系区别："><a href="#47、函数模板和函数重载的区别与联系区别：" class="headerlink" title="47、函数模板和函数重载的区别与联系区别："></a>47、函数模板和函数重载的区别与联系区别：</h4><p>区别：</p><blockquote><ul><li>函数重载：C++允许使用同一个函数名，不同的参数个数和参数类型来定义多个函数。重载函数的参数个数，类型，顺序至少有一个不同。返回值可以相同，也可以不同。</li><li>函数模板：是对一类同构函数的抽象定义，并不是具体的函数，函数模板的定义被编译时不会产生任何可执行的代码。</li></ul></blockquote><p>联系：</p><blockquote><p>针对不同类型的数据，但实现相同功能的函数重载可以通过函数模板来替代。</p></blockquote><h4 id="48、怎样区别虚函数和纯虚函数？两者都有什么作用"><a href="#48、怎样区别虚函数和纯虚函数？两者都有什么作用" class="headerlink" title="48、怎样区别虚函数和纯虚函数？两者都有什么作用"></a>48、怎样区别虚函数和纯虚函数？两者都有什么作用</h4><blockquote><ul><li>纯虚函数是在基类中声明的虚函数，在基类中没有定义。在基类中实现纯虚函数的方法是在函数原型后加“&#x3D;0。虚函数可以实现也可以不实现。</li><li>定义纯虚函数是为了实现一个接口，起到了一个规范的作用。规范继承这个类的程序员必须实现这个接口。声明了纯虚函数的类为抽象类，不能实例化对象。</li><li>定义虚函数是为了允许用基类的指针来调用子类的这个函数。</li><li>抽象类的作用：将有关的操作作为一个接口组织在一个继承层次结构中，由他来为派生类提供一个公共的根。派生类将具体实现在其基类中作为接口的操作。</li></ul></blockquote><h4 id="49、面向对象程序“接口与实现方法分离”，有什么好处"><a href="#49、面向对象程序“接口与实现方法分离”，有什么好处" class="headerlink" title="49、面向对象程序“接口与实现方法分离”，有什么好处"></a>49、面向对象程序“接口与实现方法分离”，有什么好处</h4><blockquote><p>接口与实现分离技术可以只把接口暴露给用户，具体的实现细节隐藏起来，当需要改动代码时，只要在实现部分修改后编译，用户无需再编译自己的项目。</p></blockquote><h4 id="50、C-中显示类型转换"><a href="#50、C-中显示类型转换" class="headerlink" title="50、C++中显示类型转换"></a>50、C++中显示类型转换</h4><blockquote><ul><li>static_cast：最常用的类型转换，提供基本数据类型之间的转换操作。</li><li>const_cast：可以把 const 类型的指针转换为非 const 类型的指针。</li><li>reinterpret_cast：解释的意思，主要用于不相关类型之间的转换。目标和原始值之间至少有相同的位数，我们可以将转换之后的值再转换回去，而不像其它 3 种类型可能会导致精度丢失</li><li>dynamic_cast：运行时检查该转换是否类型安全，但只有在多态类型时合法，主要用于类层次间的上行和下行转换，还可以用于类之间的交叉转换。在进行类层次间的上行转换时和 static_cast 效果一样，进行下行转换时，具有类型检查的功能，比static_cast 更安全。</li></ul></blockquote><h4 id="51、-delete-和-delete-的区别？"><a href="#51、-delete-和-delete-的区别？" class="headerlink" title="51、 delete 和 delete [] 的区别？"></a>51、 delete 和 delete [] 的区别？</h4><blockquote><ul><li>delete ptr 代表用来释放内存，且只用来释放 ptr 指向的内存。</li><li>delete[] rg 用来释放 rg 指向的内存！！还逐一调用数组中每个对象的析构函数</li><li>对于像 int&#x2F;char&#x2F;long&#x2F;int*&#x2F;struct 等等简单数据类型，由于对象没有 destructor，所以用 delete 和 delete [] 是一样的！但是如果是 C++对象数组就不同了！</li></ul></blockquote><h4 id="52、存储类别说明符可划分为哪两类。"><a href="#52、存储类别说明符可划分为哪两类。" class="headerlink" title="52、存储类别说明符可划分为哪两类。"></a>52、存储类别说明符可划分为哪两类。</h4><blockquote><p>静态存储类别（static，extern）和自动存储类别（auto，register）。这样的变量在程序执行进入到定义它们的程序块时创建，在程序块激活时存在，在程序块退出时销毁。</p></blockquote>]]></content>
    
    
    <summary type="html">C++既可以进行C语言的过程化程序设计，又可以进行以抽象数据类型为特点的基于对象的程序设计，还可以进行以继承和多态为特点的面向对象的程序设计。</summary>
    
    
    
    <category term="C++" scheme="https://weijiajin.com/blog/categories/C/"/>
    
    
    <category term="C++" scheme="https://weijiajin.com/blog/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>油桃豆江</title>
    <link href="https://weijiajin.com/3603fcb54fb1/"/>
    <id>https://weijiajin.com/3603fcb54fb1/</id>
    <published>2021-10-24T16:10:07.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>每天给你一句晚安<br>直至相逢<br>那时亲口说予你听</p><p>说来缘分<br>脸红心跳<br>你是我心中的星星与灯塔</p><p>你喜欢画画<br>我喜欢你画的画<br>一幅二次元的画</p><p>每次晚安<br>我幸福的入睡<br>生活好像并没有那么无趣</p><p>天气突然转凉了<br>有小雨，觉不怎么冷<br>缘有喜欢的人了</p><p>我以为我已经被世界遗忘<br>可你还记得我的存在<br>你留心于我，我倾心于你</p><p>清晨远方的你和我一样睡眼朦胧<br>倘若昨夜是一场梦<br>我不想这时醒来</p><p>我清清楚楚知晓世界的美好<br>没人分享是我悲伤的缘由<br>我喜欢的歌单满是伤感的歌</p><p>我脸红地对着屏幕说晚安<br>带着欢喜与喜欢<br>我想，你也是</p><p>小时候我想要星河与浪漫<br>现在我已经长大了<br>我想要油桃与豆江</p><p>看见一个女孩头上一朵朴素的花<br>想起回忆里那个朴素的女孩<br>只有我自己知道自己往往偏心于朴素</p><p>十月桂花伴着寒风<br>清晨或晚上<br>每每路过一阵飘香</p><p>我还未主动寻她<br>她的花香<br>已飘进我的脑海里</p><p>以后定要停下来轻轻寻她<br>告诉她我多么喜欢她的花香<br>就如要去奔赴你一般欢喜</p><p>总是后悔当初没有勇敢一点<br>如果有一天我们兜兜转转再一次相遇<br>我一定会不顾一切紧紧抱着你</p><p>怀着对世界上一切美好事物的感激，我就此落笔。那么，就到此为止吧。</p><p>魏家劲<br>2021年10月24日</p>]]></content>
    
    
    <summary type="html">怀着对世界上一切美好事物的感激，我就此落笔。那么，就到此为止吧。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 磁盘扩容</title>
    <link href="https://weijiajin.com/1c4121dcf8eb/"/>
    <id>https://weijiajin.com/1c4121dcf8eb/</id>
    <published>2021-05-10T00:00:00.000Z</published>
    <updated>2022-08-12T10:06:50.953Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Azure-Linux-磁盘扩容"><a href="#Azure-Linux-磁盘扩容" class="headerlink" title="Azure Linux 磁盘扩容"></a>Azure Linux 磁盘扩容</h2><p>进入 azure 改磁盘大小,重启后进入系统会发现磁盘大小没变，因为没扩容。</p><p>本系统为centos7</p><h4 id="安装-growpart"><a href="#安装-growpart" class="headerlink" title="安装 growpart"></a>安装 growpart</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure><h4 id="安装-growpart-1"><a href="#安装-growpart-1" class="headerlink" title="安装 growpart"></a>安装 growpart</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y cloud-utils</span><br></pre></td></tr></table></figure><h4 id="修改系统语言为为英文语言与编码"><a href="#修改系统语言为为英文语言与编码" class="headerlink" title="修改系统语言为为英文语言与编码"></a>修改系统语言为为英文语言与编码</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">LANG=en_US.UTF-8</span><br></pre></td></tr></table></figure><h4 id="扩-容块设备并重启"><a href="#扩-容块设备并重启" class="headerlink" title="扩-容块设备并重启"></a>扩-容块设备并重启</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">growpart /dev/sda 2</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="重启后执行"><a href="#重启后执行" class="headerlink" title="重启后执行"></a>重启后执行</h4><h5 id="xfs-文件系统-azure"><a href="#xfs-文件系统-azure" class="headerlink" title="xfs 文件系统 (azure)"></a>xfs 文件系统 (azure)</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">xfs_growfs /dev/sda2</span><br></pre></td></tr></table></figure><h5 id="ext4-文件系统"><a href="#ext4-文件系统" class="headerlink" title="ext4 文件系统"></a>ext4 文件系统</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">resize2fs /dev/sda2 </span><br></pre></td></tr></table></figure><h4 id="查看是否-ok"><a href="#查看是否-ok" class="headerlink" title="查看是否 ok"></a>查看是否 ok</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">df</span> -TH</span><br></pre></td></tr></table></figure><h2 id="阿里云-重装系统与磁盘扩容"><a href="#阿里云-重装系统与磁盘扩容" class="headerlink" title="阿里云 重装系统与磁盘扩容"></a>阿里云 重装系统与磁盘扩容</h2><h4 id="重装系统一键脚本"><a href="#重装系统一键脚本" class="headerlink" title="重装系统一键脚本"></a>重装系统一键脚本</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">LANG=en_US<span class="selector-class">.UTF-8</span></span><br><span class="line">wget <span class="attr">--no-check-certificate</span> -O AutoReinstall<span class="selector-class">.sh</span> https:<span class="comment">//git.io/AutoReinstall.sh &amp;&amp; bash AutoReinstall.sh</span></span><br></pre></td></tr></table></figure><h4 id="设置系统语言"><a href="#设置系统语言" class="headerlink" title="设置系统语言"></a>设置系统语言</h4><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">LANG</span><span class="operator">=</span>en_US.UTF-<span class="number">8</span></span><br></pre></td></tr></table></figure><h4 id="设置1"><a href="#设置1" class="headerlink" title="设置1"></a>设置1</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">growpart <span class="regexp">/dev/</span>vda <span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="设置2"><a href="#设置2" class="headerlink" title="设置2"></a>设置2</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">resize2fs <span class="regexp">/dev/</span>vda1</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Linux 磁盘扩容</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="Azure" scheme="https://weijiajin.com/blog/tags/Azure/"/>
    
    <category term="Microsoft" scheme="https://weijiajin.com/blog/tags/Microsoft/"/>
    
  </entry>
  
  <entry>
    <title>Microsoft 365 E5 开发者</title>
    <link href="https://weijiajin.com/c185ab0f381d/"/>
    <id>https://weijiajin.com/c185ab0f381d/</id>
    <published>2021-04-26T14:12:39.000Z</published>
    <updated>2022-08-12T10:06:50.953Z</updated>
    
    <content type="html"><![CDATA[<h3 id="立即加入-Microsoft-365-开发人员计划"><a href="#立即加入-Microsoft-365-开发人员计划" class="headerlink" title="立即加入 Microsoft 365 开发人员计划"></a>立即加入 Microsoft 365 开发人员计划</h3><ul><li>获取免费、可续订的 90 天 Microsoft 365 E5 开发人员订阅;</li><li>包括SharePoint、OneDrive、Outlook、Exchange、Teams、Planner、Word、Excel、PowerPoint；</li><li>订阅包含 25 个用于所有 Microsoft 365 应用的许可证</li><li>OneDrive每个用户的网盘容量上限为 5TB；</li></ul><p>申请链接：<a href="https://developer.microsoft.com/zh-cn/office/dev-program">https://developer.microsoft.com/zh-cn/office/dev-program</a><br>Microsoft 365 E5 开发者管理页： <a href="https://admin.microsoft.com/">https://admin.microsoft.com/</a></p><h3 id="网盘扩容"><a href="#网盘扩容" class="headerlink" title="网盘扩容"></a>网盘扩容</h3><p>打开 <a href="https://admin.onedrive.com/">https://admin.onedrive.com</a> 登录之后在左方菜单中选择「存储」该项，将默认存储改为 5120，即 5TB。<br>但是管理员账号的容量此刻依旧为1TB，接下来更改管理员容量。</p><h3 id="修改全局管理员自身的5T容量"><a href="#修改全局管理员自身的5T容量" class="headerlink" title="修改全局管理员自身的5T容量"></a>修改全局管理员自身的5T容量</h3><ul><li>我们先安装最新的 SharePoint Online Management Shell → <a href="https://www.microsoft.com/zh-cn/download/details.aspx?id=35588">下载地址</a>；</li><li>点击电脑左下角开始按钮，搜索PowerShell，然后单击Windows PowerShell，此时会弹出一个命令框。<br>依次输入命令：</li></ul><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#adminUPN为管理员邮箱，orgName为你设置的组织名</span></span><br><span class="line"><span class="variable">$adminUPN</span>=<span class="string">&quot;admin@weijiajin.onmicrosoft.com&quot;</span></span><br><span class="line"><span class="variable">$orgName</span>=<span class="string">&quot;weijiajin&quot;</span></span><br><span class="line"><span class="comment">#该步会弹出一个窗口，会要求你输入邮箱密码</span></span><br><span class="line"><span class="variable">$userCredential</span> = Get-Credential -UserName <span class="variable">$adminUPN</span> -Message <span class="string">&quot;Type the password.&quot;</span></span><br><span class="line">Connect-SPOService -Url https:<span class="regexp">//</span><span class="variable">$orgName</span>-admin.sharepoint.com -Credential <span class="variable">$userCredential</span></span><br><span class="line"><span class="comment">#这里默认修改为5T，如果你要修改为其它的可自行修改，单位为M，最大可修改为5T</span></span><br><span class="line">Set-SPOTenant -OneDriveStorageQuota <span class="number">5242880</span></span><br><span class="line"><span class="comment">#将后面的地址修改成你的OneDrive网盘地址，地址仿照下面的即可</span></span><br><span class="line">Set-SPOSite -Identity https:<span class="regexp">//</span>weijiajin-my.sharepoint.com<span class="regexp">/personal/</span>admin_weijiajin_onmicrosoft_com -StorageQuota <span class="number">5242880</span></span><br></pre></td></tr></table></figure><p><strong>如果你要修改现有用户的容量的话，将最后一步的OneDrive网盘地址替换成你想修改的用户地址即可。</strong></p><h3 id="微软OneDrive网盘免费升级到25T容量教程"><a href="#微软OneDrive网盘免费升级到25T容量教程" class="headerlink" title="微软OneDrive网盘免费升级到25T容量教程"></a>微软OneDrive网盘免费升级到25T容量教程</h3><p>如果OneDrive 5T不够用，这里分享个免费升级25T的方法，也是微软很早就出的一个政策，部分订阅的OneDrive网盘使用量超过90%的可免费申请提高容量到25T，有需求的可以升级下。</p><h3 id="申请方法（未试）"><a href="#申请方法（未试）" class="headerlink" title="申请方法（未试）"></a>申请方法（未试）</h3><p>提示：以下申请操作都需要全局管理员操作，如果需求大，也可以给自己其它的账号也升级到25T。</p><ul><li><p>管理员登录后台→<a href="https://admin.microsoft.com/Adminportal/Home">传送门</a>，点击左侧支持-新建服务请求；</p></li><li><p>然后在帮助框写下： 请帮助我吧 <a href="mailto:&#x61;&#100;&#109;&#105;&#110;&#64;&#119;&#x65;&#x69;&#106;&#105;&#x61;&#106;&#x69;&#110;&#46;&#111;&#x6e;&#109;&#105;&#99;&#x72;&#x6f;&#x73;&#x6f;&#102;&#116;&#x2e;&#99;&#111;&#109;">&#x61;&#100;&#109;&#105;&#110;&#64;&#119;&#x65;&#x69;&#106;&#105;&#x61;&#106;&#x69;&#110;&#46;&#111;&#x6e;&#109;&#105;&#99;&#x72;&#x6f;&#x73;&#x6f;&#102;&#116;&#x2e;&#99;&#111;&#109;</a> 账户的 onedrive 容量升级至25T；</p></li><li><p>然后填上管理员邮箱，附件上传几张该账号容量超过90%的截图，包括账户信息；</p></li><li><p>最后发送即可，截图不规范的，中途可能会有工作人员打电话要你重新发图片给他；</p></li><li><p>最后等一天，成功的邮件就会发给你，然后这时候你就照着邮件给的方法自行升级到25T。</p></li></ul><h3 id="Microsoft-365-E5-开发者-开源自动订阅程序"><a href="#Microsoft-365-E5-开发者-开源自动订阅程序" class="headerlink" title="Microsoft 365 E5 开发者 开源自动订阅程序"></a>Microsoft 365 E5 开发者 开源自动订阅程序</h3><p>教程地址：<a href="https://qyi.io/archives/687.html">https://qyi.io/archives/687.html</a><br>项目地址：<a href="https://github.com/luoye663/e5">https://github.com/luoye663/e5</a><br>自动订阅程序： <a href="https://e5.qyi.io/">https://e5.qyi.io/</a></p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>Microsoft 365 E5 开发者 主要可以白嫖Office与onedrive 5T大容量还可以存储一些大文件，下载也很方便，如果可以一直自动续费那是相当不错的，值得推荐使用。比国内的网盘好太多，速度也很不错！office也没有广告，一些想用正版Office也很推荐。</p><h3 id="后续补充"><a href="#后续补充" class="headerlink" title="后续补充"></a>后续补充</h3><div class="tag-plugin timeline"><div class="timenode" item="1"><div class="header"><p>2021 年 6 月 16 日</p></div><div class="body fs14"><p>续订成功</p><div class="tag-plugin image"><div class="image-bg"><img src="/images/文章图片/365/365renew.png" style="width:500px;"/></div></div></div></div></div>]]></content>
    
    
    <summary type="html">立即加入 Microsoft 365 开发人员计划，获取免费、可续订的 90 天 Microsoft 365 E5 开发人员订阅。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="onedrive" scheme="https://weijiajin.com/blog/tags/onedrive/"/>
    
    <category term="microsoft" scheme="https://weijiajin.com/blog/tags/microsoft/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Actions 实现 Hexo 自动部署</title>
    <link href="https://weijiajin.com/8bea8845151c/"/>
    <id>https://weijiajin.com/8bea8845151c/</id>
    <published>2021-04-21T00:00:00.000Z</published>
    <updated>2022-08-12T10:06:50.953Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><p>首先我们先要在本地确保 Hexo 是可以正确运行的，比如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>确认 _config.yml 文件中有类似如下的 GitHub Pages 配置：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">https://github.com/wejudging/wejudging.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：请将 repository 修改为你自己的仓库地址。</p></blockquote><h3 id="生成秘钥"><a href="#生成秘钥" class="headerlink" title="生成秘钥"></a>生成秘钥</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;Hexo Deploy Key&quot;</span> -f github-deploy-key -N <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>当前目录生成两个文件：</p><ul><li>github-deploy-key —— 私钥</li><li>github-deploy-key.pub —— 公钥</li></ul><h3 id="GitHub配置秘钥"><a href="#GitHub配置秘钥" class="headerlink" title="GitHub配置秘钥"></a>GitHub配置秘钥</h3><p><strong>把私钥放到我们存放 Hexo 原始文件的代码仓库里面，用于触发 Actions 时使用;</strong><br><strong>把公钥放到 GitHub Pages 对应的代码仓库里面，用于 Hexo 部署时的写入工作</strong></p><h4 id="配置私钥"><a href="#配置私钥" class="headerlink" title="配置私钥"></a>配置私钥</h4><ul><li>首先在 GitHub 上打开保存 Hexo 的仓库，访问 Settings -&gt; Secrets，然后选择 New secret;</li><li>名字部分填写：HEXO_DEPLOY_KEY，注意大小写，这个后面的 GitHub Actions Workflow 要用到;</li><li>在 Value 的部分填入 github-deploy-key 中的内容。</li></ul><h4 id="添加公钥"><a href="#添加公钥" class="headerlink" title="添加公钥"></a>添加公钥</h4><ul><li>接下来我们需要访问存放网页的仓库，也就是 Hexo 部署以后的仓库，访问 Settings -&gt; Deploy keys;</li><li>按 Add deploy key 来添加一个新的公钥；</li><li>在 Title中输入：HEXO_DEPLOY_PUB 字样，当然也可以填写其它自定义的名字;</li><li>在 Key 中粘贴 github-deploy-key.pub文件的内容。</li></ul><blockquote><p>注意：一定要勾选 Allow write access 来打开写权限，否则无法写入会导致部署失败。</p></blockquote><h3 id="创建-Workflow"><a href="#创建-Workflow" class="headerlink" title="创建 Workflow"></a>创建 Workflow</h3><p><strong>在 Hexo 的仓库中创建一个新文件：.github&#x2F;workflows&#x2F;auto_deploy.yml，文件的内容如下:</strong></p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span> <span class="comment"># workflow name</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  [<span class="string">push</span>] <span class="comment"># 触发事件</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">build:</span> <span class="comment"># job1 id</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span> <span class="comment"># 运行环境为最新版 Ubuntu</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">auto</span> <span class="string">deploy</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="comment"># step1 获取源码</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span> <span class="comment"># 使用 actions/checkout@v1</span></span><br><span class="line">      <span class="attr">with:</span> <span class="comment"># 条件</span></span><br><span class="line">        <span class="attr">submodules:</span> <span class="literal">true</span> <span class="comment"># Checkout private submodules(themes or something else). 当有子模块时切换分支？</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Setup</span> <span class="string">Node.js</span> <span class="number">10.</span><span class="string">x</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@master</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;10.x&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">Public</span> <span class="string">Files</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm i</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string">        hexo clean &amp;&amp; hexo generate</span></span><br><span class="line"><span class="string"></span>    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">deploy_key:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.HEXO_DEPLOY_KEY</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">external_repository:</span> <span class="string">wejudging/wejudging.github.io</span></span><br><span class="line">        <span class="attr">publish_branch:</span> <span class="string">public</span></span><br><span class="line">        <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">        <span class="attr">commit_message:</span> <span class="string">$&#123;&#123;</span> <span class="string">github.event.head_commit.message</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="attr">user_name:</span> <span class="string">&#x27;github-actions[bot]&#x27;</span></span><br><span class="line">        <span class="attr">user_email:</span> <span class="string">&#x27;github-actions[bot]@users.noreply.github.com&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>以上就是 GitHub Actions 自动部署 Hexo 到 GitHub Pages 的方法。</strong></p>]]></content>
    
    
    <summary type="html">GitHub Actions 自动部署 Hexo 到 GitHub Pages 的方法</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="Hexo" scheme="https://weijiajin.com/blog/tags/Hexo/"/>
    
    <category term="GitHub" scheme="https://weijiajin.com/blog/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>近日随笔</title>
    <link href="https://weijiajin.com/43e2c80e2fdb/"/>
    <id>https://weijiajin.com/43e2c80e2fdb/</id>
    <published>2021-04-20T22:12:39.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<div class="tag-plugin image"><div class="image-bg"><img src="/images/文章图片/zuowang001.JPG" alt="朋友圈拍摄"/><a class="image-download blur" style="opacity:0" href="/images/文章图片/zuowang001.JPG"><svg class="icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3734"><path d="M561.00682908 685.55838913a111.03077546 111.03077546 0 0 1-106.8895062 0L256.23182837 487.72885783a55.96309219 55.96309219 0 0 1 79.13181253-79.18777574L450.70357448 523.88101491V181.55477937a55.96309219 55.96309219 0 0 1 111.92618438 0v344.06109173l117.07478902-117.07478901a55.96309219 55.96309219 0 0 1 79.13181252 79.18777574zM282.81429711 797.1487951h447.70473912a55.96309219 55.96309219 0 0 1 0 111.92618438H282.81429711a55.96309219 55.96309219 0 0 1 0-111.92618438z" p-id="3735"></path></svg></a></div><div class="image-meta"><span class="image-caption center">朋友圈拍摄</span></div></div><p>我这稍晚的青春<br>今天是朦胧的太阳<br>人也是朦胧的<br>看见一个女孩头上一朵朴素的花</p><p>太阳纯粹<br>喜欢的女孩也纯粹</p><p>我没有青春，或者说还未有过青春。我想用稍晚的青春和清澈的心情，写一封言语由衷的信给我心爱姑娘。我们五指张开，十指相扣，自然，牢固，温暖，感动。</p><p>怎会坚持去爱你，真的爱一个人，是自然而然，细水长流，是想一直爱你。宛若两份孤独相逢，历久弥新，细水长流。</p><p>因为遇到了温柔可爱的人，所以觉得世界可爱温柔。</p><p>遇见你之后的时光，每一天，都很美好。</p><p>昨晚欣喜了一晚上，真的如诗一般，我想你，你便来了。</p><p>被喜欢的人也许不知道，一句晚安便是他听过最好的情话。</p><p>王小波说“生为冰山，，就该淡淡地爱海流、爱风，并且在偶然接触时，全心全意地爱另一块冰山。”我想我遇见了自己的另一块冰山，她带来欢笑，我有幸得到。我悄悄的写下所有情话，想读给未来的你来听，那是我细腻想你的心思。</p>]]></content>
    
    
    <summary type="html">生为冰山，，就该淡淡地爱海流、爱风，并且在偶然接触时，全心全意地爱另一块冰山。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="zuowang" scheme="https://weijiajin.com/blog/tags/zuowang/"/>
    
  </entry>
  
  <entry>
    <title>CRC码计算及校验原理的最通俗诠释</title>
    <link href="https://weijiajin.com/cfea251a3f8f/"/>
    <id>https://weijiajin.com/cfea251a3f8f/</id>
    <published>2021-04-09T21:18:30.000Z</published>
    <updated>2022-08-12T10:06:50.953Z</updated>
    
    <content type="html"><![CDATA[<p><strong>CRC校验原理</strong><br>CRC校验原理看起来比较复杂，好难懂，因为大多数书上基本上是以二进制的多项式形式来说明的。其实很简单的问题，其根本思想就是先在要发送的帧后面附加一个数（这个就是用来校验的校验码，但要注意，这里的数也是二进制序列的，下同），生成一个新帧发送给接收端。当然，这个附加的数不是随意的，它要使所生成的新帧能与发送端和接收端共同选定的某个特定数整除（注意，这里不是直接采用二进制除法，而是采用一种称之为“模2除法”）。到达接收端后，再把接收到的新帧除以（同样采用“模2除法”）这个选定的除数。因为在发送端发送数据帧之前就已通过附加一个数，做了“去余”处理（也就已经能整除了），所以结果应该是没有余数。如果有余数，则表明该帧在传输过程中出现了差错。</p><p>【说明】“模2除法”与“算术除法”类似，但它既不向上位借位，也不比较除数和被除数的相同位数值的大小，只要以相同位数进行相除即可。模2加法运算为：1+1&#x3D;0，0+1&#x3D;1，0+0&#x3D;0，无进位，也无借位；模2减法运算为：1-1&#x3D;0，0-1&#x3D;1，1-0&#x3D;1，0-0&#x3D;0，也无进位，无借位。相当于二进制中的逻辑异或运算。也就是比较后，两者对应位相同则结果为“0”，不同则结果为“1”。如100101除以1110，结果得到商为11，余数为1，如图所示。如11×11&#x3D;101，如图所示。</p><p><img src="https://pic4.zhimg.com/80/v2-5b45e4b97f0eff80ff0d0c0a58385d97_1440w.jpg" alt="img"></p><p>具体来说，CRC校验原理就是以下几个步骤：</p><p>（1）先选择（可以随机选择，也可按标准选择，具体在后面介绍）一个用于在接收端进行校验时，对接收的帧进行除法运算的除数（是二进制比较特串，通常是以多项方式表示，所以CRC又称多项式编码方法，这个多项式也称之为“生成多项式”）。</p><p>（2）看所选定的除数二进制位数（假设为k位），然后在要发送的数据帧（假设为m位）后面加上k-1位“0”，然后以这个加了k-1个“0“的新帧（一共是m+k-1位）以“模2除法”方式除以上面这个除数，所得到的余数（也是二进制的比特串）就是该帧的CRC校验码，也称之为FCS（帧校验序列）。但要注意的是，余数的位数一定要是比除数位数只能少一位，哪怕前面位是0，甚至是全为0（附带好整除时）也都不能省略。</p><p>（3）再把这个校验码附加在原数据帧（就是m位的帧，注意不是在后面形成的m+k-1位的帧）后面，构建一个新帧发送到接收端，最后在接收端再把这个新帧以“模2除法”方式除以前面选择的除数，如果没有余数，则表明该帧在传输过程中没出错，否则出现了差错。<br>通过以上介绍，大家一定可以理解CRC校验的原理，并且不再认为很复杂吧。</p><p>从上面可以看出，CRC校验中有两个关键点：一是要预先确定一个发送端和接收端都用来作为除数的二进制比特串（或多项式）；二是把原始帧与上面选定的除进行二进制除法运算，计算出FCS。前者可以随机选择，也可按国际上通行的标准选择，但最高位和最低位必须均为“1”，如在IBM的SDLC（同步数据链路控制）规程中使用的CRC-16（也就是这个除数一共是17位）生成多项式g（x）&#x3D; x16 + x15 + x2 +1（对应二进制比特串为：11000000000000101）；而在ISO HDLC（高级数据链路控制）规程、ITU的SDLC、X.25、V.34、V.41、V.42等中使用CCITT-16生成多项式g（x）&#x3D;x16 + x15 + x5 +1（对应二进制比特串为：11000000000100001）。<br><strong>CRC校验码的计算示例</strong><br>由以上分析可知，既然除数是随机，或者按标准选定的，所以CRC校验的关键是如何求出余数，也就是CRC校验码。</p><p>下面以一个例子来具体说明整个过程。现假设选择的CRC生成多项式为G（X） &#x3D; X4 + X3 + 1，要求出二进制序列10110011的CRC校验码。下面是具体的计算过程：<br>（1）首先把生成多项式转换成二进制数，由G（X） &#x3D; X4 + X3 + 1可以知道（，它一共是5位（总位数等于最高位的幂次加1，即4+1&#x3D;5），然后根据多项式各项的含义（多项式只列出二进制值为1的位，也就是这个二进制的第4位、第3位、第0位的二进制均为1，其它位均为0）很快就可得到它的二进制比特串为11001。<br>（2）因为生成多项式的位数为5，根据前面的介绍，得知CRC校验码的位数为4（校验码的位数比生成多项式的位数少1）。因为原数据帧10110011，在它后面再加4个0，得到101100110000，然后把这个数以“模2除法”方式除以生成多项式，得到的余数，即CRC校验码为0100，如图所示。注意参考前面介绍的“模2除法”运算法则。</p><p><img src="https://pic1.zhimg.com/v2-15db3e5f6ebd50ba931955b53b3c6dbc_r.jpg" alt="img"></p><p>（3）把上步计算得到的CRC校验码0100替换原始帧101100110000后面的四个“0”，得到新帧101100110100。再把这个新帧发送到接收端。</p><p>（4）当以上新帧到达接收端后，接收端会把这个新帧再用上面选定的除数11001以“模2除法”方式去除，验证余数是否为0，如果为0，则证明该帧数据在传输过程中没有出现差错，否则出现了差错。 通过以上CRC校验原理的剖析和CRC校验码的计算示例的介绍，大家应该对这种看似很复杂的CRC校验原理和计算方法应该比较清楚了。</p><p>转自知乎：</p><p><a href="https://zhuanlan.zhihu.com/p/338068105">CRC码计算及校验原理的最通俗诠释 - 小太阳的文章 </a></p><p>2021年04月09日</p>]]></content>
    
    
    <summary type="html">CRC校验原理看起来比较复杂，好难懂，因为大多数书上基本上是以二进制的多项式形式来说明的。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>海明校验码是怎么实现的？</title>
    <link href="https://weijiajin.com/4f98d17a6171/"/>
    <id>https://weijiajin.com/4f98d17a6171/</id>
    <published>2021-04-09T10:09:39.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>如何一步步推导出海明码。</p><p>先提一个基本中的基本，异或。异或是两个数字相异则为1，相同则为0。举例1异或0&#x3D;1，0异或0&#x3D;0，1异或1&#x3D;0。</p><p>为什么要提异或呢，因为异或是校验中最为根本的一个东西。假设我有原码1111和错误传输1110以及正确传输1111，那么我怎么能隐藏数据内容直接更快更好的知道数据是否传输错误了呢？</p><p>按位异或，如果无错，则异或值必全为0。1111与1111的异或为0000，1111与1110的异或为0001，看出来了吧，异或在校验中有着极为基本的作用。</p><p>那么我们为什么要提出海明码？直接用奇偶校验不行吗？</p><p>不行，因为奇偶校验只能发现错误，不能追溯错误。所以我们提出了一个疑问，怎么能校验错误并寻找到错误的根源？（先讨论最基本的情况，即只发生一位错误）</p><p>那么将问题具体化就是：假设我要传输一个四位数据，想要对此数据进行校验并能够定位错误位置，我该如何设计？</p><p>首先考虑校验码的位数问题。</p><p>首先要明确的是校验码的位数加上数据的位数必须能够被校验码表示。即假设数据4位，校验码2位，则共有6位，但校验码2位只能标识4种状态，4&lt;6，不能表示清楚每一个位置。所以要增加校验码至3位。</p><p>但于此同时又有一个问题，假设我有5位数据，我可不可以使用3位校验码？5+3&#x3D;2^3，看起来刚好能够表示每个位置的数据，但这是不可以的。比如我传输的数据是11111，结果传输错误，传输成了01111，那么这个时候我要表示第一位的数据传输错误，我的校验码应该是001，而不是000。此外，000还表示了数据无错，所以实际操作中我们计算可表示位数的时候是忽略掉全为0的一种情况。故校验码的位数加上数据位数应该小于等于校验码能表示位数（除去全0情况后的）。</p><p>解决了位数的问题，接下来要解决校验码放在哪的问题。</p><p>假设我把校验码放在编码的最前3位，数据放在后面4位。再假设我传输的数据是*** 1111（<em>表示校验码）。那么当我的数据位置传输错误后，如传输成为了</em>** 0111，那么我的校验码应该写成2进制的4，因为第4位出现了传输错误。所以整体表示成100 0111。但此时出现一个致命的问题：数据不出错的情况下，可能单纯的校验码传输错误了。也就是说，如果第1位的校验码传输错误时，传输结果为 100 1111。看到问题的所在了吗？根据我的校验码，我应该追溯第4位的传输错误，但是我的第4位是传输正确的，这也就导致了我无法真正的找到错误位。</p><p>那么该怎么设计呢？我们可以看到，纠错失败是因为歧义的问题，即无法分辨是校验码所表示位置传输错误还是校验码自身传输错误。那么取消掉歧义，让校验码的自身传输错误时恰好其位置表示是他自己，不就解决掉这个问题了吗？按照刚才的例子来讲，我们首先考虑三种校验码出错的情况，分别是001，010，100三种，那么很明显，我们直接把这三位校验码放到他所表示的位置中不就可以了吗？也就是将校验码放置到第1，第2，第4三个位置中，这样位置的表示与校验码的传输错误可以用同一个表示，不会导致前文说的纠错失败的问题。</p><p>好了，到这一步后，我们已经清楚了校验码的设计方式了，但是校验码怎么取值呢？上面所提到的是已知错误去判断校验码的取值，但实际中我们是反过来的过程，所以我们就要去考虑取值的问题。</p><p>先讲我们是怎么进行校验的，也就是校验的流程问题。</p><p>这一步我们先将校验码和数据部分分开，假设校验码是p，数据是d，然后我们的p是根据d在某种规则下得到的，那么我们只需要将接收到的数据部分按照规则重新计算后（即理论传输正确时校验码的值）与其校验码部分（实际传输的校验码的值）做异或运算，我们将这个异或运算的结果记为s，若结果全为0，则表示两者完全相同，若不全为0，我们还希望s恰好为传输错误的位置信息。即我们希望s&#x3D;011时（s1&#x3D;1，s2&#x3D;1，s3&#x3D;0），第3位的数据确认传输出错。（s1即为s的第一位，s2为第二位，d，p同理）</p><p>这里我们探讨的s其实就是上一阶段讨论校验码位置时的校验码值，因为它的实际意义就是某一位出现了错误，表示位置信息。（而p是实际上校验码位置应该填写的值）</p><p>那么接下来我们先来思考一个问题，s1&#x3D;1代表什么？</p><p>这代表001，011，101，111位置中有一个必然出错了。也就是1，3，5，7位中有数据传输错误，s1&#x3D;1。那我们又知道s1&#x3D;（p1和d在p1下的规则运算后的异或），所以和p1有关的d就是抛开p1自身后的数据位数，即3，5，7位。</p><p>那么问题就简化了，我们需要将3，5，7位进行一种规则运算，使得3，5，7中一旦有一位发生了变化，他的规则运算结果就会由1变0，由0变1。</p><p>那么这种规则就是异或。3，5，7三位的异或将形成p1的值。如果其中1位发生了传输错误（或校验码本身第1位发生了传输错误），则按照异或规则形成的新p1必将与之前的p1相反，从而导致s1&#x3D;1。</p><p>同样的，按照此理我们可以求出p2，p3的值。</p><p>再举p2的例子好了。s2&#x3D;1代表着010 011 110 111中一个出错，即2，3，6，7四位中有一个出错。那么p2就应该是除了自己以外的3，6，7位进行异或运算后形成的结果。反过来说，如果3，6，7位发生传输错误（或校验码第2位发生了传输错误），则按照异或规则形成的新p2必与前p2相异，从而导致s2&#x3D;1。</p><p>到此为止，对海明码的编码过程就结束了。后面举例如何校验码是如何验证的。</p><p>假设我传输的编码是1010010（正确的海明码)，结果传输成为了1110010，那么海明码将如何验证呢？</p><p>1110010 画线部分是校验码，即p1&#x3D;0，p2&#x3D;1，p3&#x3D;0。</p><p>s1：d3异或d5异或d7等于0，0异或p1&#x3D;0.</p><p>s2：d3异或d6异或d7等于0，0异或p2&#x3D;1.</p><p>s3：d5异或d6异或d7等于1，1异或p3&#x3D;1.</p><p>故110位置出错，即第6位出现错误。</p><p>转自知乎：</p><p><a href="https://www.zhihu.com/question/29169628/answer/837787585">海明校验码是怎么实现的？ - 沐温的回答</a></p><p>2021年04月09日</p>]]></content>
    
    
    <summary type="html">如何一步步推导出海明码。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
  </entry>
  
  <entry>
    <title>原来你是我最想留住的幸运</title>
    <link href="https://weijiajin.com/0973603a3a3d/"/>
    <id>https://weijiajin.com/0973603a3a3d/</id>
    <published>2020-11-25T16:35:04.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>我喜欢你，做我女朋友吧！</p><p>我喜欢你。其实六年前就想对你说了，但那时还太懵懂，不懂爱情，喜欢与不喜欢，觉得一个女生很漂亮，人又很善良，便喜欢了。你就是我当时心中这样的一位女同学。虽然也有其他女生，但当时偏偏就选择了你。也许你比她们漂亮，比她们善良，但这都不是我喜欢你的原因，我喜欢你只是源于感觉，那种感觉只有你给过我。不知道你是否还记得，四年级那年我们同班，嗯，那是我最快乐的时光，下课你追我，我踢你一下，或是斗斗嘴，记得当时我喜欢管你叫鸭子。你知道为什么吗？第一次见你，就觉得你的脸型和眼睛好像好像唐老鸭。我想这些你该都不记得了吧！你还知道刘艳吗？就是她给了我喜欢你的勇气。我也第一次品尝到了恋爱的甜味。你知道吗？当刘艳告诉我你喜欢我的时候，我当时是多么的高兴。你当时和她一个宿舍的吧，我真的想不到我这么一个人会有人喜欢？更想不到那人竟是你？觉得没有什么时候比那一刻开心了。</p><p>真的，那段时间我觉得我是最幸福的人。</p><p>记得那年，我们中午一起去照大头贴，我现在还一直保留你那稚嫩的照片。我其实一直想和你照一张合照，就是当时胆子太小了，也没敢说。</p><p>我那时就想讨好你，让你开心。有一天，我在学校门口的小店里，看到十分好看的蜡烛，里面有五彩的沙子，用薄薄的玻璃装着。我当时就在想，要是能送给你，你肯定会很喜欢的。于是，每天我有点钱就去抽奖，抽了好多。终于，我抽到了，虽然那是最小的一个。我很开心地叫周盼递给你。但你好像不喜欢，又还回来了。当时我并没有太伤心，只觉得自己还不够好，不懂得你。我想，要你喜欢。</p><p>我每天中午上学，最开心的一瞬莫过于路过你们班，和你的一秒对视了。那一秒，真的美，我忘不了。</p><p>我到现在都还说不出为什么喜欢你。对于你，像来自我的骨头。</p><p>现在呢，想拥着你，距离不允许；想陪着你，时间不允许；唯有心底想念着你，信息祝福着你。每天陪你聊聊天。但无论你在何时，无论你在何处，无论你做什么；请记住：我永远支持你，无时无刻不着你，因为你是我最爱的人！那时我有一个破手机，里面那首《做我的女朋友》我每次从你家回来路上一直听，想着有一天唱给你听。</p><p>与你相遇，是我此生最幸运的事情，我想写出愉悦的文字给你，可落笔后却写成忧伤。应该是我的自卑配不上你。给不了你一路阳光，却也不愿放你离去，所以我在文字里洒下给你的毒，一点点地将你诱引，一天天地将你迷陷在我的世界。在文字里，我用忧伤将你感染，用相思将你牵绊，慢慢地迷幻你的视线，渐渐地麻痹你的理智。我自卑地想让你离去，却不停地用忧伤的相思将你缠绕，你若能慧剑斩情丝，该是多好。</p><p>与你相恋，是我此生最幸福的时光，我想写些暖心的文字给你，可落笔后却写成凄凉。应该是我的自私放不下你。许不了你半世繁华，却也不想让爱错过，所以我在文字里点燃我们的爱，一丝丝地将你牵引，一次次地将你迷醉于我的怀抱。在文字里，我用热情将你点燃，用缠绵将你挽留，缓缓地褪去你的武装，悄悄地卸下你的疲惫。我自私地想将你占有，却不敢用温暖的承诺将你守护，我若能封笔戏江湖，该是多好。</p><p>那些美好的画面，总在梦境里翻滚，提笔描绘时破碎成拼图，愚钝的我拼出了有你的画面，却拼不出你身旁的我。</p><p>那些幸福的时光，总在记忆里轮回，执笔书写时零乱成麻团，笨拙的我理出了相拥的曾经，却理不出我们的未来。</p><p>相遇，是因为这世界有会说话的文字。相恋，是因为我的世界里有个能懂我心的你。若我能写就繁华，当许你半世繁华。若我能写出风流，当给你倾城浪漫。若我能写下温暖，当陪你度过寒冬。若我能写入你心，当为你写一世情书。</p><p>2015年9月12日</p>]]></content>
    
    
    <summary type="html">那些美好的画面，总在梦境里翻滚，提笔描绘时破碎成拼图，愚钝的我拼出了有你的画面，却拼不出你身旁的我。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>喜欢之美，真善以蔽之</title>
    <link href="https://weijiajin.com/5f391d961307/"/>
    <id>https://weijiajin.com/5f391d961307/</id>
    <published>2020-11-25T16:31:26.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>“遇见你，真好哇。灵净脸庞，莞尔一笑，如沐春风。”这句话是我遇见你的那天，我所写，就像是王小波遇见李银河的那般，那种“你好哇，李银河”的爱情，那般可爱。<!--more-->我也只对你说“发现我每次遇到你，我都会很开心!哈哈哈”，其实我心里满满都是对你的喜欢，你的回复“哈哈哈哈，我也开心”，对于我，已足够可爱了。</p><p>那天刚开始我没有注意到你，后来只是不经意发现你在我旁边的餐桌。我的思想在做猛烈的斗争，到底打不打招呼呢，雅晶还认识我吗，可是我好喜欢雅晶。正当我还在做思想斗争的时候。你已经吃完并看见我了，并很调皮的向我打招呼，愣神后的抬头，你回眸的微笑，暖了少年的心。</p><p>年少的喜欢，涌上心头，就是如此的简单。</p><p>有时候，越简单的事情，越难以忘却。原以为只是一时对美的冲动，过几天我的生活就会恢复正常。可是，可是已经过了快一个月了，我为什么还是忘不掉你的回眸。一时的喜欢不该是这样的。我努力让自己冷静，这些天我没有再遇见你，但在心里总念念不忘。这些天，小喜欢愈积愈深。像是我心事，难以排解。</p><p>今天我冷静了良久，把所有的喜欢写成文字。觉得，这个年纪，庆幸有个人喜欢。且，被别人喜欢，应该也是一件很令人开心的事呀，那我为什么不写出来呢，两颗心可能都会很开心呢。</p><p>第一次遇见，在映雪左岸晚上。学校，唯独和你聊得很开心。那时心中记下了对你的好感，后来我们早起晨读，交谈读书心得，唯一的遗憾，由于我的木讷，我没有把《穆斯林的葬礼》的爱情讲好。对于爱情，我语无伦次，慌张的我不知从何说起。我心中的乱，像是喜欢一个人，一切都不那么从容，只是那时我不知道我喜欢的是你，我只是归咎于，不过是在女孩子面前的紧张。</p><p>我人生中的第一次大胆，就是当我发现我念念不忘的人，仅仅是我觉得像你的路人从我身旁擦肩而过，仅那短短的一瞬，我转身喊你名字，我当时也是觉得像你，整个大学最大的惊喜莫过于，那个人，恰好是你，真的是你。不知道你还记不记得，我一直记得，那个时间，你刚学完习，回宿舍的路上。</p><p>人生这样的擦肩而过能有几次，这几次我一直在问自己。我一直在想，我们的相遇相识，就像那晚我们的擦肩而过，这封情书就像我那晚喊你的名字。那晚你戴着帽子，冬天很冷，我仅仅是从步态，觉得是你。长久的魂牵梦萦，不就是喜欢吗。喜欢你，说了出来，自己释怀，即使你不喜欢我，想必有一个人喜欢，也是一件相当幸福的事情吧。</p><p>你的美。真善，二字足以蔽之，最初打动我的，是和你一起在大活学习，你那认真的神态，开朗的性格，待人以诚。真善而美。没有其他，我的喜欢，只是因为和你相处中我看见了一个真实的你，我的定义从来都是，真善而美。我心中只接受认可这种美。我的喜欢，喜欢一个人，便是如此，如此的雅晶之美。</p><p>相遇即缘，希望我的喜欢，这封情书，能让你知晓，你的美，有人一直在欣赏，并于心珍藏。</p><p>也许总是这样，不过是一场自作多情。无妨，这只是一封赞美你的情书，一位名叫家劲的朋友所写。</p><p>2019年5月29日</p>]]></content>
    
    
    <summary type="html">遇见你，真好哇。灵净脸庞，莞尔一笑，如沐春风。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="jiangyajing" scheme="https://weijiajin.com/blog/tags/jiangyajing/"/>
    
  </entry>
  
  <entry>
    <title>小幸运</title>
    <link href="https://weijiajin.com/2a6e532cc6fe/"/>
    <id>https://weijiajin.com/2a6e532cc6fe/</id>
    <published>2020-11-25T16:29:18.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>也许很多年很多年以后，我和别人谈笑风生，会与别人提及我人生中的美好与最爱的人。也许，那时我头发斑白，会与别人说起，年轻时我曾喜欢过一位女孩，不，我曾爱过。</p><p>昨夜，偶然知晓你也许就快结婚了。</p><p>那该是不错的男孩，想来他是多么幸运。</p><p>但是不知怎么，我却好像一直追寻的有了答案，突然有了某种释怀，好像突然就没有羁绊。我的心告诉我，你要离开了。我也要远走了。</p><p>我愈发觉得一些话不得不说，因为我已经来不及了，再迟些，也许就会后悔，或是遗憾。</p><p>说实话，听到这件事的那一刻，整个人的身心都颤了一下，这一切是那么熟悉。我记得前年我曾和你说过，我做了一个梦，梦见你结婚了，梦中的我没有止住泪流。现实中，昨夜，我却依然佯装无谓，和你的曾经的某位追求者语音，一切的一切是那么安然。他也是很遗憾的说着关于你的近况，我静静的听着，却也失了魂。他说着他以为我的心里。他问我，我是不是还喜欢你。 我说是的。他问我是不是觉得遗憾，觉得我和你还没有机会在一起，我知道我不是，我还是回答是的。他问语气透着无奈哀伤，而我那刻的心绪早已在这十年来的任意的回忆中四处飘散，混乱，我理不清，我想说的话，越来越少，似乎趋于平静。</p><p>但是这一夜我睡不着，闭着眼我回忆，想要理清记忆。</p><p>我突然发现有些话，再不说，真的就不在有意义。沉了那么多年，我的心沉不下去了。因为，我发现某些情感，已在我的心里生根。突然心痛，这像是一个漩涡，我已陷了进去。脑子里的回忆，还有那些我看到的别人的爱情，看的那些名著，我知道，我在经历人生还算有点特色的人生。</p><p>我回忆，最初的相识，那是都很小，我不喜欢任何女生，我什么都不懂。到了六年级，我依然，我没有关于喜欢的概念，更别谈爱情。虽然那是我们是好朋友，我并不真正喜欢谁，只觉得你很好看，每天路过你们班的门口看看就很开心了。希望我们永远是好朋友，这是小学你留给我的毕业留言。我一直记得。</p><p>可是自那以后，我再遇见你，我止不住的是我的心跳，看到你，那是很小很小的我的心就狂跳。渐渐的我懂得，我喜欢你，很单纯的喜欢，我的心告诉我。</p><p>那是的我就开始憧憬，以后娶你做我的新娘。但是我从未说过，我只是在等，我知道要娶一位女生，我需要有足够的能力，给她想要的。于是，我不记得那天，你就成了我一个很模糊的目标，之所以模糊，我知道只是我单方面的倾向。从那时起，我把你当做我一生最重要的女人。</p><p>此后我们遇见好多次，我的人生好像，也因这些相遇更有意义。</p><p>我一直在思考爱情。</p><p>可能有人会说我不专一，喜欢过很多女生，我也怀疑过自己。只是我现在已经知晓了自己，我所喜的一切，只不过是我太爱一个人，从别人的影子也能看到有你。如果这都不算爱，我也没什么好去悲哀。</p><p>大学也遇到了一些女生，最后都没有结果，她们都说我的心里已经有了一个人。我回忆我以往喜欢过的女孩，这种喜欢只是我对某位同学的好感，我发现，每位有好感的女生，都是你的某些，我将之联系。除了你的其她，只是其她的你。</p><p>既然事实如此，何不成人之美，我的心告诉我。真爱一个人，会祝你幸福。我祝你幸福与幸运。</p><p>你一定要幸福美好，你在我心里永远都最美好的最初，没有之一。我以后便不再打扰你了。</p><p>在你的生活，我会渐渐淡出。</p><p>但是，此生此世，你是我忘不了的女生。</p><p>甚至我可以说，以后的以后，人之将死，我脑海中必将浮现你的名字，你让我十分清醒地懂得爱情，知晓人生。认识你，我很幸运。生来我一无所有，很多年很多年以后，我会带着你的名字离开。</p><p>最后，我想对你说，相比喜欢，我爱你!</p><p>怎样爱?很爱，我曾努力想娶你，可是人算不如天算。既然如此，便不强求。只是我爱你这件事，便再无人知道了，也许很多年很多年以后，我和别人谈笑风生，会与别人提及我人生中的美好与最爱的人。也许，那时我头发斑白，会与别人说起，年轻时我曾喜欢过一位叫王倩的女孩，不，我曾爱过。</p><p>我想你的那个他也一定会是个特别棒的男孩，我始终相信你是幸运的女孩!你一定会幸福的!一定的!你是那么的幸运!<br>现在才发现原来你是我最想留住的幸运。<br>希望我们永远是好朋友!这句话这次我对你说。<br>对了，有一首歌《年少有你》我一直想唱给你听。不知以后是否还有机会。</p><p>2017年4月20日</p>]]></content>
    
    
    <summary type="html">也许很多年很多年以后，我和别人谈笑风生，会与别人提及我人生中的美好与最爱的人。也许，那时我头发斑白，会与别人说起，年轻时我曾喜欢过一位女孩，不，我曾爱过。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>校园青春</title>
    <link href="https://weijiajin.com/1cbb7e0a3fc8/"/>
    <id>https://weijiajin.com/1cbb7e0a3fc8/</id>
    <published>2020-11-25T16:27:15.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>青春爱在校园<br>不得不说青春是本太过仓促的书<br>每页都有着自己铭心刻骨的回忆<br>有自己轻狂年少<br>你们像那夹在书里的银杏叶<br>记录着每段让人难以忘怀的感动<br>每片泛黄的银杏叶代表不同的回忆<br>那是一份信仰，一份依靠<br>我一辈子的骄傲</p><p>我们留恋校园的每一个角落，只因为我们曾是她的主人，当然她也是我们青春的见证，因为那一年，我们十七八岁。我们想尽快长大，想脱浮华的天真，想爱情，又思人生。等我们蓦然回首，才懂得那年的美好，才开始去怀念那时的青春，祭奠那年的十七八岁。可是回不去了，毕竟，此时此刻，她已不属于我们，只永存于那段称之为青春的岁月。特别是段很旧很旧的时光，有着轻轻浅浅的爱，藏着懵懵懂懂的情。</p><p>那一年，我与你同班，我们懵懂地度过了难忘美好的300天，似乎所有关于你的回忆都是带着淡淡的雨滴味，还有泥土的清香，似乎你就如同雨滴一般美好你带给我的是一直以来的清凉。</p><p>我懂得，那年我们的相遇，并不是缘分，不然为何和你碰撞在那过早的华年。人们说，花开固然美丽，过早盛开，也必将过早的凋零且无果实。所以，你只留给我美好回忆，在我回忆里最美的存在，也是那段旧时光的引以为傲。</p><p>没有你的日子，我把情字读了千万遍，后来发现，终究还是少了你的温婉秀气，于是我想渐渐忘记，假装不再想起。可是爱情依旧这般，来时如霜，去时如电，挽不住那芳华。我想提笔写下我们的故事，却迟迟下不了笔，我觉得，任凭我怎么去写，都刻制不出另一个你。曾经该怎么写？怎么写，都是错妄。</p><p>你是否还记得我写的第一封情书，现在想来，也许那是我最为青涩的情感；你是否还记得我写给你的第一首情诗，那是我，一位懵懂少年，从心里最为纯情的呼唤。也许，于你，那些字字句句，言言语语，早已忘记。可是，我记得。我记得，曾经有一位少年，离你不远不近，却一直守护；我记得，你明媚的笑颜，便是他心中倾城的暖；</p><p>我记得，他最喜，你那柔情的眼睛，那么美，浸着诗意；我记得，于他的记忆中，你就是唯美的丁香，静静地开在成长的路畔未曾凋谢。他最喜看你在楼梯角落，那洁嫩的脸庞，只是余光略过，心里却盈满了欢喜。</p><p>如果那儿不见了你，他会着急，担心，会感伤，带着忧虑想着，你在哪里。放学路上跟在你身后，为多看一眼，虽然只是背影。</p><p>他还喜，下课，假装路过你们班，为了你微笑的侧脸，明媚，温暖。这一切的一切，少年记忆依然。</p><p>你们说，多么美好的年月，喜欢一个人，在这最开始的青春，他在自己梦中慢慢睡着。也许就是遇见你的那一刻开始，他爱上了美好，爱上情歌与诗。</p><p>现在，每每回忆校园，回忆初中高中六年，温暖都会打心底溢出感动，涌出心头，润湿眼角。我想，日后若能和你回忆当初多好，一起想我们的爱恋，想你我青春的蠢，将我们曾经的点点滴滴，用文字镌刻，该有多好。我又想，你我终究无缘，我也只能一个人，一个人去写下这青春不完整的篇章，写下我残缺的回忆，给自己一个交代，不让多年对你的思念和你我的曾经消尽。是为了你，更为了弥补我逝去的青春。</p><p>岁月是一个道场，枯荣便是轮回，蹉跎是承诺的姿态，我只与真诚低眉。我也曾在你的世界里飞，最后默默离开，感谢你让我知晓爱情与诗意。曾经的爱，只开在蕊里，错过了一个季节，已无法完美，凋谢就是淡然如水。突如其来的雨，经过我的屋檐，涤净所有尘埃，抚平连日来的躁动与不安。我依着这种清新的脉络，写几行干净的小字，使得疲累的心情获取暂时的舒缓，安静且喜欢。</p><p>愿人生无可辜负，多么奢侈的愿望，空洞的梦想。世界原本就是蹉跎的，没有什么如愿的希望可以长久，欢喜有时，落寞有时，待到窗明几净，依然能含着泪，噙着微笑，向后人诉说我们逝去的青春，讲述我们那年的美好。</p><p>有些故事，经历过了，也就了无遗憾，有些人，爱过一次，也就无需再来。没有落了单的承诺，只是在别的地方，以另一种方式兑现。海誓山盟，地老天荒，天涯海角，便是爱情趋于永恒的地方。懵懂，是我们初见的情怀，时过境迁，结局也只剩怀念，隐着美含着泪。人生若只如初见，也就没了那么多的遗憾与嗟叹，这山长水远的人世本来就不是完美的，只感动了自己的故事，也没有理由继续读下去，一声再见便再也不见。</p><p>而后，独尝着浮世清欢，一个人的细水长流。</p><p>这就是我的青春印象，关乎爱情，关乎地老天荒。</p><p>也许你会记得我<br>一位痴情于你的少年<br>他对爱情有过深深的思考<br>如他的人生一般重要<br>在你尚未了解一切前<br>他便知道，你就是爱情<br>他看到烟，便断定是火<br>回想你我相逢<br>挥手之间，存下好感<br>相互对视的刹那<br>我认定今生有缘</p><p>2016年10月31日</p>]]></content>
    
    
    <summary type="html">那一年，我与你同班，我们懵懂地度过了难忘美好的300天，似乎所有关于你的回忆都是带着淡淡的雨滴味，还有泥土的清香，似乎你就如同雨滴一般美好你带给我的是一直以来的清凉。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>清欢</title>
    <link href="https://weijiajin.com/42cf3aea9a72/"/>
    <id>https://weijiajin.com/42cf3aea9a72/</id>
    <published>2020-11-25T16:25:36.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢一个人的清欢<br>我终究还是庸俗<br>活在当下，安于今朝<br>偶尔某个枯木水穷<br>偶尔某个女生牵动心绪<br>就文艺泛滥<br>未言承诺，不守天荒<br>只在心里，寄情达意<br>庸俗的我，羞涩于心<br>爱情却也清欢</p><p>2016年10月24日</p>]]></content>
    
    
    <summary type="html">我终究还是庸俗，活在当下，安于今朝，枯木水穷。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>猜想</title>
    <link href="https://weijiajin.com/a463d5967457/"/>
    <id>https://weijiajin.com/a463d5967457/</id>
    <published>2020-11-25T16:19:16.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>清清冷冷的晨雨中<br>我透过温婉的你<br>猜想秋的心意</p><p>2016年10月24日</p>]]></content>
    
    
    <summary type="html">清清冷冷的晨雨中，我透过温婉的你，猜想秋的心意</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>失眠</title>
    <link href="https://weijiajin.com/39965e8f2c28/"/>
    <id>https://weijiajin.com/39965e8f2c28/</id>
    <published>2020-11-25T16:17:58.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>不眠的人，也许会有很多种<br>想着昨日种种，想着今日种种<br>想着明日种种，为着种种虚诞<br>难以静穆，于床榻之上覆去翻来<br>入睡却也梦多，成了半个不眠人<br>昨夜梦你，一个月，在梦里给的时间<br>我不懂，不懂</p><p>我想<br>是时候，好好反省夜的宁静<br>下着雨，不知何时才能放晴</p><p>我忽然非常想念<br>想念丁香般的姑娘</p><p>我写诗写词写花季年华<br>却写不出盛开的执着<br>过于在意爱或喜欢</p><p>是怎样的情感，<br>叫我看你许久<br>我只想说你给我的是一种蓝<br>天空的那种，不同于海的那种<br>浅浅清清，那样纯洁</p><p>又想起，那日雨中相遇<br>素不相识，给予微笑<br>那一刻，让我觉得，有你的地方<br>便会有花海和诗意</p><p>2016年10月24日</p>]]></content>
    
    
    <summary type="html">我忽然非常想念，想念丁香般的姑娘。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>梦溺</title>
    <link href="https://weijiajin.com/12f8a6917cb9/"/>
    <id>https://weijiajin.com/12f8a6917cb9/</id>
    <published>2020-11-25T16:16:39.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>最近梦里时常会梦见一个女生<br>我们柔和相对<br>报之以灿笑邂逅<br>彼此大方与活泼<br>就这样，梦里不觉孤单<br>一朵丁香独独落在心房</p><p>现实中再去看她时<br>觉得触手可及，又觉得不可及<br>于是我只在眼神里将她慢慢宠溺</p><p>我想，只是喜欢一个人罢了<br>毕竟，我和她的距离<br>可咫尺，可天涯<br>便如这世上万般的情，事与物<br>可穷，可尽<br>可木，可竹<br>可花，可草<br>可瓣，可叶<br>可爱，可憎<br>可喜，可怆<br>可我，可你</p><p>现实可以是梦<br>梦也许是还未发生的现实</p><p>2016年10月19日</p>]]></content>
    
    
    <summary type="html">我想，只是喜欢一个人罢了，毕竟，我和她的距离，可咫尺，可天涯。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="muqiong" scheme="https://weijiajin.com/blog/tags/muqiong/"/>
    
  </entry>
  
  <entry>
    <title>烟火</title>
    <link href="https://weijiajin.com/f1f3e5e1677f/"/>
    <id>https://weijiajin.com/f1f3e5e1677f/</id>
    <published>2020-11-25T16:14:55.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>也许你会记得我<br>一位痴情于你的少年<br>他对爱情有过深深的思考<br>如他的人生一般重要<br>在你尚未了解一切前<br>他便知道，你就是爱情<br>他看到烟，便断定是火</p><p>2016年9月21日</p>]]></content>
    
    
    <summary type="html">也许你会记得我，一位痴情于你的少年，他对爱情有过深深的思考。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>随我来</title>
    <link href="https://weijiajin.com/c86468d6de1c/"/>
    <id>https://weijiajin.com/c86468d6de1c/</id>
    <published>2020-11-25T16:13:38.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>随我来<br>你随我来<br>我带你去看一看太阳<br>议一议将来<br>讨论云彩</p><p>2016年9月21日</p>]]></content>
    
    
    <summary type="html">随我来，你随我来，我带你去看一看太阳，议一议将来，讨论云彩。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>予远方</title>
    <link href="https://weijiajin.com/8f15539a30fd/"/>
    <id>https://weijiajin.com/8f15539a30fd/</id>
    <published>2020-11-25T16:10:07.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>从前所写，是我对未来的一种预知，对人生爱情轨迹的描摹。此时此刻，我已经入了大学，比起那时，多少成长了。至少，我已经对爱情有了深深的思考，如我的人生一般重要。面对一年前的预言，我似乎渐渐于人海找到了你，远方人也不再是一个抽象的词，她是你，你成了她，远方人，我爱的人，恰好。</p><p>我想写封情书，以爱之名给一位叫倩倩的女子。你我相遇，我与你有缘，你却与我无份，但是我相信完美的缘分是极少极少的，就像完美的爱情。缘深缘浅，在于我的心，你的情。我爱你的声音，曾经的我，梦里心里，一直将长发披肩的女子安放于心，特别是长发洗完后的湿娇，那种就是我心中的美。可是你知道吗，自人群中邂逅了你，除了那让我倾心的笑颜，我一直挥之不去就是那恰好的短发，我不知道你长发及腰的模样，但你此刻模样已萦牵我的心。我开始刻意，刻意在人群中邂逅同样的你，太多的人，和你你也的背影，却少了你的眸中的暖意。我终于知道你为什么怕冷了，你眸子给予他人，特别是我太多的温暖，但我想将你赠我的暖意，在我余生，偿还于你，像黛玉于宝玉一般，给你最真纯的爱与情。</p><p>还记得你我是怎么相识的吗，你还记得我第一次听到你的声音，我说你的声音好熟悉，因为你声音的味道，我熟悉，我曾挚爱的味道。那是我回忆中最美好的味道。人生太多的不可言说，你的声音就是我心头的坎，不可说，因为它在我心里连着爱情。问我是何时爱上你，旁人说初见时的一见钟情，但他们又何知道我爱心深于人。暑假聊天你说你很丑，说了很多次，说会辣眼睛，说你妈妈都嫌弃你……也许你只看到我对你发的微笑，但那一刻我已爱上你，不，准确地说是心，你的少女心。能承认自己丑的女子，你的心多真，爱你的心，无关丑美。正如你和我说话的声，我听出了你稚嫩的少女心。也许这就是你的心，我爱的心。遇见你是我最好的幸运，遇见就是你和心的合体，一面一秒，就爱上你，有心的你，远方的你。</p><p>我来自远方，我来这里有两个目的：学习与爱情。爱情就是找到我高三时想象的那个远方人，我想，远方人已经找到了，她便是你了，倩倩。我将会一直爱着的人。你爱不爱我，我无法去改变，我真的真的想给你最美的爱情。我爱你，与你有关，不管怎样，我的心房里只有你。爱上你，也就是一辈子心里都刻上了你，一位短发爱笑着说自己丑的女子。我爱你，爱你吃藕的样子。</p><p>我知道，表白是为爱情的插上胜利旗帜，而不是冲锋号角。但是，我真的喜欢你，真的。我也从来没有这般痴念，原谅我的鲁莽。如果恋上你，不曾告知，谁会知。所以，我说了，说得彻骨，给你听，给自己听。</p><p>原来你就是我最想留住的远方，我只是来到你故乡的少年，来找寻爱情和远方。</p><p>也许，这封信，就是我的告白。</p><p>也许，这封信，就是所谓诀别。</p><p>也许，这封信，就是爱情。</p><p>成功或许失败，至少都会成为我对人生的思考。</p><p>2016年9月20日</p>]]></content>
    
    
    <summary type="html">从前所写，是我对未来的一种预知，对人生爱情轨迹的描摹。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>木子情书</title>
    <link href="https://weijiajin.com/932a96b25dc4/"/>
    <id>https://weijiajin.com/932a96b25dc4/</id>
    <published>2020-11-25T16:07:45.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>木子，我唯一的信仰。</p><p>我对你说的不多，只一句喜欢。</p><p>写的这些，不是要你怎么样，只要记住我，足矣。</p><p>你，名竹。我喜欢叫你，个个。你说，这是只有你闺蜜才知道的小名，我心中窃喜，又多了一份缘。个个，只是我随心而说。看到了，便想了。就像我遇见你一样，见了，便喜欢了。</p><p>本并不迷信星座的我，也痴痴地查了你我的星座，结果，我们竟是??（你为金牛，我是摩羯）。我又想，你，便是我的那个期待已久的对的人了。梦里有时也会有你的影子，那是你我幸福的隐隐约约，就好像你和我已是恋人的那般幸福。梦醒，我也还清醒，知道，不管怎样，中间还有很长的距离。知道，现实是，你我的交际少之又少。又何来的交际？想于此，那抹心头的忧伤，又浮上来，又是淡淡的一天，伴着见你，却无能为力的忧伤。</p><p>转而便见你，也要佯作不想见的姿态。明明很喜欢，表现出的，好像不在意。其实，你的每个细微的动作，我铭记于心，不想辜负我喜欢你的心。却又怕旁人看出，小心怯怯的注意你，只用余光。这样谁也不知，谁也不晓，我在我的世界，信仰你，喜欢你。你就如，一位高高的神，我对你，只能仰望，也许唯一能做的就是将这份喜欢浅藏于心了。你要知道，其中，定会些许的煎熬。我总是这样，偶尔的欣喜，便是与你的，不算是接触的接触，就连这，我浑身都会发热，奇怪的感觉，也只有你能给了。</p><p>你，在他人眼中，不倾国倾城，不桃色花香；可是，你有一种十分特别的气质，让我第一次见你，便觉得你与这班中的众多女子不同，也就这点，深深的吸引了我。遇见你，我才发现原来喜欢一个人，容颜上不必太苛刻。气质，是骨子里的美了。你的气质，也是美到了我的骨髓里。只要见你，你的气质便毫不留情的将我控制，我也似得了绝症。年龄不大，未经历沧桑，已在你的面前，怕败下阵来。但是，这些的这些，你都不知，一切的一切，只有我。想来，我真是悲哀。我认认真真的经营自己的世界，孤独，不是享受，是一个人的忧伤。于是，想摆脱痛苦，就会产生对异性的喜欢。相互喜欢，尚好。如若不是，便是无尽的煎熬了，是没有解药的毒。她不爱我，人生的第一痛苦。最好不要如此，爱情要有，尽量将生命过的幸福，滋润。</p><p>我的故事，需要你来丰富。</p><p>你是一个有故事的女同学，你大气，又有小女子的气质。总能在你安静的背影里，看出活泼来。我最喜欢的，也就是你的那活泼，天然本真，有着洋河的风土人情。泼辣，太重。怎么形容，都有些不贴切。活泼，又太泛。怎样活泼？笑便大声笑，没有遮挡，不做雕饰（ps：笑得时候，还是比较不雅的），这点虽丑，我依旧喜欢。也应了那句，喜欢你，以及你的全部了。我之所以，喜欢活泼的女子，只因我也是活泼的。我总是带着童心看着这世间的诸多美好，越看越美。也不自觉得挑了你一个，拿来喜欢。我想用文字，记录我的美美的心情。文字虽美，却乏有故事。我的故事太少，关于爱情更是没有。文字的美，没有你来丰富，何谈？所以，写这，想邀你与我，享一段爱情佳话。近来看，想你该是不愿的。我不强求，你有他，我知道，忧伤于我，也是这剩下的时间了。我没有祝福你的大度，却只想如果无缘就渐渐将你忘了。这样，你也就在今年存在过我的文字里。我也不必那么忧伤了，多年以后，怕见你依旧难以坦然面对。分开，毕业，只是你在我记忆文字里的暂停。以后，再遇见，我一定还会如初的喜欢，脸红，心跳。我该如初，喜欢你。时间，隔离不了，这长久的相思。一切的一切，只是感情的暂停，会有再续的时候，或者留个时间斩断情丝，不想留下一生的遗憾。</p><p>你已有喜欢的人，尽管这是事实，我依旧不去相信。lsy吗？怎样。我有时候，就是痴痴的，尤其在爱情的方面。我不善和你交流，怪我没有勇气。主要是与你说话，不自然，紧张。我在努力。</p><p>2016年3月18日</p>]]></content>
    
    
    <summary type="html">你，名竹。我喜欢叫你，个个。你说，这是只有你闺蜜才知道的小名，我心中窃喜，又多了一份缘。个个，只是我随心而说。看到了，便想了。就像我遇见你一样，见了，便喜欢了。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lizhu" scheme="https://weijiajin.com/blog/tags/lizhu/"/>
    
  </entry>
  
  <entry>
    <title>浅浅的喜欢</title>
    <link href="https://weijiajin.com/3b7d579800e6/"/>
    <id>https://weijiajin.com/3b7d579800e6/</id>
    <published>2020-11-25T16:05:32.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>浅浅的喜欢，我知道，有一天，不相见，我的喜欢会慢慢褪去，就如当初慢慢喜欢上了一个人一样。但是，每天见你，于我来说，是一种压抑。我想，与你快快不见。这浅浅的喜欢，我不再骄傲。</p><p>2016年3月14日</p>]]></content>
    
    
    <summary type="html">我知道，有一天，不相见，我的喜欢会慢慢褪去。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>你若未嫁，我若未娶</title>
    <link href="https://weijiajin.com/b71bb5d3a473/"/>
    <id>https://weijiajin.com/b71bb5d3a473/</id>
    <published>2020-11-25T16:03:13.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>四年后，你若未嫁，我若未娶。我那时便要邀你做我一世的妻子，要与你过柴米油盐的平凡日子，和你幸福偕老白头。 你嫁，或我娶。缘未到，来世续。但今生今世彼此都要幸福，别还牵念彼此。我们，都爱各自爱人就好，就好。但此刻，我是爱你的。将来，变数多，对你我，都是考验。</p><p>2016年3月8日</p>]]></content>
    
    
    <summary type="html">要与你过柴米油盐的平凡日子，和你幸福偕老白头。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>我在等你啊</title>
    <link href="https://weijiajin.com/db027475da0e/"/>
    <id>https://weijiajin.com/db027475da0e/</id>
    <published>2020-11-25T16:01:46.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>一直坚信，远方有一个人，和我一样，等待远方。</p><p>我开始懂得，你我的相遇，并不是缘分，不然为何遇见你在这过早的华年。人们说，花开固美，但过早盛开，也将过早的凋零且无果实。早花，之所以让人倾心，只是她开的时候也就仅有她开。无人与她争艳，她独立暄妍，便是最美。自然守恒，她独开，万物未醒，醒来时，她早已落入尘土，幻化虚无。只是她最美的存在，还无人的知晓。为了一时之欲，毁了一生，也成了一辈子的遗憾。</p><p>不应该的时刻，注定要被摧毁的。我什么都不怪，只怪我们相遇在不该的年月。我本想，我们是一辈子的事情，但是……怪我太自私，我不想我们受苦，分离我们都会向前。我明白，现实就是如此，我没有能力给自已想要的幸福，我为了向前，与你分开。</p><p>我害怕，哪天再遇见你我明明看见，明明看见，明明在意，却佯作无谓。我知道，我们陌路也许只是时间的问题。但回忆时间是抹擦不掉的，越久回忆会越美，美的朦胧，最后，连自己也怀疑回忆的美和现实的真。</p><p>现在，我已和你分开，我除了你了无牵挂。也不对，我也不牵挂你了。我把寄托给了远方，我站在现在相信未来的希望。我不想忧伤，我的思念不再向你，而是深夜望着星空，想着远方，和远方的人，那个可能像你的人。</p><p>那个远方人，你该和我一样吧，一样的孤独，一样的憧憬未来和未来的伴侣。我们，是这样的两个人，成为夫妻前，我们都未见面。估计我们只见过一面便要成为夫妻。你会发现，我是远方的你，你是远方的我。之前无所交集，遇见了我们便要生死相依。</p><p>我想着这样的一个远方人，以此告诉自已不要对爱情过于着急，一切都会来的。所以现在的我，对于现在我喜欢的女孩，在她面前也多了份坦然与泰然。我仅仅喜欢你哦！我心里知道，也不会在一起的。我的喜欢，只是对你的赞美。你也要表现出，我也知道的样子。</p><p>夜又深了，远方人，你也该睡了，和我一样。隔着时空，我觉得你能听见我。就像我隐隐约约听见你一样。</p><p>晚安，远方人！也许再过十年，远方人，便是一个名字了。而我的名字也将代替你的远方人了。是吧！</p><p>远方人，我一生的挚爱！不要急，我和你一样！我们命中注定在一起。我相信。</p><p>2016年3月3日</p>]]></content>
    
    
    <summary type="html">一直坚信，远方有一个人，和我一样，等待远方。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>来日并不方长</title>
    <link href="https://weijiajin.com/13fa96fe05d6/"/>
    <id>https://weijiajin.com/13fa96fe05d6/</id>
    <published>2020-11-25T15:59:55.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>很多时候，总以为来日方长<br>觉得，一切都来得及<br>于是，我们不慌不忙<br>生命来来往往，也会无常<br>本以为它是牢靠的<br>突然有一天，那牢靠，一瞬间消失了<br>才知道，心愿还未了<br>错过，就万劫不复、永不再来了<br>生命无常，生命无常<br>珍惜实在的拥有<br>一念即起，不等来日，来日不生悔<br>生命无常</p><p>今天便是生命<br>是唯一确知的<br>但今日太短<br>来日也不方长<br>不要寄托太多于明日<br>毕竟、生活<br>只在今日了</p><p>2016年2月19日</p>]]></content>
    
    
    <summary type="html">今天便是生命，是唯一确知的。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>相对喜欢</title>
    <link href="https://weijiajin.com/529e172b3b88/"/>
    <id>https://weijiajin.com/529e172b3b88/</id>
    <published>2020-11-25T15:58:21.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>这个班级，你最美了<br>所以，我默默喜欢你<br>这个学校，你们最美了<br>所以，我也许不是真的喜欢你<br>学校外，又出现了<br>很多“你”，或者比你更好的“你”<br>我怀疑自己，我不喜欢你<br>脱离那个小集体，你不再耀眼<br>我也再也看不到你，也没有想你<br>现在，这个班级<br>你是，虚无缥缈的<br>也只是我无聊时的慰藉<br>我不喜欢了，个个<br>但我也不喜欢其她<br>我喜欢以后会再次相遇的“你”</p><p>2016年2月19日</p>]]></content>
    
    
    <summary type="html">你是，虚无缥缈的，也只是我无聊时的慰藉。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lizhu" scheme="https://weijiajin.com/blog/tags/lizhu/"/>
    
  </entry>
  
  <entry>
    <title>岁月</title>
    <link href="https://weijiajin.com/2227d5f2640e/"/>
    <id>https://weijiajin.com/2227d5f2640e/</id>
    <published>2020-11-25T15:56:42.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>回眸处，是一段葱绿葱绿的时光<br>潭水一样的宁静，又青草一样的蓬勃<br>那是一段悠长的少年时光<br>沉湎于青涩的时光<br>那些美妙，带着浓浓的青涩味道<br>将我的少年岁月浸染<br>有着与众不同的意味<br>每每回忆，内心充满感激<br>那个少年的人呀<br>心儿无着无落，他感激文字<br>那些青涩，也化作一些碎碎的句子<br>化作在了一片薄薄的纸张上<br>一首又一首的<br>少年写的满心欢喜又沉醉<br>哪里嫌累<br>一直喜欢你和文字<br>我看一处深谷碧潭<br>看一丛篱下白菊<br>看春水涣涣处云生<br>看青草离离处鸟飞<br>单调无聊的长路行走中<br>再漫长，与你度过，个个</p><p>2016年2月19日</p>]]></content>
    
    
    <summary type="html">回眸处，是一段葱绿葱绿的时光，潭水一样的宁静，又青草一样的蓬勃。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lizhu" scheme="https://weijiajin.com/blog/tags/lizhu/"/>
    
  </entry>
  
  <entry>
    <title>等的远方人</title>
    <link href="https://weijiajin.com/06f83907f73c/"/>
    <id>https://weijiajin.com/06f83907f73c/</id>
    <published>2020-11-25T15:54:30.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>现在，不再依恋她们，自己轻松。我想来之前的我真是幼稚，但是我还没长大，我还在成长。我只是又看了看爱情，觉得往后推迟那么几年才是对的。所以我看现在的她们，也是无所谓的，满不在乎的。毕竟，你们与我无关。远方人，才是我的宿命。只是还要等那么几年，或几十年。</p><p>2016年2月15日</p>]]></content>
    
    
    <summary type="html">我看了看爱情，只好又往后推迟。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>只恐夜深花睡去，故烧高烛照红妆</title>
    <link href="https://weijiajin.com/31fe5c82d63f/"/>
    <id>https://weijiajin.com/31fe5c82d63f/</id>
    <published>2020-11-25T15:52:54.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>只恐夜深花睡去，故烧高烛照红妆。且让她睡去，明朝醒来，又可开得一片春天！</p><p>2016年2月16日</p>]]></content>
    
    
    <summary type="html">只恐夜深花睡去，故烧高烛照红妆。且让她睡去，明朝醒来，又可开得一片春天！</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>放下</title>
    <link href="https://weijiajin.com/79dddbec45d0/"/>
    <id>https://weijiajin.com/79dddbec45d0/</id>
    <published>2020-11-25T15:51:48.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>分开已经很久了，那次匆匆别后，我渐渐淡了你的模样，你的声音。现在，你的存在仅仅告诉我，那么一个曾经。我们不痛不痒，平淡地经历了青春。</p><p>又是一年春节，你我都会到了这起点。多年了，好像对你依旧存有念想。无所谓的向你发了一个信息，一个我年少时的夙愿。我也只是想陪你看场电影了,没有其他。我仅是你的老友，你是我多年未了的心结。</p><p>你知不知道刚开始的答应，我多么欣喜，我觉得那一个我触到了爱情。可后来，你步步推脱，我心伤。却依然强做，我不在乎。我没事。那也好的之类。</p><p>我已经放下，对你说“结束后，告诉一声”，只是之后你什么都没说。我知道，我那么的无力，我于你，不算什么。你该会有你的理由，你的生活。我何苦多情，何必让自己一副媚态！本来就不该这样。一切只是我想错了，换句话说，一开始我就输了。</p><p>我尽量不要自己想起你，这个假期真的没有在想任何人。我也对你们，不在乎了。</p><p>你那天说，要和我看电影，我想去的。又想了想，我们还是，就不如不见。</p><p>因为我们早就已经步入了不同的世界，不一样的圈子。不可能，是这个世界给我们的箴言。</p><p>当初的誓言，我已经违背。你也不要还以为我是那个我。现在的我，除了自己，你们我都不在乎。</p><p>没有意思，起码我觉得还小。现在的爱情对我来说，没有意思。只是在浪费青春而已。我想做的只是让自己过上更好的生活。你可以说我自私。但我是在成长。我从现实中看到了未来我的爱情。或者未来我的爱情，必将来自现实。</p><p>2016年2月17日</p>]]></content>
    
    
    <summary type="html">一个我年少时的夙愿，我也只是想陪你看场电影了,没有其他。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>陪伴</title>
    <link href="https://weijiajin.com/0af15d25b53b/"/>
    <id>https://weijiajin.com/0af15d25b53b/</id>
    <published>2020-11-25T15:18:02.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>处在这个世界，有了朋友才感觉自己的存在。而一个人的时候，你需要爱情才不觉得孤独。</p><p>但是有些时候你会觉得，自己可以永远一个人，不需要友情和爱情。这个时候，你可能会以为自己长大了，其实自己还是幼稚的。没有朋友，你在外的孤独，会让你陷入深渊，你会失去自信，你会怀疑这个世界。你开始抱怨命运不公。没有爱人，在内你永远是一个人，没有人分担你的忧愁。所有的所有，你必须在黑夜里一个人承受，这是十分残酷的。每个人都想找个心灵伴侣，让自己不再孤独。找对了还好，找错了你会更痛苦。朋友就没有太多要求，只需倾听，分享就行了。在外一起聊的开心，玩也不用拘束。好一点的朋友，也会像爱人一样，让你觉得自己不是一个人在生活。一个人生活，暂时性的利于自己心灵的平和与调整。但不可长久的一个人生活。人之所以为人，是要有社交的。要有自己的圈子，有自己的追求。志同道合的人也会最终走到一起，成为朋友或恋人。</p><p>我今天生日，只是几个朋友一起吃些东西就觉得很开心。此时我没有恋人，也不想。就觉得朋友在一起也很幸福。但只是在外。现在我回到家里，才发现，我又是一个人了。我想，再过十年的短暂的一个人生活，我要有个伴侣。有个和我一起睡觉，一起起床，和我志同道合的人。这个人，会是我永远的爱人。另一个我，互补的我。<br>这样想来，我将来有了友情和爱情，对了还有亲情。那我便是幸福的吧。于外，于内，我有了依附。我却也不能忘了一个人独处，这是十分必要的。</p><p>友情，爱情，亲情。与这密切相关的便是自己的心情。前面的好，心情也好曼妙。也就应了哪句“人生多美好”！</p><p>是的！“人生多美好”！</p><p>2016年2月15日</p>]]></content>
    
    
    <summary type="html">处在这个世界，有了朋友才感觉自己的存在。而一个人的时候，你需要爱情才不觉得孤独。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>你以为</title>
    <link href="https://weijiajin.com/cada305fa86c/"/>
    <id>https://weijiajin.com/cada305fa86c/</id>
    <published>2020-11-25T14:52:00.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>没那么爱你，只是有个位置，我真的不愿意空缺，我伪装的多么爱你，好像会充实了些。其实呢，虚荣永远带来不了幸福，就像灯再亮，也比不过太阳，甚至还不如月亮。我爱你，我不爱你。爱如果这样，那不如喜欢算了。我说一身轻松，而却心事重重。最后又是这样，不如本来的模样。生悔了，也迟了，也不迟。又说重新来过，实际上，重复来过，荒唐！你的心决定你，该如此，无所谓机会，也就不这么荒唐了！</p><p>2015年12月18日</p>]]></content>
    
    
    <summary type="html">爱如果这样，那不如喜欢算了。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>怜香惜玉</title>
    <link href="https://weijiajin.com/2bbb6862fb71/"/>
    <id>https://weijiajin.com/2bbb6862fb71/</id>
    <published>2020-11-25T14:49:02.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>怜香惜玉，你总用这点，败了多少人。我知道你是在利用我们的心，一颗颗怜香惜玉的心。一次次我们依你，从你。只有我一人质疑了你，他们还是在鼓里。我似乎看到了些东西，你那颗渴望，开朗的心。似乎你很单纯，大方，不拘小节，活泼。但一切的一切，我看到了你一直向上爬的心，谁能让你更高，你依附着谁。但，你还是不错的，至少善良，美丽，有时候啊装生气的时候又是很可爱的。我说的问题，太正常不过了，也不是问题了，你们都成了一样了。该比较其他的了。比如你们的样子。不比内心吧！</p><p>2015年11月18日</p>]]></content>
    
    
    <summary type="html">怜香惜玉，你总用这点，败了多少人。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lizhu" scheme="https://weijiajin.com/blog/tags/lizhu/"/>
    
  </entry>
  
  <entry>
    <title>真正的爱</title>
    <link href="https://weijiajin.com/85b8f607bcad/"/>
    <id>https://weijiajin.com/85b8f607bcad/</id>
    <published>2020-11-25T14:46:52.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>年少时的爱情，坚持到最后，纵还是很好。但当面对现实，谈婚论嫁，涉及两个家庭时，各种各种问题扑面而来，脆弱的爱情也许就在这个时候死亡。坚强，深切，热烈的会挺过这关。但琐碎的生活其实更是考验。真正的爱，我觉得，所谓的生活，所谓的现实，所谓的琐碎，只会让这爱更深烈。如果不是，只能说，你还是爱着自己。</p><p>2015年11月6日</p>]]></content>
    
    
    <summary type="html">只能说，我还是爱着自己。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>不完美的爱情</title>
    <link href="https://weijiajin.com/78613abef607/"/>
    <id>https://weijiajin.com/78613abef607/</id>
    <published>2020-11-25T14:43:47.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>突然想到一生一世的一句话：这些都不是我想要的，我想要的就是和你在一起。我一想到这句话，紧接着就是女主高圆圆的泪眼，虽然那一刻她是幸福的。我总是因为那个结局，自己感伤。本是幸福的，我却感受不了。我被那个结局伤的太深了，失去了感受幸福的标度。假如换个结尾，我也许想到了，我会欣喜。但是，更重要的是，如果不是那个结尾，我该早就忘了那个故事，即使那爱情很美。我永远地记住了这个爱情，因为她的不完美。完完美美的捕获了我的心。我以后的爱情，要是什么样。如果要的话，我愿一人承受。</p><p>2015年11月4日</p>]]></content>
    
    
    <summary type="html">这些都不是我想要的，我想要的就是和你在一起。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>心情</title>
    <link href="https://weijiajin.com/47145f7b5975/"/>
    <id>https://weijiajin.com/47145f7b5975/</id>
    <published>2020-11-25T14:41:39.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>今天，突然又想到你略黑的笑脸，有那么一种感觉，就是我爱你了，不像之前的喜欢。觉得我多了一份责任。觉得自己现在像个男人一样爱上了一位女人。@嘘！安静点</p><p>2015年10月28日</p>]]></content>
    
    
    <summary type="html">嘘！安静点</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>往前</title>
    <link href="https://weijiajin.com/c58d833fe6e9/"/>
    <id>https://weijiajin.com/c58d833fe6e9/</id>
    <published>2020-11-25T14:40:22.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>重新审视了自己，觉得现在的我，还完成不了最普通的生活。何以谈爱情与幸福？何以谈尊严与骄傲？自己不要现在停了脚步，只当现在，是黑夜，只顾着往前。</p><p>2015年6月6日</p>]]></content>
    
    
    <summary type="html">重新审视了自己，觉得现在的我，还完成不了最普通的生活。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>时候</title>
    <link href="https://weijiajin.com/32fd205d2b9e/"/>
    <id>https://weijiajin.com/32fd205d2b9e/</id>
    <published>2020-11-25T14:39:02.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>现在的沉默，只是因为我们还没有进入彼此的生活，终有一天我们会互相了解，会相知，会在一起，我们会发现我们当初的抉择是对的，因为我们很快乐。当然，这一切需要时间慢慢沉淀。</p><p>2015年8月8日</p>]]></content>
    
    
    <summary type="html">现在的沉默，只是因为我们还没有进入彼此的生活，终有一天我们会互相了解，会相知，会在一起，我们会发现我们当初的抉择是对的，因为我们很快乐。当然，这一切需要时间慢慢沉淀。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>奢侈</title>
    <link href="https://weijiajin.com/b25bebfb6d78/"/>
    <id>https://weijiajin.com/b25bebfb6d78/</id>
    <published>2020-11-25T14:37:15.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>我觉得，我们之间能说的还是太少，不知道如何与你沟通才是最好，我一直想和你畅谈，却从未有过一次长谈，我着急，着急怕就此失去你，怕就这样彼此厌倦，我不敢再往下想。我想改变，却一直未变。现在懂了，我不必过于着急，日后若能与你在一起，会发现，现在的沉默是一种奢侈。</p><p>2015年8月16日</p>]]></content>
    
    
    <summary type="html">我一直想和你畅谈，却从未有过一次长谈。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>逝去的青春</title>
    <link href="https://weijiajin.com/27fbb3bf254c/"/>
    <id>https://weijiajin.com/27fbb3bf254c/</id>
    <published>2020-11-25T14:21:31.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>一直想提笔写下我们的故事，却迟迟下不了笔，我怕，怕写不好，枉经历了那片时光，我们故事过于美好，我不知如何开始，一切的文字却又显得平庸。也许是我们的故事太乱，我一个人不足以去回忆，毕竟那片时光是我俩一起经历的，我怎么能够单独去回忆？我想，日后若能和你回忆当初多好，一起想我们的爱恋，想你我青春的蠢，将我们曾经的点点滴滴，用文字镌刻。我又想，若你我终究无缘，我也只能一个人，一个人去写下这青春不完整的篇章，写下我残缺的回忆，给自己一个交代，不让多年对你的思念和你我的曾经消尽。是为了你，更为了弥补我逝去的青春。</p><p>2015年10月17日</p>]]></content>
    
    
    <summary type="html">我又想，若你我终究无缘，我也只能一个人，一个人去写下这青春不完整的篇章。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>小猪</title>
    <link href="https://weijiajin.com/6f3d667943e0/"/>
    <id>https://weijiajin.com/6f3d667943e0/</id>
    <published>2020-11-25T14:19:36.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>你是我的秘密小瓶<br>我有什么话总想到给听<br>也许有一天<br>你会把它打开<br>发现里面只有爱情</p><p>2015年10月16日</p>]]></content>
    
    
    <summary type="html">你是我的秘密小瓶，我有什么话总想到给听。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>巧遇雨天</title>
    <link href="https://weijiajin.com/deb2e0164f14/"/>
    <id>https://weijiajin.com/deb2e0164f14/</id>
    <published>2020-11-25T14:17:42.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>相遇在雨天，雨丝仿佛将我带入从前和你的时光一切的情景有点神似，只是这次，你我淡褪了稚嫩，看见彼此各自的变化，只是微笑，你的微笑、那么纯美、动人，和你昔日的魅力一样，再一次触动了我的心弦，那种感觉隔了很久又涌上心头，你的面庞、你的微笑、眼神透出的妖娆，此生不想忘，不会忘，不敢忘。</p><p>2015年10月17日</p>]]></content>
    
    
    <summary type="html">那种感觉隔了很久又涌上心头，你的面庞、你的微笑、眼神透出的妖娆。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>没有更</title>
    <link href="https://weijiajin.com/affcf0ca0e44/"/>
    <id>https://weijiajin.com/affcf0ca0e44/</id>
    <published>2020-11-25T14:16:26.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>曾以为，彼此不会再见。但谁当时又想过，许多年以后，我们终究还是念念不忘彼此，一直想和你来一场纯美的邂逅，还是充满了一些尴尬，可能是因为隔了太久，但我并不在乎，我相信时间终究还是会让彼此坦然相对，让你我心相印，这便是生活。你爱我，我也爱你，没有更。</p><p>2015年10月17日</p>]]></content>
    
    
    <summary type="html">你爱我，我也爱你，没有更。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>w7</title>
    <link href="https://weijiajin.com/f16a9bd49a7e/"/>
    <id>https://weijiajin.com/f16a9bd49a7e/</id>
    <published>2020-11-25T14:12:39.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>我以为，只要绝口不提，只要让日子继续地过去，你就终于，终于会变成一个，古老的秘密。可是，不眠的夜，仍然太长，而，我的悲伤在这不眠的夜终于再也掩饰不住。</p><p>2015年10月17日</p>]]></content>
    
    
    <summary type="html">绝口不提，让日子继续地过去</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="w7" scheme="https://weijiajin.com/blog/tags/w7/"/>
    
  </entry>
  
  <entry>
    <title>沉默</title>
    <link href="https://weijiajin.com/cf2bf527ab1d/"/>
    <id>https://weijiajin.com/cf2bf527ab1d/</id>
    <published>2020-11-25T14:10:51.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>遇见你时的沉默，只是强压下自己的思念，想把要说的话，深深的埋在心里，慢慢地编织着，待到日后与你一起时，再细细的说给你听，说到老。</p><p>2015年10月16日</p>]]></content>
    
    
    <summary type="html">遇见你时的沉默，只是强压下自己的思念，想把要说的话，深深的埋在心里，慢慢地编织着，待到日后与你一起时，再细细的说给你听，说到老。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>情书</title>
    <link href="https://weijiajin.com/5d137ae5066d/"/>
    <id>https://weijiajin.com/5d137ae5066d/</id>
    <published>2020-11-25T14:06:07.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>你是否知道<br>有一位男孩的目光<br>不远不近<br>却一直在守望</p><p>你明媚的笑颜<br>便是他心中倾城的暖<br>他最喜，你那柔情的眼睛<br>那么美，浸着诗意</p><p>于他的记忆中<br>你就是唯美的丁香<br>静静地开在成长的路畔<br>未曾凋谢</p><p>他最喜看你在楼梯角落<br>那洁嫩的脸庞<br>只是余光略过<br>心里却盈满了欢喜</p><p>如果那儿不见了你<br>他会着急，担心<br>会感伤，带着忧虑<br>想着，你会在哪里</p><p>他还喜，放学路上跟在你身后<br>为多看一眼，虽然只是背影<br>他还喜，下课，假装路过你们班<br>为了你微笑的侧脸，明媚，温暖</p><p>你说，多么美好的年月，喜欢你却不告知<br>他在自己梦中慢慢睡着</p><p>2015年3月20日</p>]]></content>
    
    
    <summary type="html">只是余光略过，心里却盈满了欢喜。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lina" scheme="https://weijiajin.com/blog/tags/lina/"/>
    
  </entry>
  
  <entry>
    <title>不该</title>
    <link href="https://weijiajin.com/b067881ed6e1/"/>
    <id>https://weijiajin.com/b067881ed6e1/</id>
    <published>2020-11-25T13:56:13.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>你不该回眸<br>你那一笑，倾倒了我一片城<br>我不该抬头<br>一次抬头，成了我一辈子的羁绊</p><p>2015年10月13日</p>]]></content>
    
    
    <summary type="html">我不该抬头，一次抬头，成了我一辈子的羁绊。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>祝福伏留与你</title>
    <link href="https://weijiajin.com/61a2f525d784/"/>
    <id>https://weijiajin.com/61a2f525d784/</id>
    <published>2020-11-25T13:33:42.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>你，伏留，我，都喜欢文字，我也不知道会喜欢多久，只愿走的远一些。那午夜我经历的事过于荒唐，我真的真的说不太清，这种事发生几率，为零一点也不为过。也许这就是缘分吧，有时候巧合不一定是巧合，缘深缘浅，早有分晓。那晚种种，我想我也许不会忘，多年以后，回忆起来会是什么感觉呢，真的会很不一样吧，应该会很甜，很美吧！不得不说我们青春真的很疯狂，你和伏留一起浪吧，但一定要记住哦，尽量走的远些，带上我的祝福！</p><p>2015年10月13日</p>]]></content>
    
    
    <summary type="html">那午夜我经历的事过于荒唐。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="houtongtong" scheme="https://weijiajin.com/blog/tags/houtongtong/"/>
    
  </entry>
  
  <entry>
    <title>结束</title>
    <link href="https://weijiajin.com/19283533d179/"/>
    <id>https://weijiajin.com/19283533d179/</id>
    <published>2020-11-25T13:30:30.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>无意进入了你的空间，看到了你现在的生活，发现你早已变得成熟，早已步入了这个所谓的社会，可是我呢，还是这么幼稚，我苦笑我的痴想，苦笑曾经的誓言。我还在奋斗，我的生活不知何时与你有了那么远的距离，但我知道为了自己我必须很努力，即使我现在对以后有点迷茫，但这是对的方向。太久，隔阂太深，不得不面对。也许，就像你说的一样：做个好朋友就好。可能这就是结束吧！</p><p>2015年10月13日</p>]]></content>
    
    
    <summary type="html">不得不面对，也许，就像你说的一样：做个好朋友就好。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>诗文</title>
    <link href="https://weijiajin.com/516b28067fef/"/>
    <id>https://weijiajin.com/516b28067fef/</id>
    <published>2020-11-25T13:26:42.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>诗文，其实是你<br>为你写诗，为你痴<br>即使我不会。<br>只是为了不辜负那句喜欢你的诺言<br>我愿意<br>感谢佛让我遇见你<br>感谢青春有你<br>写于没你<br>的那些日子<br>Be missing and loving you<br>作谴自己，无聊，小小的抒发一下<br>内心的真实感受</p><p>2015年10月13日</p>]]></content>
    
    
    <summary type="html">诗文，其实是你。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="nishiwen" scheme="https://weijiajin.com/blog/tags/nishiwen/"/>
    
  </entry>
  
  <entry>
    <title>感心</title>
    <link href="https://weijiajin.com/a552b3523a83/"/>
    <id>https://weijiajin.com/a552b3523a83/</id>
    <published>2020-11-25T13:24:09.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>那天我们久别的初次见面，互相端详各自的变化，你说，我话少，有点老实。我想：你也一样，你眼神中的妖娆多年未变，虽然我已经变得狂妄不羁，但那颗心，依然爱你。我没说出口。你又说了一句：你话少，我也不喜欢讲很多话，这可怎么办呢？我笑了，笑着回答：没事的。我笑，笑这不是问题的问题，我知道这问题只会在日后被渐渐淡忘。因为那感心的感觉，让我知晓，你是对的人。</p><p>2015年10月13日</p>]]></content>
    
    
    <summary type="html">那感心的感觉，只会在日后被渐渐淡忘。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>尊重</title>
    <link href="https://weijiajin.com/fd0ea56c3bc9/"/>
    <id>https://weijiajin.com/fd0ea56c3bc9/</id>
    <published>2020-11-25T13:05:15.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢你那是很久以前的事了，每个人都是平等的，没有必要去在意一个从来没有在意过我的人。不管怎样，要有尊严，无论是活是死。你若冷眼相待，我便不再看你的眼睛。你，是过客。我，连是你的路人都不想。不认识你，就最好。也不会有现在的烦恼。如从前，一身轻松，无牵无挂，回到从前，体悟幸福与纯真。</p><p>2015年10月8日</p>]]></content>
    
    
    <summary type="html">那是很久以前的事了，从前，一身轻松，无牵无挂。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>暗恋的美好</title>
    <link href="https://weijiajin.com/b56dc577080a/"/>
    <id>https://weijiajin.com/b56dc577080a/</id>
    <published>2020-11-25T13:01:25.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>我喜欢你<br>将你放在心里最妥贴的地方<br>不敢惊动你<br>也许，这就是暗恋的美好<br>你在我心中永远都那个模样、那么美<br>没有一点不好<br>久而久之<br>你成了我心中的一份信仰，一份依靠<br>我喜欢你，成了我一辈子的骄傲</p><p>2015年3月14日</p>]]></content>
    
    
    <summary type="html">喜欢你,将你放在心里最妥贴的地方.</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lina" scheme="https://weijiajin.com/blog/tags/lina/"/>
    
  </entry>
  
  <entry>
    <title>只配</title>
    <link href="https://weijiajin.com/14ffe00834a8/"/>
    <id>https://weijiajin.com/14ffe00834a8/</id>
    <published>2020-11-25T12:59:27.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢你，那么久了<br>发现自己，只配远远的望着你<br>即使遇见，也不再有眼神的交集<br>喜欢你，这件事，我真的好无力，真的<br>估计我也只配单方面的喜欢了<br>不在去想，关于你</p><p>2015年5月15日</p>]]></content>
    
    
    <summary type="html">喜欢你，这件事，我真的好无力，真的。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lina" scheme="https://weijiajin.com/blog/tags/lina/"/>
    
  </entry>
  
  <entry>
    <title>不配</title>
    <link href="https://weijiajin.com/08d0e13c3591/"/>
    <id>https://weijiajin.com/08d0e13c3591/</id>
    <published>2020-11-25T12:58:07.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>一直太容易喜欢<br>见一个女孩，有一点美好，就喜欢<br>所以我喜欢过，喜欢好多女生</p><p>做很多事情，不能如一<br>半途中，我就厌了<br>爱情我是那么的憧憬<br>觉得这是我未来的庄严<br>但是我还是不懂自己<br>能否爱你到老</p><p>于我，只不想太多重复生活<br>生活每天该有不同的名字<br>有新意，有趣</p><p>爱情的爱对方如一，不变<br>时间久了，估计我会厌她<br>会去找新的爱情<br>这样，现在我看来，很不好<br>可，这便可能是未来的我</p><p>爱情也会荒芜<br>于我，也许荒的更早，我这样想</p><p>所以，不曾对谁许下誓言<br>怕伤害别人<br>愧疚自己</p><p>常常想，<br>我这样的人<br>不配拥有爱情</p><p>2015年4月27日</p>]]></content>
    
    
    <summary type="html">常常想，我这样的人，不配拥有爱情。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>青春</title>
    <link href="https://weijiajin.com/c770b0e39ca0/"/>
    <id>https://weijiajin.com/c770b0e39ca0/</id>
    <published>2020-11-25T12:55:34.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>不得不说青春是一本太过仓促的书<br>每一页都有着自己铭心刻骨的回忆<br>有自己年少轻狂<br>你们像那夹在书里的银杏叶<br>记录着每段让人难以忘怀的感动<br>每片泛黄的银杏叶些许代表不同的回忆<br>但都那般美好</p><p>2015年9月28日<br>某天早晨晨读有感</p>]]></content>
    
    
    <summary type="html">不得不说青春是一本太过仓促的书</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
  </entry>
  
  <entry>
    <title>最初的喜欢</title>
    <link href="https://weijiajin.com/db64c19f9f06/"/>
    <id>https://weijiajin.com/db64c19f9f06/</id>
    <published>2020-11-25T12:53:21.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>年少时，喜欢调戏女生<br>下课，便是你追我躲<br>那时并不懂得什么喜欢<br>只是单纯，便很开心</p><p>第一次，收到了一封情书<br>附着有一条手链，很精致<br>装在一个盒子里，也很精致</p><p>记得那个女孩<br>是我一直打闹，斗嘴的<br>叫席可，挺好听的，名字<br>现在回忆起来，又生了怀念</p><p>戏剧的是，此时还有一个女孩<br>王倩，我喜欢的</p><p>之后我便忘却了可<br>又后来和王倩也不常联系<br>现在，不记得什么了</p><p>估计，那盒子里面满满的都是纯涩<br>真的，现在回想起来<br>对不起，席可<br>是我破坏了那一盒子的美好<br>那时，那刻，只属于最初，属于年少</p><p>第一次，感受被喜欢的幸福<br>至今仍是那次<br>之后从未被喜欢<br>一直喜欢别人</p><p>2015年9月26日 </p>]]></content>
    
    
    <summary type="html">她叫席可，挺好的。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="likeu" scheme="https://weijiajin.com/blog/tags/likeu/"/>
    
  </entry>
  
  <entry>
    <title>写诗</title>
    <link href="https://weijiajin.com/2a20e192e208/"/>
    <id>https://weijiajin.com/2a20e192e208/</id>
    <published>2020-11-25T12:28:34.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>这个春天<br>想写些诗<br>不关于你</p><p>夜渐深了，我渐醒了<br>春渐深了，花香渐浓了<br>喜欢你的感觉渐淡了<br>觉得不会再爱了</p><p>所以，想写诗<br>将喜欢的爱情融入诗中<br>不喜欢的统统都丢掉<br>让不羁在诗中流放<br>在风中狂欢</p><p>一直信任文字，信任诗<br>诗不会背叛，永远那么坚守纯情<br>诗是不会变的，自由的<br>写诗，是一种信仰<br>关于自由不变<br>不关于你</p><p>2015年9月26日</p>]]></content>
    
    
    <summary type="html">这个春天，想写些诗，不关于你。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="poems" scheme="https://weijiajin.com/blog/tags/poems/"/>
    
  </entry>
  
  <entry>
    <title>大学</title>
    <link href="https://weijiajin.com/654291a989c7/"/>
    <id>https://weijiajin.com/654291a989c7/</id>
    <published>2020-11-25T12:24:05.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>第一次接触大学<br>提前了些<br>真正的战斗并未开始<br>我却提前在享受这自由<br>该不该努力<br>该不该拼搏<br>为了未来的大学<br>为了这自由<br>我这样问自己</p><p>2015-09-19<br>高三之前到南师大参加化学竞赛所写</p>]]></content>
    
    
    <summary type="html">真正的战斗并未开始，我却提前在享受这自由。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="university" scheme="https://weijiajin.com/blog/tags/university/"/>
    
  </entry>
  
  <entry>
    <title>一首小情诗</title>
    <link href="https://weijiajin.com/f759e8a7a8f7/"/>
    <id>https://weijiajin.com/f759e8a7a8f7/</id>
    <published>2020-11-25T12:21:34.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<h3 id="遇见（一）"><a href="#遇见（一）" class="headerlink" title="遇见（一）"></a>遇见（一）</h3><p>不经意间，与你的相遇<br>我再也压抑不住想你的思绪<br>那天，<br>我感到我的多余，于是默默离开<br>只是无奈，<br>心中忧虑，只是想你<br>唉—，还是不能懂你<br>没关系，我依旧只喜欢你<br>爱与喜欢，不过是一场自顾自的执着<br>但我喜欢你，会到永远<br>这是誓言——仅仅对我自己许下的</p><p>愿：<br>面朝大海，<br>春暖花开。<br>你若安好，<br>便是晴天。</p><p>2014年4月11日晚</p>]]></content>
    
    
    <summary type="html">你若安好，便是晴天。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="nishiwen" scheme="https://weijiajin.com/blog/tags/nishiwen/"/>
    
  </entry>
  
  <entry>
    <title>那年初一</title>
    <link href="https://weijiajin.com/a96e6be7ae7b/"/>
    <id>https://weijiajin.com/a96e6be7ae7b/</id>
    <published>2020-11-25T11:33:30.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>那时我喜欢她，她也许也是喜欢我的。免不了离别，很久了，又回来，一切的一切没变，我觉得她也没变。我们在那个地方玩了一会，其实我去看奶奶，绕了路，但也算偶遇。之后，从奶奶家回来，依旧绕路。回来时，看见她的闺蜜，她却不在。当时，我记得她闺蜜在荡秋千，我骑自行车过去。随便说了几句，她闺蜜突然说告诉我一个秘密。她问：你觉不觉得刚刚她说到xx的名字时很紧张？但你好像也认识xx？想了一下，的确。她又说：其实，他也喜欢她。已经追了很久了。</p><p>我听后笑笑说：没什么，呵呵。</p><p>后来我离开，该回家了，天快黑了。我在路上，拐进了一条小路，那条路沿着一条河，很黑，很曲，很颠。不知道什么时候我以泪流满面。离家越来越远，我当时真的真的不知道，我为什么哭泣，为什么那么作践自己。毕竟，这真的没什么的。回到家时已经很晚了。妈妈问我为什么眼睛那么红。我没有说话。然后妈妈就开始怪我奶奶，我还没说话。一下子冲进妈妈怀中，又大哭起来。妈妈还在怪我奶奶。我不知道伤心什么，就是哭了。那年，我初一。</p><p>2015年9月19日</p>]]></content>
    
    
    <summary type="html">那时我喜欢她，她也许也是喜欢我的。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>家</title>
    <link href="https://weijiajin.com/fa991d77438d/"/>
    <id>https://weijiajin.com/fa991d77438d/</id>
    <published>2020-11-25T11:31:41.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>回家的感觉<br>就像爱情<br>我的家就是我的爱人<br>我爱的人才能给我以温暖<br>我爱家，家爱我</p><p>2015年9月19日</p>]]></content>
    
    
    <summary type="html">我的家就是我的爱人，我爱家，家爱我。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="home" scheme="https://weijiajin.com/blog/tags/home/"/>
    
  </entry>
  
  <entry>
    <title>大方的微笑</title>
    <link href="https://weijiajin.com/65f7451823c5/"/>
    <id>https://weijiajin.com/65f7451823c5/</id>
    <published>2020-11-25T11:25:58.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>中午，下楼时恰好在你后面，只看了你一会，一种伤感突然涌进心头，就是那种感觉自己很无能，很不配你，又想想以前对你说的喜欢，就悄悄从旁路离开，怕你看见这样颓败的我。路上，想着以后一定要努力，至少多年后，再遇见你时，敢喊出你的名字，敢大方地微笑。</p><p>2015年9月16日</p>]]></content>
    
    
    <summary type="html">想着以后一定要努力，至少多年后，再遇见你时，敢喊出你的名字，敢大方地微笑。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lina" scheme="https://weijiajin.com/blog/tags/lina/"/>
    
  </entry>
  
  <entry>
    <title>过客</title>
    <link href="https://weijiajin.com/194be5da681c/"/>
    <id>https://weijiajin.com/194be5da681c/</id>
    <published>2020-11-25T11:19:28.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>有一位女孩在我记忆里成了我胸口的朱砂痣，那晚，她是那么的美和纯洁，我现在真的很想她。虽然没经历过什么，但第一眼我的心被俘虏，可以说我喜欢上她了。但她是不属于我的，之后就不再多想，只有梦里，见她微笑，替她开心了。再后来，淡了，不想了，也梦不到了。但现在我又想起她了，好久好久没见她了。</p><p>2015年9月16日</p>]]></content>
    
    
    <summary type="html">现在我又想起她了，好久好久没见她了。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="houtongtong" scheme="https://weijiajin.com/blog/tags/houtongtong/"/>
    
  </entry>
  
  <entry>
    <title>喜欢</title>
    <link href="https://weijiajin.com/b3a06851882a/"/>
    <id>https://weijiajin.com/b3a06851882a/</id>
    <published>2020-11-25T11:06:32.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>喜欢你，很久了。</p><p>想到你，我的情感变得丰富，特别是见到你，你的目光在别处，我们不曾对视。但是，靠近你，我呼吸变得压抑，<br>双手忘了往哪儿放，心变得那么冲动，却佯装淡定，细细地端详着你，只是余光略过，赞叹好美，心中盈满了欢喜。</p><p>你留给我的只是一瞬，成了我心中永恒的美丽，我想我不会忘了这种感觉。</p><p>有时候，真想勇敢地去真实地追你，可是，理性告诉我，我得不到什么的。</p><p>我们无所交际，我心无旁贷的喜欢并注视你，可在你眼中我不过是匆匆的路人，关于我你无所知晓；<br>我的面容不过是路人，而你的笑颜是天使；对于你，我注定要仰望，也只能，只有仰望，只怪自己过于卑微。<br>无论怎样，我依旧喜欢你，只是这喜欢带着青春的模模糊糊，隐隐约约的。</p><p>我真的不知道这样单方面的守候，还有多久？你说我会忘了你吗？我想，不会，为什么不会？岁月这么蹉跎？<br>其实我也说不出，只是觉得你是我这段时间感情的全部，这么珍贵的记忆我怎么会忘记，忘了那得有多么对不起<br>现在的自己，对不起想你的艰苦。你说，是吧？我怎么会忘记呢。深夜了，今天就这样吧，还有明天呢。</p><p>2015年4月4日深夜<br>写于好久以前，那个幼稚的男孩，他对一个女生清澈的喜欢。现在距离远了，我也淡了，像舞倦的蝴蝶，我有点累了</p><p>2020年2月10日傍晚<br>恍然间已过了近5年的光阴，不经感叹，时间过的真快呀！遗憾的是，再读这篇心情日记时，很多美好的记忆变得模糊不清。</p>]]></content>
    
    
    <summary type="html">恍然间已过了近5年的光阴，不经感叹，时间过的真快呀！遗憾的是，再读这篇心情日记时，很多美好的记忆变得模糊不清。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="lina" scheme="https://weijiajin.com/blog/tags/lina/"/>
    
  </entry>
  
  <entry>
    <title>姿态</title>
    <link href="https://weijiajin.com/d69ca68ba714/"/>
    <id>https://weijiajin.com/d69ca68ba714/</id>
    <published>2020-11-24T21:18:30.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>我究竟要以什么样的姿态<br>面对你<br>才觉得，这样很好<br>最好时，想见见你<br>可是<br>你在远方，我在故乡</p><p>等你回来时，我没有任何准备<br>那么慌张<br>躲藏自己<br>怕被你看到不好的地方<br>特别是脸上的伤疮<br>在你面前，我努力留下好的印象</p><p>于是，我时刻提醒自己，要最好<br>认真地等，最好地等<br>等你，等你<br>我在等你</p><p>今天，七夕<br>我虔诚地向神祈祷：<br>当我饱含生命的热情与希望<br>向着阳光生长时<br>能够等到那个爱笑的你</p><p>在我心中，你笑一笑便最美</p><p>我一直以最好的姿态<br>在等你</p><p>2015年9月16日</p>]]></content>
    
    
    <summary type="html">我究竟要以什么样的姿态，面对你，才觉得，这样很好。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>暮然回首</title>
    <link href="https://weijiajin.com/2b9b1d44a455/"/>
    <id>https://weijiajin.com/2b9b1d44a455/</id>
    <published>2020-11-24T21:13:21.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>本是电影里的画面<br>却在这条街戏剧上演<br>是上帝的安排<br>还是神的眷恋<br>也许，还有未断的线</p><p>那天，我疲倦上演<br>充完话费，故意走在街上<br>好久了，好久没走在这条街了<br>走着走着<br>看见一迷人的背影<br>未带眼镜，需凑近<br>怕尴尬，故作无意<br>没太看清<br>人那么多，没太在心<br>刚要擦肩<br>听见我姓名，被叫停<br>细看，略知意，是你<br>怪我，没看清<br>差点错过了你<br>怪你，为何变的那么美丽<br>还是我淡了你<br>总之，充满着惊喜<br>可是，你身边多了一位<br>没事，你我早已无所交际，<br>我让我，不要在心<br>走在你身后<br>看着你的背影<br>不禁打开相机<br>想记录下这最美的背影<br>你突然微笑回首<br>我慌张收起手机<br>去答应你好久的声音<br>那时，无意，冥冥<br>拍下了你，欣喜<br>不是背影，是你回首那刻最美的一滴<br>好久了，好久没见你了<br>这次见你笑，不是在梦里</p><p>太短<br>又要别离<br>再见，下次聊<br>又泛起涟漪<br>你身旁那位<br>是你哥，而不是<br>带着一张你的回首<br>欣喜着<br>梦里依旧</p><p>2015年9月15日</p>]]></content>
    
    
    <summary type="html">好久了，好久没见你了，这次见你笑，不是在梦里。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="wangqian" scheme="https://weijiajin.com/blog/tags/wangqian/"/>
    
  </entry>
  
  <entry>
    <title>期许明天的太阳</title>
    <link href="https://weijiajin.com/fee11d2fc70a/"/>
    <id>https://weijiajin.com/fee11d2fc70a/</id>
    <published>2020-11-24T20:38:27.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>希望我粗粝生活的以后<br>某个偶然，邂逅爱情<br>我定会满心欢喜<br>只幕你而倾<br>骨子里的浪漫主义<br>也会失而又得的逢生</p><p>2019年9月23日<br>我写完关于期许的诗，就开心地入睡了。想着，她呀，她真的太好了。</p>]]></content>
    
    
    <summary type="html">希望我粗粝生活的以后，某个偶然，邂逅爱情，我定会满心欢喜。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="xurong" scheme="https://weijiajin.com/blog/tags/xurong/"/>
    
  </entry>
  
  <entry>
    <title>此刻的美好</title>
    <link href="https://weijiajin.com/456ad0be4ff5/"/>
    <id>https://weijiajin.com/456ad0be4ff5/</id>
    <published>2020-11-24T19:38:27.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>此刻的美好<br>如我，如她，如你<br>时间静止的那一刻<br>和十年前的光景,一般相像<br>她是有喜欢的人的<br>你也是<br>她是我眼里西施<br>也是他们口中我讲述的西施<br>想来，不过是我眼中的虚荣<br>她没有全然不自知的美丽<br>只是我不自知的丑陋<br>我满眼都是最喜的月亮<br>想着，近水楼台先得的便一定是月吗<br>我想以后让月亮奔我而来<br>和小时候一样<br>田边会有跟我走的月亮</p><p>2019年12月30日<br>那是我第一次和她出去玩，那天晚上的一切在我记忆里都很美，就连站台的寒风也不那么刺骨。</p>]]></content>
    
    
    <summary type="html">此刻的美好，如我，如她，如你，时间静止的那一刻，和十年前的光景一般相像。</summary>
    
    
    
    <category term="诗文" scheme="https://weijiajin.com/blog/categories/%E8%AF%97%E6%96%87/"/>
    
    
    <category term="xurong" scheme="https://weijiajin.com/blog/tags/xurong/"/>
    
  </entry>
  
  <entry>
    <title>基于深度学习框架Tensorflow的成绩自动查询</title>
    <link href="https://weijiajin.com/0c01e2dc13e4/"/>
    <id>https://weijiajin.com/0c01e2dc13e4/</id>
    <published>2020-11-24T19:02:37.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>项目地址(包含数据集)：<a href="https://github.com/feelheart7/Python">https://github.com/feelheart7/Python</a><br>项目地址(包含数据集，精简版，由于学校网页失效，精简只有深度学习核心部分)：<a href="https://github.com/feelheart7/tensorflow">https://github.com/feelheart7/tensorflow</a></p></blockquote><h4 id="项目介绍"><a href="#项目介绍" class="headerlink" title="项目介绍"></a>项目介绍</h4><p>当考试结束后，有很多同学想及时知道自己的成绩，由于学校成绩在官网最新更新，其他平台查成绩有很大的延迟，所以迫不及待的同学需要去学校官网的教务处查询，过程操作不是很方便，每次凭运气查成绩。于是通过程序自动化操作，简化成绩查询过程，节省时间，提高效率。</p><h5 id="项目所需知识"><a href="#项目所需知识" class="headerlink" title="项目所需知识"></a>项目所需知识</h5><ul><li>图像数值处理</li><li>深度学习</li><li>tensorflow</li><li>python3.6</li><li>爬虫</li></ul><h4 id="项目优点"><a href="#项目优点" class="headerlink" title="项目优点"></a>项目优点</h4><ul><li>第一次查询全部成绩</li><li>最新成绩通过邮箱通知，最新成绩显示在邮箱标题</li><li>配置简单只需填写 ，学号、密码、和接受通知的邮箱</li></ul><h4 id="项目所需库"><a href="#项目所需库" class="headerlink" title="项目所需库"></a>项目所需库</h4><figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 操作图片模块</span></span><br><span class="line"><span class="title">from</span> <span class="type">PIL</span> <span class="keyword">import</span> Image</span><br><span class="line"><span class="meta"># 第三方OCR调用（识别率不高）</span></span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="meta"># 范围随机模块</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="meta"># 操作系统模块</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="meta"># 矩阵计算与tensorflow（深度学习框架）</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="meta"># 爬虫模拟网页请求模块</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta"># 调用系统浏览器</span></span><br><span class="line"><span class="keyword">import</span> webbrowser</span><br><span class="line"><span class="meta"># 爬取html指定内容</span></span><br><span class="line"><span class="title">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="meta"># 正则模块</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="meta"># smtp邮箱</span></span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="title">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="title">from</span> email.utils <span class="keyword">import</span> formataddr</span><br><span class="line"><span class="meta"># 时间模块，用于延迟</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="meta"># 下载图片模块</span></span><br><span class="line"><span class="title">from</span> typing <span class="keyword">import</span> Any</span><br><span class="line"><span class="title">from</span> urllib.request <span class="keyword">import</span> urlretrieve</span><br><span class="line"><span class="meta"># TF_CPP_MIN_LOG_LEVEL默认值为 0 (显示所有logs)</span></span><br><span class="line"><span class="meta"># 设置为 1 隐藏 INFO logs, 2 额外隐藏WARNING logs</span></span><br><span class="line"><span class="meta"># 设置为3所有 ERROR logs也不显示</span></span><br><span class="line"><span class="title">os</span>.environ[&#x27;<span class="type">TF_CPP_MIN_LOG_LEVEL&#x27;</span>] = &#x27;<span class="number">2</span>&#x27;</span><br></pre></td></tr></table></figure><h4 id="项目难点"><a href="#项目难点" class="headerlink" title="项目难点"></a>项目难点</h4><p>通过深度神经网络的验证码识别，目前我的验证码的识别率为97%，3万图片经过深度神经网络的训练，使用的是Google的神经网络框架tensorflow，如果还想提高识别率也是可以的，可以增加数据集，降低keep_prob的值（拟合度），达到99.9%是没有问题的。</p><blockquote><p>3万张的数据集并不是我手动码的，而是通过最开始我自己人工识别了1000张和我的好朋友刘雪峰200张作为最初数据集，开始训练的识别率只有20%左右，然后写了个函数将识别正确验证码储存，再进行训练，从而增大数据集和提高数据集（当识别率已经很高的时候，错误的图片再进行人工识别在训练可进一步提高识别率）。</p></blockquote><h4 id="多用户使用方法"><a href="#多用户使用方法" class="headerlink" title="多用户使用方法"></a>多用户使用方法</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">info</span> = [&#123;</span><br><span class="line">        <span class="string">&#x27;account&#x27;</span>: <span class="string">&#x27;******,</span></span><br><span class="line"><span class="string">        &#x27;</span>password<span class="string">&#x27;: &#x27;</span>******<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">        &#x27;</span>email<span class="string">&#x27;: &#x27;</span>*****@qq.com<span class="string">&#x27;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        &#123;</span></span><br><span class="line"><span class="string">        &#x27;</span>account<span class="string">&#x27;: &#x27;</span>******</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;***&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;*****@qq.com&#x27;</span></span><br><span class="line">        &#125;]</span><br></pre></td></tr></table></figure><h4 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h4><p><img src="https://s2.ax1x.com/2020/01/31/18SxbR.png" alt="运行结果"></p><h4 id="python源码"><a href="#python源码" class="headerlink" title="python源码"></a>python源码</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 操作图片模块</span></span><br><span class="line"><span class="keyword">from</span> PIL import Image</span><br><span class="line"><span class="comment"># 第三方OCR调用（识别率不高）</span></span><br><span class="line">import pytesseract</span><br><span class="line"><span class="comment"># 范围随机模块</span></span><br><span class="line">import random</span><br><span class="line"><span class="comment"># 操作系统模块</span></span><br><span class="line">import os</span><br><span class="line"><span class="comment"># 矩阵计算与tensorflow（深度学习框架）</span></span><br><span class="line">import numpy as np</span><br><span class="line">import tensorflow as tf</span><br><span class="line"><span class="comment"># 爬虫模拟网页请求模块</span></span><br><span class="line">import requests</span><br><span class="line"><span class="comment"># 调用系统浏览器</span></span><br><span class="line">import webbrowser</span><br><span class="line"><span class="comment"># 爬取html指定内容</span></span><br><span class="line"><span class="keyword">from</span> bs4 import BeautifulSoup</span><br><span class="line"><span class="comment"># 正则模块</span></span><br><span class="line">import re</span><br><span class="line"><span class="comment"># smtp邮箱</span></span><br><span class="line">import smtplib</span><br><span class="line"><span class="keyword">from</span> email.mime.text import MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils import formataddr</span><br><span class="line"><span class="comment"># 时间模块，用于延迟</span></span><br><span class="line">import time</span><br><span class="line"><span class="comment"># 下载图片模块</span></span><br><span class="line"><span class="keyword">from</span> typing import Any</span><br><span class="line"><span class="keyword">from</span> urllib.request import urlretrieve</span><br><span class="line"><span class="comment"># TF_CPP_MIN_LOG_LEVEL默认值为 0 (显示所有logs)</span></span><br><span class="line"><span class="comment"># 设置为 1 隐藏 INFO logs, 2 额外隐藏WARNING logs</span></span><br><span class="line"><span class="comment"># 设置为3所有 ERROR logs也不显示</span></span><br><span class="line">os.environ[<span class="string">&#x27;TF_CPP_MIN_LOG_LEVEL&#x27;</span>] = <span class="string">&#x27;2&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局变量</span></span><br><span class="line">IMAGE_HEIGHT = 22  # 验证码图片高度</span><br><span class="line">IMAGE_WIDTH = 68   # 验证码图片宽度</span><br><span class="line">MAX_CAPTCHA = 4    # 验证码的位数</span><br><span class="line">CHAR_SET_LEN = 36  # 验证码的字符有多少种</span><br><span class="line"><span class="comment"># 验证码图片网址</span></span><br><span class="line">IMAGE_URL = <span class="string">&quot;http://jwfw1.sdjzu.edu.cn/ssfw/jwcaptcha.do&quot;</span></span><br><span class="line"><span class="comment"># 下载验证码图片的数量</span></span><br><span class="line">VERIFICATION_CODE_NUMBER = 10</span><br><span class="line"><span class="comment"># 验证码文件夹与文件绝对存储路径</span></span><br><span class="line">VERIFICATION_CODE_PATH1 = os.path.dirname(__file__) + <span class="string">&#x27;/verification_code_images/&#x27;</span></span><br><span class="line">VERIFICATION_CODE_PATH2 = os.path.dirname(__file__) + <span class="string">&#x27;/verification_code_images/&#123;name&#125;.png&#x27;</span></span><br><span class="line"><span class="comment"># 训练数据集绝对存储路径</span></span><br><span class="line">VERIFICATION_CODE_TRAINING_PATH = os.path.dirname(__file__) + <span class="string">&#x27;/verification_code_training_images/&#x27;</span></span><br><span class="line"><span class="comment"># placeholder 是 Tensorflow 中的占位符，暂时储存变量 X Y ,keep_prob是dropout层保留概率</span></span><br><span class="line">X = tf.placeholder(tf.float32, [None, IMAGE_HEIGHT*IMAGE_WIDTH])</span><br><span class="line">Y = tf.placeholder(tf.float32, [None, MAX_CAPTCHA<span class="number">*C</span>HAR_SET_LEN])</span><br><span class="line">keep_prob = tf.placeholder(tf.float32)</span><br><span class="line"><span class="comment"># 邮箱信息</span></span><br><span class="line">SENDER = <span class="string">&#x27;********&#x27;</span></span><br><span class="line">PASSWORD = <span class="string">&#x27;********&#x27;</span></span><br><span class="line"><span class="comment"># 用户信息</span></span><br><span class="line"><span class="built_in">info</span> = [&#123;</span><br><span class="line">        <span class="string">&#x27;account&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;********&#x27;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="string">&#x27;account&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;********&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;email&#x27;</span>: <span class="string">&#x27;********&#x27;</span></span><br><span class="line">        &#125;]</span><br><span class="line"><span class="comment"># String1为原始成绩,String2为最新成绩。创建方式为这样append防止默认copy（以免浅拷贝）</span></span><br><span class="line">String1 = [[] <span class="keyword">for</span> copy <span class="keyword">in</span> range(len(info))]</span><br><span class="line">String2 = [[] <span class="keyword">for</span> copy <span class="keyword">in</span> range(len(info))]</span><br><span class="line"><span class="comment"># 训练集所有图片list与</span></span><br><span class="line">all_images = os.listdir(VERIFICATION_CODE_TRAINING_PATH)</span><br><span class="line">all_images_size = len(all_images)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载验证码图片安装序号存储图片</span></span><br><span class="line">def download_verification_code():</span><br><span class="line">    # 创建文件夹如果没有</span><br><span class="line">    os.makedirs(VERIFICATION_CODE_PATH1, <span class="attribute">exist_ok</span>=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0, VERIFICATION_CODE_NUMBER):</span><br><span class="line">        urlretrieve(IMAGE_URL, VERIFICATION_CODE_PATH2.format(<span class="attribute">name</span>=i))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成功下载%s张图片！&quot;</span> % VERIFICATION_CODE_NUMBER)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 调用pytesseract整体识别验证码(识别率低)</span></span><br><span class="line">def pytesseract_verification_code():</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(0, VERIFICATION_CODE_NUMBER):</span><br><span class="line">        img = Image.open(VERIFICATION_CODE_PATH2.format(<span class="attribute">name</span>=i))</span><br><span class="line">        char = pytesseract.image_to_string(img, <span class="attribute">config</span>=<span class="string">&#x27;--psm 8&#x27;</span>)</span><br><span class="line">        # psm 各个值的说明</span><br><span class="line">        # 0：定向脚本监测（OSD）</span><br><span class="line">        # 1： 使用OSD自动分页</span><br><span class="line">        # 2 ：自动分页，但是不使用OSD或OCR（Optical Character Recognition，光学字符识别）</span><br><span class="line">        # 3 ：全自动分页，但是没有使用OSD（默认）</span><br><span class="line">        # 4 ：假设可变大小的一个文本列。</span><br><span class="line">        # 5 ：假设垂直对齐文本的单个统一块。</span><br><span class="line">        # 6 ：假设一个统一的文本块。</span><br><span class="line">        # 7 ：将图像视为单个文本行。</span><br><span class="line">        # 8 ：将图像视为单个词。</span><br><span class="line">        # 9 ：将图像视为圆中的单个词。</span><br><span class="line">        # 10 ：将图像视为单个字符</span><br><span class="line">        <span class="built_in">print</span>(i, char)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 二值化分割验证码再调用pytesseract识别验证码(识别率有所提高)</span></span><br><span class="line">def pytesseract_devide_verification_code():</span><br><span class="line">    # 随机读取图片并灰度化</span><br><span class="line">    random_number = random.randint(0, VERIFICATION_CODE_NUMBER)</span><br><span class="line">    img = Image.open(VERIFICATION_CODE_PATH2.format(<span class="attribute">name</span>=random_number)).convert(&#x27;L&#x27;)</span><br><span class="line">    # 二值化:173为我的验证图片有较好的效果的值，不同图片的值不一样，请根据自己验证码图片设置相应的值</span><br><span class="line">    img = img.point(lambda x: 255 <span class="keyword">if</span> x &gt; 173 <span class="keyword">else</span> 0)</span><br><span class="line">    # 分离:crop函数带的参数为(起始点的横坐标，起始点的纵坐标，宽度，高度）</span><br><span class="line">    img1 = img.crop((0 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 1 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    img2 = img.crop((1 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 2 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    img3 = img.crop((2 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 3 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    img4 = img.crop((3 * IMAGE_WIDTH / MAX_CAPTCHA, 0, 4 * IMAGE_WIDTH / MAX_CAPTCHA, IMAGE_HEIGHT))</span><br><span class="line">    # 调用pytesseract识别验证码</span><br><span class="line">    char = pytesseract.image_to_string(img, <span class="attribute">config</span>=<span class="string">&#x27;--psm 8&#x27;</span>)</span><br><span class="line">    char1 = pytesseract.image_to_string(img1, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    char2 = pytesseract.image_to_string(img2, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    char3 = pytesseract.image_to_string(img3, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    char4 = pytesseract.image_to_string(img4, <span class="attribute">config</span>=<span class="string">&#x27;--psm 10&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(char)</span><br><span class="line">    <span class="built_in">print</span>(char1)</span><br><span class="line">    <span class="built_in">print</span>(char2)</span><br><span class="line">    <span class="built_in">print</span>(char3)</span><br><span class="line">    <span class="built_in">print</span>(char4)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"><span class="comment">### 通过tensorflow的CNN(卷积神经网络深度学习后识别验证码,识别率贼高####</span></span><br><span class="line"><span class="comment">################################################################</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取验证码名字和图片（训练数据集）</span></span><br><span class="line">def get_name_and_image():</span><br><span class="line">    # 获取数据集下的所有图片的数组all_images</span><br><span class="line">    # all_images = os.listdir(VERIFICATION_CODE_TRAINING_PATH)</span><br><span class="line">    random_image = random.randint(0, all_images_size - 1)</span><br><span class="line">    # <span class="built_in">print</span> (all_images_size)</span><br><span class="line">    base = os.path.basename(VERIFICATION_CODE_TRAINING_PATH + all_images[random_image])  # 有扩展名</span><br><span class="line">    name = os.path.splitext(base)[0]  # 无扩展名</span><br><span class="line">    image = Image.open(VERIFICATION_CODE_TRAINING_PATH + all_images[random_image])</span><br><span class="line">    image = np.array(image)</span><br><span class="line">    return name, image</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证码名字转变成向量: 不同位数的需要重写这个函数,函数里的数字为ASCII码</span></span><br><span class="line">def name2vec(name):</span><br><span class="line">    vector = np.zeros(MAX_CAPTCHA<span class="number">*C</span>HAR_SET_LEN)</span><br><span class="line">    <span class="keyword">for</span> i, c <span class="keyword">in</span> enumerate(name):</span><br><span class="line">        <span class="keyword">if</span> ord(c) &lt; 58:</span><br><span class="line">            idx = i * 36 + ord(c)-48</span><br><span class="line">            vector[idx] = 1</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            idx = i * 36 + ord(c) - 87</span><br><span class="line">            vector[idx] = 1</span><br><span class="line">    return vector</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向量转名字:注释部分是 最开始的向量 转 名字</span></span><br><span class="line"><span class="comment"># def vec2name(vec):</span></span><br><span class="line"><span class="comment">#     name = []</span></span><br><span class="line"><span class="comment">#     for i, c in enumerate(vec):</span></span><br><span class="line"><span class="comment">#         if c == 1.0:</span></span><br><span class="line"><span class="comment">#             name.append(i)</span></span><br><span class="line"><span class="comment">#     for i in range(0, 4):</span></span><br><span class="line"><span class="comment">#         if name[i] % 36 &lt; 10:</span></span><br><span class="line"><span class="comment">#             name[i] = chr(name[i] % 36 + 48)</span></span><br><span class="line"><span class="comment">#         else:</span></span><br><span class="line"><span class="comment">#             name[i] = chr(name[i] % 36 + 87)</span></span><br><span class="line"><span class="comment">#     return &quot;&quot;.join(name)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 向量转名字: 训练是不用到这个函数，训练完成用这个函数得到最终结果</span></span><br><span class="line">def vec2name(vec):</span><br><span class="line">    name = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> vec:</span><br><span class="line">        <span class="keyword">if</span> i &lt; 10:</span><br><span class="line">            a = chr(i + 48)</span><br><span class="line">            name.append(a)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            a = chr(i + 87)</span><br><span class="line">            name.append(a)</span><br><span class="line">    return <span class="string">&quot;&quot;</span>.join(name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 采样函数:默认一次采集64张验证码作为一次训练</span></span><br><span class="line"><span class="comment"># 需要注意通过get_name_and_image()函数获得的image是一个含布尔值的矩阵</span></span><br><span class="line"><span class="comment"># 在这里通过1*(image.flatten())函数转变成只含0和1的1行114*450列的矩阵</span></span><br><span class="line">def get_next_batch(<span class="attribute">batch_size</span>=64):</span><br><span class="line">    batch_x = np.zeros([batch_size, IMAGE_HEIGHT*IMAGE_WIDTH])</span><br><span class="line">    batch_y = np.zeros([batch_size, MAX_CAPTCHA<span class="number">*C</span>HAR_SET_LEN])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(batch_size):</span><br><span class="line">        name, image = get_name_and_image()</span><br><span class="line">        batch_x[i, :] = 1*(image.flatten())</span><br><span class="line">        batch_y[i, :] = name2vec(name)</span><br><span class="line">    return batch_x, batch_y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义CNN(卷积神经网络):三个卷积层卷积神经网络结构</span></span><br><span class="line"><span class="comment"># 采用3个卷积层加1个全连接层的结构，在每个卷积层中都选用2*2的最大池化层和dropout层，卷积核尺寸选择5*5。，</span></span><br><span class="line"><span class="comment"># 我们的图片已经经过了3层池化层，也就是长宽都压缩了8倍(各自取整为3X9)</span></span><br><span class="line">def crack_captcha_cnn(<span class="attribute">w_alpha</span>=0.01, <span class="attribute">b_alpha</span>=0.1):</span><br><span class="line">    x = tf.reshape(X, shape=[-1, IMAGE_HEIGHT, IMAGE_WIDTH, 1])</span><br><span class="line">    # 3个卷积层</span><br><span class="line">    w_c1 = tf.Variable(w_alpha * tf.random_normal([5, 5, 1, 32]))</span><br><span class="line">    b_c1 = tf.Variable(b_alpha * tf.random_normal([32]))</span><br><span class="line">    conv1 = tf.nn.relu(tf.nn.bias_add(tf.nn.conv2d(x, w_c1, strides=[1, 1, 1, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>), b_c1))</span><br><span class="line">    conv1 = tf.nn.max_pool(conv1, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>)</span><br><span class="line">    conv1 = tf.nn.dropout(conv1, keep_prob)</span><br><span class="line"></span><br><span class="line">    w_c2 = tf.Variable(w_alpha * tf.random_normal([5, 5, 32, 64]))</span><br><span class="line">    b_c2 = tf.Variable(b_alpha * tf.random_normal([64]))</span><br><span class="line">    conv2 = tf.nn.relu(tf.nn.bias_add(tf.nn.conv2d(conv1, w_c2, strides=[1, 1, 1, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>), b_c2))</span><br><span class="line">    conv2 = tf.nn.max_pool(conv2, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>)</span><br><span class="line">    conv2 = tf.nn.dropout(conv2, keep_prob)</span><br><span class="line"></span><br><span class="line">    w_c3 = tf.Variable(w_alpha * tf.random_normal([5, 5, 64, 64]))</span><br><span class="line">    b_c3 = tf.Variable(b_alpha * tf.random_normal([64]))</span><br><span class="line">    conv3 = tf.nn.relu(tf.nn.bias_add(tf.nn.conv2d(conv2, w_c3, strides=[1, 1, 1, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>), b_c3))</span><br><span class="line">    conv3 = tf.nn.max_pool(conv3, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], <span class="attribute">padding</span>=<span class="string">&#x27;SAME&#x27;</span>)</span><br><span class="line">    conv3 = tf.nn.dropout(conv3, keep_prob)</span><br><span class="line"></span><br><span class="line">    # 1个全连接层</span><br><span class="line">    w_d = tf.Variable(w_alpha * tf.random_normal([3<span class="number">*9</span><span class="number">*64</span>, 1024]))</span><br><span class="line">    b_d = tf.Variable(b_alpha * tf.random_normal([1024]))</span><br><span class="line">    dense = tf.reshape(conv3, [-1, w_d.get_shape().as_list()[0]])</span><br><span class="line">    dense = tf.nn.relu(tf.<span class="built_in">add</span>(tf.matmul(dense, w_d), b_d))</span><br><span class="line">    dense = tf.nn.dropout(dense, keep_prob)</span><br><span class="line"></span><br><span class="line">    w_out = tf.Variable(w_alpha * tf.random_normal([1024, MAX_CAPTCHA * CHAR_SET_LEN]))</span><br><span class="line">    b_out = tf.Variable(b_alpha * tf.random_normal([MAX_CAPTCHA * CHAR_SET_LEN]))</span><br><span class="line">    out = tf.<span class="built_in">add</span>(tf.matmul(dense, w_out), b_out)</span><br><span class="line">    return out</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练函数：选择sigmoid_cross_entropy_with_logits()交叉熵来比较loss</span></span><br><span class="line"><span class="comment"># 用adam优化器来优化</span></span><br><span class="line"><span class="comment"># keep_prob = 0.3，控制着过拟合</span></span><br><span class="line">def train_crack_captcha_cnn():</span><br><span class="line">    output = crack_captcha_cnn()</span><br><span class="line">    loss = tf.reduce_mean(tf.nn.sigmoid_cross_entropy_with_logits(<span class="attribute">logits</span>=output, <span class="attribute">labels</span>=Y))</span><br><span class="line">    optimizer = tf.train.AdamOptimizer(<span class="attribute">learning_rate</span>=0.0001).minimize(loss)</span><br><span class="line">    predict = tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN])</span><br><span class="line">    max_idx_p = tf.argmax(predict, 2)</span><br><span class="line">    max_idx_l = tf.argmax(tf.reshape(Y, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span><br><span class="line">    correct_pred = tf.equal(max_idx_p, max_idx_l)</span><br><span class="line">    accuracy = tf.reduce_mean(tf.cast(correct_pred, tf.float32))</span><br><span class="line">    saver = tf.train.Saver()</span><br><span class="line">    with tf.Session() as sess:</span><br><span class="line">        sess.<span class="built_in">run</span>(tf.global_variables_initializer())</span><br><span class="line">        <span class="keyword">step</span> = 0</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            batch_x, batch_y = get_next_batch(256)</span><br><span class="line">            _, loss_ = sess.<span class="built_in">run</span>([optimizer, loss], feed_dict=&#123;X: batch_x, Y: batch_y, keep_prob: 0.2&#125;)</span><br><span class="line">            <span class="built_in">print</span>(<span class="keyword">step</span>, loss_)</span><br><span class="line">            # 每100 <span class="keyword">step</span>计算一次准确率</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">step</span> % 1000 == 0:</span><br><span class="line">                batch_x_test, batch_y_test = get_next_batch(1000)</span><br><span class="line">                acc = sess.<span class="built_in">run</span>(accuracy, feed_dict=&#123;X: batch_x_test, Y: batch_y_test, keep_prob: 1.&#125;)</span><br><span class="line">                <span class="built_in">print</span>(<span class="keyword">step</span>, acc)</span><br><span class="line">                # 如果准确率大于99%,保存模型,完成训练</span><br><span class="line">                <span class="keyword">if</span> acc &gt; 0.999:</span><br><span class="line">                    saver.save(sess, <span class="string">&quot;./crack_capcha.model&quot;</span>, <span class="attribute">global_step</span>=step)</span><br><span class="line">                    break</span><br><span class="line">            <span class="keyword">step</span> += 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># train_crack_captcha_cnn()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练完成后,注释train_crack_captcha_cnn()，取消下面的注释，开始预测，注意更改预测集目录</span></span><br><span class="line"><span class="comment"># def crack_captcha():</span></span><br><span class="line"><span class="comment">#     output = crack_captcha_cnn()</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#     saver = tf.train.Saver()</span></span><br><span class="line"><span class="comment">#     with tf.Session() as sess:</span></span><br><span class="line"><span class="comment">#         saver.restore(sess, tf.train.latest_checkpoint(&#x27;.&#x27;))</span></span><br><span class="line"><span class="comment">#         n = 1</span></span><br><span class="line"><span class="comment">#         while n &lt;= 10:</span></span><br><span class="line"><span class="comment">#             text, verification_code_training_images = get_name_and_image()</span></span><br><span class="line"><span class="comment">#             verification_code_training_images = 1 * (verification_code_training_images.flatten())</span></span><br><span class="line"><span class="comment">#             predict = tf.argmax(tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span></span><br><span class="line"><span class="comment">#             text_list = sess.run(predict, feed_dict=&#123;X: [verification_code_training_images], keep_prob: 1&#125;)</span></span><br><span class="line"><span class="comment">#             vec = text_list[0].tolist()</span></span><br><span class="line"><span class="comment">#             predict_text = vec2name(vec)</span></span><br><span class="line"><span class="comment">#             print(&quot;正确: &#123;&#125;  预测: &#123;&#125;&quot;.format(text, predict_text))</span></span><br><span class="line"><span class="comment">#             n += 1</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># crack_captcha()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def captcha():</span><br><span class="line">    output = crack_captcha_cnn()</span><br><span class="line">    saver = tf.train.Saver()</span><br><span class="line">    with tf.Session() as sess:</span><br><span class="line">        saver.restore(sess, tf.train.latest_checkpoint(<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">        first_time = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            users_number = 0</span><br><span class="line">            <span class="keyword">for</span> information <span class="keyword">in</span> info:</span><br><span class="line">                <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                    session = requests.Session()</span><br><span class="line">                    headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0&quot;</span>&#125;</span><br><span class="line">                    html = session.<span class="built_in">get</span>(IMAGE_URL, <span class="attribute">headers</span>=headers).content</span><br><span class="line">                    with open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) as file:</span><br><span class="line">                        file.write(html)</span><br><span class="line">                    img = Image.open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>).convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">                    # 二值化</span><br><span class="line">                    img = img.point(lambda x: 255 <span class="keyword">if</span> x &gt; 173 <span class="keyword">else</span> 0)</span><br><span class="line">                    img = np.array(img)</span><br><span class="line">                    img = 1 * (img.flatten())</span><br><span class="line">                    predict = tf.argmax(tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span><br><span class="line">                    text_list = sess.<span class="built_in">run</span>(predict, feed_dict=&#123;X: [img], keep_prob: 1&#125;)</span><br><span class="line">                    vec = text_list[0].tolist()</span><br><span class="line">                    # <span class="built_in">print</span>(<span class="string">&quot;预测:&quot;</span>, vec2name(vec))</span><br><span class="line"></span><br><span class="line">                    session.<span class="built_in">get</span>(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/login.jsp&#x27;</span>)</span><br><span class="line">                    data = &#123;<span class="string">&#x27;j_username&#x27;</span>: information[<span class="string">&#x27;account&#x27;</span>], <span class="string">&#x27;j_password&#x27;</span>: information[<span class="string">&#x27;password&#x27;</span>],</span><br><span class="line">                            <span class="string">&#x27;validateCode&#x27;</span>: vec2name(vec)&#125;</span><br><span class="line">                    r = session.post(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/j_spring_ids_security_check&#x27;</span>, <span class="attribute">data</span>=data, <span class="attribute">headers</span>=headers)</span><br><span class="line">                    <span class="keyword">if</span> (re.search(r<span class="string">&#x27;校验码错误&#x27;</span>, r.text, re.I | re.M)) is None:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;验证码正确通过！&quot;</span>)</span><br><span class="line">                        n = session.<span class="built_in">get</span>(</span><br><span class="line">                            <span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/jwnavmenu.do?menuItemWid=1E057E24ABAB4CAFE0540010E0235690&#x27;</span>,</span><br><span class="line">                            <span class="attribute">headers</span>=headers)</span><br><span class="line">                        soup = BeautifulSoup(n.content, <span class="attribute">features</span>=<span class="string">&#x27;html.parser&#x27;</span>)</span><br><span class="line">                        s = soup.select(<span class="string">&#x27;div[title=&quot;有效成绩&quot;] .t_con td[align=&quot;center&quot;]&#x27;</span>)</span><br><span class="line">                        subjects_number = int(len(s) / 11)</span><br><span class="line">                        # <span class="built_in">print</span>(<span class="string">&quot;科目数:&quot;</span>, subjects_number)</span><br><span class="line">                        <span class="keyword">for</span> i <span class="keyword">in</span> range(0, subjects_number):</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;序号:&#x27;</span>, s[i * 11].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;学年学期:&#x27;</span>, s[i * 11 + 1].get_text( <span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程号:&#x27;</span>, s[i * 11 + 2].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程名称:&#x27;</span>, s[i * 11 + 3].get_text( <span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程类别:&#x27;</span>, s[i * 11 + 4].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;任选课类别:&#x27;</span>, s[i * 11 + 5].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;课程性质:&#x27;</span>, s[i * 11 + 6].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;学分:&#x27;</span>, s[i * 11 + 7].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;成绩:&#x27;</span>, s[i * 11 + 8].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            # <span class="built_in">print</span>(<span class="string">&#x27;****************&#x27;</span>)</span><br><span class="line">                            ss = <span class="string">&#x27;&#123;&#125; &#123;&#125; 成绩: &#123;&#125;&#x27;</span>.format(s[i * 11].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>), s[i * 11 + 3].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>),</span><br><span class="line">                                                       s[i * 11 + 8].get_text(<span class="attribute">strip</span>=<span class="literal">True</span>))</span><br><span class="line">                            <span class="keyword">if</span> first_time:</span><br><span class="line">                                String1[users_number].append(ss)</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                String2[users_number].append(ss)</span><br><span class="line">                        # 发送邮件</span><br><span class="line">                        my_user = <span class="string">&#x27;%s&#x27;</span> % information[<span class="string">&#x27;email&#x27;</span>]</span><br><span class="line">                        sss = <span class="string">&quot;&quot;</span>.join(list(<span class="built_in">set</span>(String2[users_number]).difference(<span class="built_in">set</span>(String1[users_number]))))  # b中有而a中没有的</span><br><span class="line">                        ret = <span class="literal">True</span></span><br><span class="line">                        <span class="keyword">if</span> first_time:</span><br><span class="line">                            text = <span class="string">&#x27;\n&#x27;</span>.join(String1[users_number])</span><br><span class="line"></span><br><span class="line">                            try:</span><br><span class="line">                                msg = MIMEText(text, <span class="string">&#x27;plain&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                                msg[<span class="string">&#x27;From&#x27;</span>] = formataddr([<span class="string">&quot;weijiajin&quot;</span>, SENDER])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;To&#x27;</span>] = formataddr([<span class="string">&quot;亲～:&quot;</span>, my_user])  # 括号里的对应收件人邮箱昵称、收件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&quot;全部成绩！好好学习！&quot;</span>  # 邮件的主题，也可以说是标题</span><br><span class="line">                               <span class="built_in"> server </span>= smtplib.SMTP_SSL(<span class="string">&quot;smtp.qq.com&quot;</span>, 465)  # 发件人邮箱中的SMTP服务器，端口是465</span><br><span class="line">                                server.login(SENDER, PASSWORD)  # 括号中对应的是发件人邮箱账号、邮箱密码</span><br><span class="line">                                server.sendmail(SENDER, [my_user, ], msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span><br><span class="line">                                server.quit()  # 关闭连接</span><br><span class="line">                            except Exception:  # 如果 try 中的语句没有执行，则会执行下面的 <span class="attribute">ret</span>=<span class="literal">False</span></span><br><span class="line">                                ret = <span class="literal">False</span></span><br><span class="line">                            <span class="keyword">if</span> ret:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件成功！&quot;</span>)</span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件失败！&quot;</span>)</span><br><span class="line">                            String2[users_number].clear()</span><br><span class="line">                            users_number = + 1</span><br><span class="line">                            break</span><br><span class="line">                        elif sss == <span class="string">&quot;&quot;</span>:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&quot;没有最新成绩！不发送邮件！&quot;</span>)</span><br><span class="line">                            String2[users_number].clear()</span><br><span class="line">                            users_number = + 1</span><br><span class="line">                            break</span><br><span class="line">                        elif sss != <span class="string">&quot;&quot;</span>:</span><br><span class="line">                            text = <span class="string">&#x27;\n&#x27;</span>.join(String2[users_number])</span><br><span class="line">                            title = <span class="string">&quot;&quot;</span>.join(list(<span class="built_in">set</span>(String2[users_number]).difference(<span class="built_in">set</span>(String1[users_number]))))</span><br><span class="line">                            try:</span><br><span class="line">                                msg = MIMEText(text, <span class="string">&#x27;plain&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">                                msg[<span class="string">&#x27;From&#x27;</span>] = formataddr([<span class="string">&quot;weijiajin&quot;</span>, SENDER])  # 括号里的对应发件人邮箱昵称、发件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;To&#x27;</span>] = formataddr([<span class="string">&quot;亲～&quot;</span>, my_user])  # 括号里的对应收件人邮箱昵称、收件人邮箱账号</span><br><span class="line">                                msg[<span class="string">&#x27;Subject&#x27;</span>] = <span class="string">&quot;最新成绩出来啦～&quot;</span> + title  # 邮件的主题，也可以说是标题</span><br><span class="line">                               <span class="built_in"> server </span>= smtplib.SMTP_SSL(<span class="string">&quot;smtp.qq.com&quot;</span>, 465)  # 发件人邮箱中的SMTP服务器，端口是465</span><br><span class="line">                                server.login(SENDER, my_pass)  # 括号中对应的是发件人邮箱账号、邮箱密码</span><br><span class="line">                                server.sendmail(SENDER, [my_user, ], msg.as_string())  # 括号中对应的是发件人邮箱账号、收件人邮箱账号、发送邮件</span><br><span class="line">                                server.quit()  # 关闭连接</span><br><span class="line">                            except Exception:  # 如果 try 中的语句没有执行，则会执行下面的 <span class="attribute">ret</span>=<span class="literal">False</span></span><br><span class="line">                                ret = <span class="literal">False</span></span><br><span class="line">                            <span class="keyword">if</span> ret:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">else</span>:</span><br><span class="line">                                <span class="built_in">print</span>(<span class="string">&quot;发送邮件失败！&quot;</span>)</span><br><span class="line">                            String1[users_number].clear()</span><br><span class="line">                            String1[users_number] = String2[users_number]</span><br><span class="line">                            String2[users_number].clear()</span><br><span class="line">                            users_number = + 1</span><br><span class="line">                            break</span><br><span class="line">                        time.sleep(300)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;校验码错误！重新尝试中......&quot;</span>)</span><br><span class="line"></span><br><span class="line">            first_time = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def auto_download_train_images():</span><br><span class="line">    output = crack_captcha_cnn()</span><br><span class="line">    saver = tf.train.Saver()</span><br><span class="line">    with tf.Session() as sess:</span><br><span class="line">        saver.restore(sess, tf.train.latest_checkpoint(<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">        times1 = 0</span><br><span class="line">        times2 = 0</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            session = requests.Session()</span><br><span class="line">            headers = &#123;<span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0&quot;</span>&#125;</span><br><span class="line">            html = session.<span class="built_in">get</span>(IMAGE_URL, <span class="attribute">headers</span>=headers).content</span><br><span class="line">            with open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) as file:</span><br><span class="line">                file.write(html)</span><br><span class="line">            img = Image.open(<span class="string">&#x27;./test_captcha/test.png&#x27;</span>).convert(<span class="string">&#x27;L&#x27;</span>)</span><br><span class="line">            # 二值化</span><br><span class="line">            img = img.point(lambda x: 255 <span class="keyword">if</span> x &gt; 173 <span class="keyword">else</span> 0)</span><br><span class="line">            img1 = np.array(img)</span><br><span class="line">            img1 = 1 * (img1.flatten())</span><br><span class="line">            predict = tf.argmax(tf.reshape(output, [-1, MAX_CAPTCHA, CHAR_SET_LEN]), 2)</span><br><span class="line">            text_list = sess.<span class="built_in">run</span>(predict, feed_dict=&#123;X: [img1], keep_prob: 1&#125;)</span><br><span class="line">            vec = text_list[0].tolist()</span><br><span class="line">            # <span class="built_in">print</span>(<span class="string">&quot;预测:&quot;</span>, vec2name(vec))</span><br><span class="line">            session.<span class="built_in">get</span>(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/login.jsp&#x27;</span>)</span><br><span class="line">            data = &#123;<span class="string">&#x27;j_username&#x27;</span>: <span class="string">&#x27;201611101122&#x27;</span>, <span class="string">&#x27;j_password&#x27;</span>: <span class="string">&#x27;174519&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;validateCode&#x27;</span>: vec2name(vec)&#125;</span><br><span class="line">            r = session.post(<span class="string">&#x27;http://jwfw1.sdjzu.edu.cn/ssfw/j_spring_ids_security_check&#x27;</span>, <span class="attribute">data</span>=data, <span class="attribute">headers</span>=headers)</span><br><span class="line">            <span class="keyword">if</span> (re.search(r<span class="string">&#x27;校验码错误&#x27;</span>, r.text, re.I | re.M)) is None:</span><br><span class="line">                # <span class="built_in">print</span>(<span class="string">&quot;验证码正确通过！&quot;</span>)</span><br><span class="line">                # <span class="built_in">print</span>(times1)</span><br><span class="line">                image_name = <span class="string">&#x27;&#123;image_name&#125;.png&#x27;</span></span><br><span class="line">                img.save(os.path.join(<span class="string">&#x27;./verification_code_training_images/&#x27;</span>, image_name.format(<span class="attribute">image_name</span>=vec2name(vec))))</span><br><span class="line">                times1 = times1 + 1</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                # <span class="built_in">print</span>(<span class="string">&quot;校验码错误！&quot;</span>)</span><br><span class="line">                # <span class="built_in">print</span>(times2)</span><br><span class="line">                image_name = <span class="string">&#x27;&#123;image_name&#125;.png&#x27;</span></span><br><span class="line">                img.save(os.path.join(<span class="string">&#x27;./error_images/&#x27;</span>, image_name.format(<span class="attribute">image_name</span>=vec2name(vec))))</span><br><span class="line">                times2 = times2 + 1</span><br><span class="line">            rate = times1/(times2+times1)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;总次数: % s&quot;</span> % (times2+times1)+<span class="string">&quot;正确率：% s &quot;</span> % rate)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">captcha()</span><br><span class="line"><span class="comment"># auto_download_train_images()</span></span><br></pre></td></tr></table></figure><h4 id="TODO："><a href="#TODO：" class="headerlink" title="TODO："></a>TODO：</h4><ul><li>增加绩点计算公式</li><li>集成于微信小程序或者微信公众号</li><li>优化代码</li></ul><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ul><li><p><a href="https://morvanzhou.github.io/">https://morvanzhou.github.io/</a></p></li><li><p><a href="https://www.iswin.org/2016/10/15/Simple-CAPTCHA-Recognition-with-Machine-Learning/">https://www.iswin.org/2016/10/15/Simple-CAPTCHA-Recognition-with-Machine-Learning/</a></p></li><li><p><a href="https://finthon.com/python-tensorflow-cnn-captcha/">https://finthon.com/python-tensorflow-cnn-captcha/</a></p></li><li><p><a href="http://blog.topspeedsnail.com/archives/10858">http://blog.topspeedsnail.com/archives/10858</a></p></li></ul>]]></content>
    
    
    <summary type="html">程序自动化操作，简化成绩查询过程，节省时间，提高效率。</summary>
    
    
    
    <category term="折腾" scheme="https://weijiajin.com/blog/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="tensorflow" scheme="https://weijiajin.com/blog/tags/tensorflow/"/>
    
    <category term="python" scheme="https://weijiajin.com/blog/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://weijiajin.com/60aa4714ad3e/"/>
    <id>https://weijiajin.com/60aa4714ad3e/</id>
    <published>2017-11-25T14:12:39.000Z</published>
    <updated>2022-08-12T10:06:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick  Start"></a>Quick  Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">Welcome to Hexo!</summary>
    
    
    
    
  </entry>
  
</feed>
